{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "fal.ai video models (complete catalog from OpenAPI schemas)",
  "description": "Complete catalog of all fal.ai video generation models with full parameter schemas extracted from official OpenAPI specifications",
  "generatedAt": "2025-09-05T16:54:23.654Z",
  "source": "Targeted scraping of fal.ai video category pages + OpenAPI schema extraction",
  "totalModelsFound": 232,
  "totalModelsProcessed": 231,
  "totalParameters": 1840,
  "videoModelsOnly": true,
  "supportedCategories": [
    "text-to-video",
    "image-to-video",
    "video-to-video"
  ],
  "models": [
    {
      "id": "argil/avatars/text-to-video",
      "title": "argil/avatars/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/argil/avatars/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/zebra/9NGo8wnyQwuQTJQr4Cvht_27981df50e43459ea657ea36bee1b76b.jpg",
      "playgroundUrl": "https://fal.ai/models/argil/avatars/text-to-video",
      "documentationUrl": "https://fal.ai/models/argil/avatars/text-to-video/api",
      "inputs": [
        {
          "name": "avatar",
          "type": "string",
          "description": "Avatar",
          "required": true,
          "default": "",
          "enum": [
            "Mia outdoor (UGC)",
            "Lara (Masterclass)",
            "Ines (UGC)",
            "Maria (Masterclass)",
            "Emma (UGC)",
            "Sienna (Masterclass)",
            "Elena (UGC)",
            "Jasmine (Masterclass)",
            "Amara (Masterclass)",
            "Ryan podcast (UGC)",
            "Tyler (Masterclass)",
            "Jayse (Masterclass)",
            "Paul (Masterclass)",
            "Matteo (UGC)",
            "Daniel car (UGC)",
            "Dario (Masterclass)",
            "Viva (Masterclass)",
            "Chen (Masterclass)",
            "Alex (Masterclass)",
            "Vanessa (UGC)",
            "Laurent (UGC)",
            "Noemie car (UGC)",
            "Brandon (UGC)",
            "Byron (Masterclass)",
            "Calista (Masterclass)",
            "Milo (Masterclass)",
            "Fabien (Masterclass)",
            "Rose (UGC)"
          ],
          "examples": [
            "Noemie car (UGC)"
          ]
        },
        {
          "name": "text",
          "type": "string",
          "description": "Text",
          "required": true,
          "default": "",
          "examples": [
            "\nArgil is kinda crazy guys! You just turn a real person into \nan avatar that actually talks and moves and it's already reel-ready, \nfor TikTok, Shorts, whatever. No wasting hours editing, it still looks super pro.\n"
          ]
        },
        {
          "name": "voice",
          "type": "string",
          "description": "Voice",
          "required": true,
          "default": "",
          "enum": [
            "Rachel",
            "Clyde",
            "Roger",
            "Sarah",
            "Laura",
            "Thomas",
            "Charlie",
            "George",
            "Callum",
            "River",
            "Harry",
            "Liam",
            "Alice",
            "Matilda",
            "Will",
            "Jessica",
            "Lilly",
            "Bill",
            "Oxley",
            "Luna"
          ]
        },
        {
          "name": "remove_background",
          "type": "boolean",
          "description": "Enabling the remove background feature will result in a 50% increase in the price.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "moderation_transcription",
          "type": "string",
          "description": "Moderation Transcription"
        },
        {
          "name": "moderation_error",
          "type": "string",
          "description": "Moderation Error"
        },
        {
          "name": "moderation_flagged",
          "type": "boolean",
          "description": "Moderation Flagged"
        },
        {
          "name": "video",
          "description": "Output: video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=argil/avatars/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for argil/avatars/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the argil/avatars/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "argil/avatars/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/zebra/9NGo8wnyQwuQTJQr4Cvht_27981df50e43459ea657ea36bee1b76b.jpg",
            "playgroundUrl": "https://fal.ai/models/argil/avatars/text-to-video",
            "documentationUrl": "https://fal.ai/models/argil/avatars/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AvatarsTextToVideoInput": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "text": {
                  "examples": [
                    "\nArgil is kinda crazy guys! You just turn a real person into \nan avatar that actually talks and moves and it's already reel-ready, \nfor TikTok, Shorts, whatever. No wasting hours editing, it still looks super pro.\n"
                  ],
                  "title": "Text",
                  "type": "string"
                },
                "voice": {
                  "enum": [
                    "Rachel",
                    "Clyde",
                    "Roger",
                    "Sarah",
                    "Laura",
                    "Thomas",
                    "Charlie",
                    "George",
                    "Callum",
                    "River",
                    "Harry",
                    "Liam",
                    "Alice",
                    "Matilda",
                    "Will",
                    "Jessica",
                    "Lilly",
                    "Bill",
                    "Oxley",
                    "Luna"
                  ],
                  "title": "Voice",
                  "type": "string"
                },
                "remove_background": {
                  "title": "Remove Background",
                  "type": "boolean",
                  "description": "Enabling the remove background feature will result in a 50% increase in the price.",
                  "default": false
                },
                "avatar": {
                  "enum": [
                    "Mia outdoor (UGC)",
                    "Lara (Masterclass)",
                    "Ines (UGC)",
                    "Maria (Masterclass)",
                    "Emma (UGC)",
                    "Sienna (Masterclass)",
                    "Elena (UGC)",
                    "Jasmine (Masterclass)",
                    "Amara (Masterclass)",
                    "Ryan podcast (UGC)",
                    "Tyler (Masterclass)",
                    "Jayse (Masterclass)",
                    "Paul (Masterclass)",
                    "Matteo (UGC)",
                    "Daniel car (UGC)",
                    "Dario (Masterclass)",
                    "Viva (Masterclass)",
                    "Chen (Masterclass)",
                    "Alex (Masterclass)",
                    "Vanessa (UGC)",
                    "Laurent (UGC)",
                    "Noemie car (UGC)",
                    "Brandon (UGC)",
                    "Byron (Masterclass)",
                    "Calista (Masterclass)",
                    "Milo (Masterclass)",
                    "Fabien (Masterclass)",
                    "Rose (UGC)"
                  ],
                  "title": "Avatar",
                  "type": "string",
                  "examples": [
                    "Noemie car (UGC)"
                  ]
                }
              },
              "x-fal-order-properties": [
                "avatar",
                "text",
                "voice",
                "remove_background"
              ],
              "required": [
                "avatar",
                "text",
                "voice"
              ]
            },
            "AvatarsTextToVideoOutput": {
              "title": "InferenceResult",
              "type": "object",
              "properties": {
                "moderation_transcription": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Moderation Transcription"
                },
                "moderation_error": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Moderation Error"
                },
                "moderation_flagged": {
                  "title": "Moderation Flagged",
                  "type": "boolean",
                  "default": false
                },
                "video": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Video"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "examples": [
                    {
                      "url": "https://argildotai.s3.us-east-1.amazonaws.com/fal-resource/example_fal.mp4"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "moderation_flagged",
                "moderation_transcription",
                "moderation_error"
              ]
            },
            "Video": {
              "title": "Video",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/argil/avatars/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/argil/avatars/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/argil/avatars/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AvatarsTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/argil/avatars/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AvatarsTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "bria/video/background-removal",
      "title": "bria/video/background-removal",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/bria/video/background-removal",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
      "playgroundUrl": "https://fal.ai/models/bria/video/background-removal",
      "documentationUrl": "https://fal.ai/models/bria/video/background-removal/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "Input video to remove background from. Size should be less than 14142x14142 and duration less than 30s.",
          "required": true,
          "default": "",
          "examples": [
            "https://bria-datasets.s3.us-east-1.amazonaws.com/rmbg_tests/videos/5586521-uhd_3840_2160_25fps_original.mp4"
          ]
        },
        {
          "name": "background_color",
          "type": "string",
          "description": "Background color. Options: Transparent, Black, White, Gray, Red, Green, Blue, Yellow, Cyan, Magenta, Orange.",
          "required": false,
          "default": "Black",
          "enum": [
            "Transparent",
            "Black",
            "White",
            "Gray",
            "Red",
            "Green",
            "Blue",
            "Yellow",
            "Cyan",
            "Magenta",
            "Orange"
          ]
        },
        {
          "name": "output_container_and_codec",
          "type": "string",
          "description": "Output container and codec. Options: mp4_h265, mp4_h264, webm_vp9, mov_h265, mov_proresks, mkv_h265, mkv_h264, mkv_vp9, gif.",
          "required": false,
          "default": "webm_vp9",
          "enum": [
            "mp4_h265",
            "mp4_h264",
            "webm_vp9",
            "mov_h265",
            "mov_proresks",
            "mkv_h265",
            "mkv_h264",
            "mkv_vp9",
            "gif"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "description": "Video with removed background and audio."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=bria/video/background-removal",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for bria/video/background-removal",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the bria/video/background-removal queue.",
          "x-fal-metadata": {
            "endpointId": "bria/video/background-removal",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
            "playgroundUrl": "https://fal.ai/models/bria/video/background-removal",
            "documentationUrl": "https://fal.ai/models/bria/video/background-removal/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "VideoBackgroundRemovalInput": {
              "title": "InputRemoveBackgroundModel",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://bria-datasets.s3.us-east-1.amazonaws.com/rmbg_tests/videos/5586521-uhd_3840_2160_25fps_original.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "Input video to remove background from. Size should be less than 14142x14142 and duration less than 30s."
                },
                "output_container_and_codec": {
                  "enum": [
                    "mp4_h265",
                    "mp4_h264",
                    "webm_vp9",
                    "mov_h265",
                    "mov_proresks",
                    "mkv_h265",
                    "mkv_h264",
                    "mkv_vp9",
                    "gif"
                  ],
                  "title": "Output Container And Codec",
                  "type": "string",
                  "description": "Output container and codec. Options: mp4_h265, mp4_h264, webm_vp9, mov_h265, mov_proresks, mkv_h265, mkv_h264, mkv_vp9, gif.",
                  "default": "webm_vp9"
                },
                "background_color": {
                  "enum": [
                    "Transparent",
                    "Black",
                    "White",
                    "Gray",
                    "Red",
                    "Green",
                    "Blue",
                    "Yellow",
                    "Cyan",
                    "Magenta",
                    "Orange"
                  ],
                  "title": "Background Color",
                  "type": "string",
                  "description": "Background color. Options: Transparent, Black, White, Gray, Red, Green, Blue, Yellow, Cyan, Magenta, Orange.",
                  "default": "Black"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "background_color",
                "output_container_and_codec"
              ],
              "required": [
                "video_url"
              ]
            },
            "VideoBackgroundRemovalOutput": {
              "title": "OutputRemoveBackgroundModel",
              "type": "object",
              "properties": {
                "video": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Video"
                    },
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ],
                  "title": "Video",
                  "description": "Video with removed background and audio."
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "Video": {
              "title": "Video",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/bria/video/background-removal/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/bria/video/background-removal/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/bria/video/background-removal": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/VideoBackgroundRemovalInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/bria/video/background-removal/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/VideoBackgroundRemovalOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "bria/video/increase-resolution",
      "title": "bria/video/increase-resolution",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/bria/video/increase-resolution",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/panda/omvoJT1pplSUhjUPCyluq_3379d19b520046aa88fbc60e473629e3.jpg",
      "playgroundUrl": "https://fal.ai/models/bria/video/increase-resolution",
      "documentationUrl": "https://fal.ai/models/bria/video/increase-resolution/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "Input video to increase resolution. Size should be less than 14142x14142 and duration less than 30s.",
          "required": true,
          "default": "",
          "examples": [
            "https://bria-datasets.s3.us-east-1.amazonaws.com/video_increase_res/3446608-sd_426_240_25fps.mp4"
          ]
        },
        {
          "name": "desired_increase",
          "type": "string",
          "description": "desired_increase factor. Options: 2x, 4x.",
          "required": false,
          "default": "2",
          "enum": [
            "2",
            "4"
          ]
        },
        {
          "name": "output_container_and_codec",
          "type": "string",
          "description": "Output container and codec. Options: mp4_h265, mp4_h264, webm_vp9, mov_h265, mov_proresks, mkv_h265, mkv_h264, mkv_vp9, gif.",
          "required": false,
          "default": "webm_vp9",
          "enum": [
            "mp4_h265",
            "mp4_h264",
            "webm_vp9",
            "mov_h265",
            "mov_proresks",
            "mkv_h265",
            "mkv_h264",
            "mkv_vp9",
            "gif"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "description": "Video with removed background and audio."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=bria/video/increase-resolution",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for bria/video/increase-resolution",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the bria/video/increase-resolution queue.",
          "x-fal-metadata": {
            "endpointId": "bria/video/increase-resolution",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/panda/omvoJT1pplSUhjUPCyluq_3379d19b520046aa88fbc60e473629e3.jpg",
            "playgroundUrl": "https://fal.ai/models/bria/video/increase-resolution",
            "documentationUrl": "https://fal.ai/models/bria/video/increase-resolution/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "VideoIncreaseResolutionInput": {
              "title": "InputIncreaseResolutionModel",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://bria-datasets.s3.us-east-1.amazonaws.com/video_increase_res/3446608-sd_426_240_25fps.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "Input video to increase resolution. Size should be less than 14142x14142 and duration less than 30s."
                },
                "output_container_and_codec": {
                  "enum": [
                    "mp4_h265",
                    "mp4_h264",
                    "webm_vp9",
                    "mov_h265",
                    "mov_proresks",
                    "mkv_h265",
                    "mkv_h264",
                    "mkv_vp9",
                    "gif"
                  ],
                  "title": "Output Container And Codec",
                  "type": "string",
                  "description": "Output container and codec. Options: mp4_h265, mp4_h264, webm_vp9, mov_h265, mov_proresks, mkv_h265, mkv_h264, mkv_vp9, gif.",
                  "default": "webm_vp9"
                },
                "desired_increase": {
                  "enum": [
                    "2",
                    "4"
                  ],
                  "title": "Desired Increase",
                  "type": "string",
                  "description": "desired_increase factor. Options: 2x, 4x.",
                  "default": "2"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "desired_increase",
                "output_container_and_codec"
              ],
              "required": [
                "video_url"
              ]
            },
            "VideoIncreaseResolutionOutput": {
              "title": "OutputIncreaseResolutionModel",
              "type": "object",
              "properties": {
                "video": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Video"
                    },
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ],
                  "title": "Video",
                  "description": "Video with removed background and audio."
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "Video": {
              "title": "Video",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/bria/video/increase-resolution/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/bria/video/increase-resolution/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/bria/video/increase-resolution": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/VideoIncreaseResolutionInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/bria/video/increase-resolution/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/VideoIncreaseResolutionOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "cassetteai/video-sound-effects-generator",
      "title": "cassetteai/video-sound-effects-generator",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/cassetteai/video-sound-effects-generator",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/cassetteai-video-sound-effects-generator.webp",
      "playgroundUrl": "https://fal.ai/models/cassetteai/video-sound-effects-generator",
      "documentationUrl": "https://fal.ai/models/cassetteai/video-sound-effects-generator/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "A video file to analyze & re-sound with generated SFX.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/tiger/3NOa3BqrJfr3jJBMqGexs_final_with_sfx.mp4",
            "https://v3.fal.media/files/rabbit/vkNtbcJ3x7KmzjJZeVWQe_final_with_sfx.mp4"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The final video with the newly generated SFX track."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=cassetteai/video-sound-effects-generator",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for cassetteai/video-sound-effects-generator",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the cassetteai/video-sound-effects-generator queue.",
          "x-fal-metadata": {
            "endpointId": "cassetteai/video-sound-effects-generator",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/cassetteai-video-sound-effects-generator.webp",
            "playgroundUrl": "https://fal.ai/models/cassetteai/video-sound-effects-generator",
            "documentationUrl": "https://fal.ai/models/cassetteai/video-sound-effects-generator/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "VideoSoundEffectsGeneratorInput": {
              "title": "VideoInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/tiger/3NOa3BqrJfr3jJBMqGexs_final_with_sfx.mp4",
                    "https://v3.fal.media/files/rabbit/vkNtbcJ3x7KmzjJZeVWQe_final_with_sfx.mp4"
                  ],
                  "description": "A video file to analyze & re-sound with generated SFX.",
                  "$ref": "#/components/schemas/Video"
                }
              },
              "description": "Pydantic model for receiving a video file to analyze and re-sound.",
              "x-fal-order-properties": [
                "video_url"
              ],
              "required": [
                "video_url"
              ]
            },
            "VideoSoundEffectsGeneratorOutput": {
              "title": "VideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/tiger/3NOa3BqrJfr3jJBMqGexs_final_with_sfx.mp4"
                    }
                  ],
                  "title": "Please ensure to unmute the video after playing manually to hear the SFX.",
                  "description": "The final video with the newly generated SFX track.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "description": "Pydantic model for returning the re-sounded video back to the client.",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "Video": {
              "title": "Video",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "anyOf": [
                    {
                      "format": "binary",
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Data",
                  "description": "File data"
                }
              },
              "description": "Represents a video file.",
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/cassetteai/video-sound-effects-generator/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/cassetteai/video-sound-effects-generator/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/cassetteai/video-sound-effects-generator": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/VideoSoundEffectsGeneratorInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/cassetteai/video-sound-effects-generator/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/VideoSoundEffectsGeneratorOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "creatify/lipsync",
      "title": "creatify/lipsync",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/creatify/lipsync",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/lion/6fj0n9tYyJcr0UZ5Go1_2_80cf6f42ba2e4d03aec7e942714472f1.jpg",
      "playgroundUrl": "https://fal.ai/models/creatify/lipsync",
      "documentationUrl": "https://fal.ai/models/creatify/lipsync/api",
      "inputs": [
        {
          "name": "audio_url",
          "type": "string",
          "description": "The audio url to use for lipsync",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/penguin/IjB1sco-ydVA-szm3a1Rm_E_voice.mp3"
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "The video url to use for lipsync",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/monkey/GzfGN-LfnbobjM9h2g5PF_Eduardo.mov"
          ]
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "Loop",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The output of the lipsync"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=creatify/lipsync",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for creatify/lipsync",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the creatify/lipsync queue.",
          "x-fal-metadata": {
            "endpointId": "creatify/lipsync",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/lion/6fj0n9tYyJcr0UZ5Go1_2_80cf6f42ba2e4d03aec7e942714472f1.jpg",
            "playgroundUrl": "https://fal.ai/models/creatify/lipsync",
            "documentationUrl": "https://fal.ai/models/creatify/lipsync/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LipsyncInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/monkey/GzfGN-LfnbobjM9h2g5PF_Eduardo.mov"
                  ],
                  "description": "The video url to use for lipsync",
                  "type": "string",
                  "title": "Video Url"
                },
                "loop": {
                  "title": "Loop",
                  "type": "boolean",
                  "default": true
                },
                "audio_url": {
                  "examples": [
                    "https://v3.fal.media/files/penguin/IjB1sco-ydVA-szm3a1Rm_E_voice.mp3"
                  ],
                  "description": "The audio url to use for lipsync",
                  "type": "string",
                  "title": "Audio Url"
                }
              },
              "x-fal-order-properties": [
                "audio_url",
                "video_url",
                "loop"
              ],
              "required": [
                "audio_url",
                "video_url"
              ]
            },
            "LipsyncOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/koala/5whrKcxcHTTXzGNcep_MV_output.mp4"
                    }
                  ],
                  "description": "The output of the lipsync",
                  "$ref": "#/components/schemas/Video"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "Video": {
              "title": "Video",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/creatify/lipsync/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/creatify/lipsync/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/creatify/lipsync": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LipsyncInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/creatify/lipsync/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LipsyncOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ai-avatar",
      "title": "fal-ai/ai-avatar",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ai-avatar",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ai-avatar",
      "documentationUrl": "https://fal.ai/models/fal-ai/ai-avatar/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/koala/gmpc0QevDF9bBsL1EAYVF_1c637094161147559f0910a68275dc34.png"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "The URL of the audio file.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/penguin/PtiCYda53E9Dav25QmQYI_output.mp3"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A woman with colorful hair talking on a podcast."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 129 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
          "required": false,
          "default": 145,
          "minimum": 41,
          "maximum": 241
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the video to generate. Must be either 480p or 720p.",
          "required": false,
          "default": "480p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": 42
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "The acceleration level to use for generation.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular",
            "high"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ai-avatar",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ai-avatar",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ai-avatar queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ai-avatar",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ai-avatar",
            "documentationUrl": "https://fal.ai/models/fal-ai/ai-avatar/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AiAvatarInput": {
              "x-fal-order-properties": [
                "image_url",
                "audio_url",
                "prompt",
                "num_frames",
                "resolution",
                "seed",
                "acceleration"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman with colorful hair talking on a podcast."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the video to generate. Must be either 480p or 720p.",
                  "default": "480p"
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular",
                    "high"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "The acceleration level to use for generation.",
                  "default": "regular"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/koala/gmpc0QevDF9bBsL1EAYVF_1c637094161147559f0910a68275dc34.png"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "audio_url": {
                  "examples": [
                    "https://v3.fal.media/files/penguin/PtiCYda53E9Dav25QmQYI_output.mp3"
                  ],
                  "title": "Audio URL",
                  "type": "string",
                  "description": "The URL of the audio file."
                },
                "num_frames": {
                  "minimum": 41,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 129 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
                  "default": 145
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "default": 42
                }
              },
              "title": "AvatarSingleAudioRequest",
              "required": [
                "image_url",
                "audio_url",
                "prompt"
              ]
            },
            "AiAvatarOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "file_size": 515275,
                      "file_name": "74af6c0bdd6041c3b1130d54885e3eee.mp4",
                      "content_type": "application/octet-stream",
                      "url": "https://v3.fal.media/files/kangaroo/z6VqUwNTwzuWa6YE1g7In_74af6c0bdd6041c3b1130d54885e3eee.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "AvatarSingleAudioResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ai-avatar/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AiAvatarInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AiAvatarOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ai-avatar/multi",
      "title": "fal-ai/ai-avatar/multi",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ai-avatar/multi",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ai-avatar/multi",
      "documentationUrl": "https://fal.ai/models/fal-ai/ai-avatar/multi/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/elephant/Q2ZU6q-d-1boGXhpDgWs9_15a22f816fd34cad969b2329946267b3.png"
          ]
        },
        {
          "name": "first_audio_url",
          "type": "string",
          "description": "The URL of the Person 1 audio file.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/monkey/1XKPx3Xu-IhNLbuinVSwP_output.mp3"
          ]
        },
        {
          "name": "second_audio_url",
          "type": "string",
          "description": "The URL of the Person 2 audio file.",
          "required": false,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/oVKyL8JZ1K2GreeIMxVzm_output.mp3"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A smiling man and woman wearing headphones sit in front of microphones, appearing to host a podcast. They are engaged in conversation, looking at each other and the camera as they speak. The scene captures a lively and collaborative podcasting session."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 129 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
          "required": false,
          "default": 181,
          "minimum": 41,
          "maximum": 241
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the video to generate. Must be either 480p or 720p.",
          "required": false,
          "default": "480p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": 81
        },
        {
          "name": "use_only_first_audio",
          "type": "boolean",
          "description": "Whether to use only the first audio file.",
          "required": false,
          "default": false
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "The acceleration level to use for generation.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular",
            "high"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ai-avatar/multi",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ai-avatar/multi",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ai-avatar/multi queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ai-avatar/multi",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ai-avatar/multi",
            "documentationUrl": "https://fal.ai/models/fal-ai/ai-avatar/multi/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AiAvatarMultiInput": {
              "x-fal-order-properties": [
                "image_url",
                "first_audio_url",
                "second_audio_url",
                "prompt",
                "num_frames",
                "resolution",
                "seed",
                "use_only_first_audio",
                "acceleration"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A smiling man and woman wearing headphones sit in front of microphones, appearing to host a podcast. They are engaged in conversation, looking at each other and the camera as they speak. The scene captures a lively and collaborative podcasting session."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the video to generate. Must be either 480p or 720p.",
                  "default": "480p"
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular",
                    "high"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "The acceleration level to use for generation.",
                  "default": "regular"
                },
                "first_audio_url": {
                  "examples": [
                    "https://v3.fal.media/files/monkey/1XKPx3Xu-IhNLbuinVSwP_output.mp3"
                  ],
                  "title": "First Audio URL",
                  "type": "string",
                  "description": "The URL of the Person 1 audio file."
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/elephant/Q2ZU6q-d-1boGXhpDgWs9_15a22f816fd34cad969b2329946267b3.png"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "second_audio_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/oVKyL8JZ1K2GreeIMxVzm_output.mp3"
                  ],
                  "title": "Second Audio URL",
                  "type": "string",
                  "description": "The URL of the Person 2 audio file."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "default": 81
                },
                "use_only_first_audio": {
                  "title": "Use Only First Audio",
                  "type": "boolean",
                  "description": "Whether to use only the first audio file.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 41,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 129 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
                  "default": 181
                }
              },
              "title": "AvatarMultiAudioPersonRequest",
              "required": [
                "image_url",
                "first_audio_url",
                "prompt"
              ]
            },
            "AiAvatarMultiOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "file_size": 704757,
                      "file_name": "ab27ac57e9464dbea1ef78f7a25469d2.mp4",
                      "content_type": "application/octet-stream",
                      "url": "https://v3.fal.media/files/kangaroo/uAF7N-Ow8WwuvbFw8J4Br_ab27ac57e9464dbea1ef78f7a25469d2.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "AvatarMultiAudioResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ai-avatar/multi/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/multi/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/multi": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AiAvatarMultiInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/multi/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AiAvatarMultiOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ai-avatar/multi-text",
      "title": "fal-ai/ai-avatar/multi-text",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ai-avatar/multi-text",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ai-avatar/multi-text",
      "documentationUrl": "https://fal.ai/models/fal-ai/ai-avatar/multi-text/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/koala/vhkIF86hmgNTBll_lF1xI_3c7476642b19435aa763fe3b49cf99c7.png"
          ]
        },
        {
          "name": "first_text_input",
          "type": "string",
          "description": "The text input to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Do you know what are we eating?"
          ]
        },
        {
          "name": "second_text_input",
          "type": "string",
          "description": "The text input to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "I dont know I am eating this because our mother gave it to us. I think it is something called milky pie."
          ]
        },
        {
          "name": "voice1",
          "type": "string",
          "description": "The first person's voice to use for speech generation",
          "required": false,
          "default": "Sarah",
          "enum": [
            "Aria",
            "Roger",
            "Sarah",
            "Laura",
            "Charlie",
            "George",
            "Callum",
            "River",
            "Liam",
            "Charlotte",
            "Alice",
            "Matilda",
            "Will",
            "Jessica",
            "Eric",
            "Chris",
            "Brian",
            "Daniel",
            "Lily",
            "Bill"
          ]
        },
        {
          "name": "voice2",
          "type": "string",
          "description": "The second person's voice to use for speech generation",
          "required": false,
          "default": "Roger",
          "enum": [
            "Aria",
            "Roger",
            "Sarah",
            "Laura",
            "Charlie",
            "George",
            "Callum",
            "River",
            "Liam",
            "Charlotte",
            "Alice",
            "Matilda",
            "Will",
            "Jessica",
            "Eric",
            "Chris",
            "Brian",
            "Daniel",
            "Lily",
            "Bill"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Two kids talking on a lunch."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 129 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
          "required": false,
          "default": 191,
          "minimum": 41,
          "maximum": 241
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the video to generate. Must be either 480p or 720p.",
          "required": false,
          "default": "480p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": 81
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "The acceleration level to use for generation.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular",
            "high"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ai-avatar/multi-text",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ai-avatar/multi-text",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ai-avatar/multi-text queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ai-avatar/multi-text",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ai-avatar/multi-text",
            "documentationUrl": "https://fal.ai/models/fal-ai/ai-avatar/multi-text/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AiAvatarMultiTextInput": {
              "x-fal-order-properties": [
                "image_url",
                "first_text_input",
                "second_text_input",
                "voice1",
                "voice2",
                "prompt",
                "num_frames",
                "resolution",
                "seed",
                "acceleration"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Two kids talking on a lunch."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "second_text_input": {
                  "examples": [
                    "I dont know I am eating this because our mother gave it to us. I think it is something called milky pie."
                  ],
                  "title": "Second Text Input",
                  "type": "string",
                  "description": "The text input to guide video generation."
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular",
                    "high"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "The acceleration level to use for generation.",
                  "default": "regular"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the video to generate. Must be either 480p or 720p.",
                  "default": "480p"
                },
                "first_text_input": {
                  "examples": [
                    "Do you know what are we eating?"
                  ],
                  "title": "First Text Input",
                  "type": "string",
                  "description": "The text input to guide video generation."
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/koala/vhkIF86hmgNTBll_lF1xI_3c7476642b19435aa763fe3b49cf99c7.png"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "voice2": {
                  "enum": [
                    "Aria",
                    "Roger",
                    "Sarah",
                    "Laura",
                    "Charlie",
                    "George",
                    "Callum",
                    "River",
                    "Liam",
                    "Charlotte",
                    "Alice",
                    "Matilda",
                    "Will",
                    "Jessica",
                    "Eric",
                    "Chris",
                    "Brian",
                    "Daniel",
                    "Lily",
                    "Bill"
                  ],
                  "title": "Voice2",
                  "type": "string",
                  "description": "The second person's voice to use for speech generation",
                  "default": "Roger"
                },
                "voice1": {
                  "enum": [
                    "Aria",
                    "Roger",
                    "Sarah",
                    "Laura",
                    "Charlie",
                    "George",
                    "Callum",
                    "River",
                    "Liam",
                    "Charlotte",
                    "Alice",
                    "Matilda",
                    "Will",
                    "Jessica",
                    "Eric",
                    "Chris",
                    "Brian",
                    "Daniel",
                    "Lily",
                    "Bill"
                  ],
                  "title": "Voice1",
                  "type": "string",
                  "description": "The first person's voice to use for speech generation",
                  "default": "Sarah"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "default": 81
                },
                "num_frames": {
                  "minimum": 41,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 129 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
                  "default": 191
                }
              },
              "title": "AvatarMultiTextRequest",
              "required": [
                "image_url",
                "first_text_input",
                "second_text_input",
                "prompt"
              ]
            },
            "AiAvatarMultiTextOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "file_size": 352679,
                      "file_name": "30b76b90c2164f9a926527497c20832b.mp4",
                      "content_type": "application/octet-stream",
                      "url": "https://v3.fal.media/files/zebra/lKMkUvzCqKn-gHC0vyUPP_30b76b90c2164f9a926527497c20832b.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "AvatarMultiTextResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ai-avatar/multi-text/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/multi-text/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/multi-text": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AiAvatarMultiTextInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/multi-text/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AiAvatarMultiTextOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ai-avatar/single-text",
      "title": "fal-ai/ai-avatar/single-text",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ai-avatar/single-text",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/penguin/ETFEnZEbEj9nc6e1XdFG8_6f87551d505640c89d59f8018dd0ffb0.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ai-avatar/single-text",
      "documentationUrl": "https://fal.ai/models/fal-ai/ai-avatar/single-text/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/panda/HuM21CXMf0q7OO2zbvwhV_c4533aada79a495b90e50e32dc9b83a8.png"
          ]
        },
        {
          "name": "text_input",
          "type": "string",
          "description": "The text input to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Spend more time with people who make you feel alive, and less with things that drain your soul."
          ]
        },
        {
          "name": "voice",
          "type": "string",
          "description": "The voice to use for speech generation",
          "required": true,
          "default": "",
          "enum": [
            "Aria",
            "Roger",
            "Sarah",
            "Laura",
            "Charlie",
            "George",
            "Callum",
            "River",
            "Liam",
            "Charlotte",
            "Alice",
            "Matilda",
            "Will",
            "Jessica",
            "Eric",
            "Chris",
            "Brian",
            "Daniel",
            "Lily",
            "Bill"
          ],
          "examples": [
            "Bill"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "An elderly man with a white beard and headphones records audio with a microphone. He appears engaged and expressive, suggesting a podcast or voiceover."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 129 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
          "required": false,
          "default": 136,
          "minimum": 41,
          "maximum": 241
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the video to generate. Must be either 480p or 720p.",
          "required": false,
          "default": "480p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": 42
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "The acceleration level to use for generation.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular",
            "high"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ai-avatar/single-text",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ai-avatar/single-text",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ai-avatar/single-text queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ai-avatar/single-text",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/penguin/ETFEnZEbEj9nc6e1XdFG8_6f87551d505640c89d59f8018dd0ffb0.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ai-avatar/single-text",
            "documentationUrl": "https://fal.ai/models/fal-ai/ai-avatar/single-text/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AiAvatarSingleTextInput": {
              "x-fal-order-properties": [
                "image_url",
                "text_input",
                "voice",
                "prompt",
                "num_frames",
                "resolution",
                "seed",
                "acceleration"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "An elderly man with a white beard and headphones records audio with a microphone. He appears engaged and expressive, suggesting a podcast or voiceover."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the video to generate. Must be either 480p or 720p.",
                  "default": "480p"
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular",
                    "high"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "The acceleration level to use for generation.",
                  "default": "regular"
                },
                "text_input": {
                  "examples": [
                    "Spend more time with people who make you feel alive, and less with things that drain your soul."
                  ],
                  "title": "Text Input",
                  "type": "string",
                  "description": "The text input to guide video generation."
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/panda/HuM21CXMf0q7OO2zbvwhV_c4533aada79a495b90e50e32dc9b83a8.png"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "voice": {
                  "examples": [
                    "Bill"
                  ],
                  "title": "Voice",
                  "type": "string",
                  "enum": [
                    "Aria",
                    "Roger",
                    "Sarah",
                    "Laura",
                    "Charlie",
                    "George",
                    "Callum",
                    "River",
                    "Liam",
                    "Charlotte",
                    "Alice",
                    "Matilda",
                    "Will",
                    "Jessica",
                    "Eric",
                    "Chris",
                    "Brian",
                    "Daniel",
                    "Lily",
                    "Bill"
                  ],
                  "description": "The voice to use for speech generation"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "default": 42
                },
                "num_frames": {
                  "minimum": 41,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 129 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
                  "default": 136
                }
              },
              "title": "AvatarSingleTextRequest",
              "required": [
                "image_url",
                "text_input",
                "voice",
                "prompt"
              ]
            },
            "AiAvatarSingleTextOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "file_size": 797478,
                      "file_name": "6c9dd31e1d9a4482877747a52a661a0a.mp4",
                      "content_type": "application/octet-stream",
                      "url": "https://v3.fal.media/files/elephant/-huMN0zTaXmBr2CqzCMps_6c9dd31e1d9a4482877747a52a661a0a.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "AvatarSingleTextResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ai-avatar/single-text/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/single-text/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/single-text": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AiAvatarSingleTextInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ai-avatar/single-text/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AiAvatarSingleTextOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/amt-interpolation",
      "title": "fal-ai/amt-interpolation",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/amt-interpolation",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/amt-interpolation.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/amt-interpolation",
      "documentationUrl": "https://fal.ai/models/fal-ai/amt-interpolation/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the video to be processed",
          "required": true,
          "default": "",
          "examples": [
            "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-2.gif"
          ]
        },
        {
          "name": "output_fps",
          "type": "integer",
          "description": "Output frames per second",
          "required": false,
          "default": 24
        },
        {
          "name": "recursive_interpolation_passes",
          "type": "integer",
          "description": "Number of recursive interpolation passes",
          "required": false,
          "default": 2
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "Generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/amt-interpolation",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/amt-interpolation",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/amt-interpolation queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/amt-interpolation",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/amt-interpolation.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/amt-interpolation",
            "documentationUrl": "https://fal.ai/models/fal-ai/amt-interpolation/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AmtInterpolationInput": {
              "title": "AMTInterpolationInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-2.gif"
                  ],
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL of the video to be processed"
                },
                "recursive_interpolation_passes": {
                  "max": 10,
                  "title": "Recursive Interpolation Passes",
                  "type": "integer",
                  "description": "Number of recursive interpolation passes",
                  "min": 1,
                  "default": 2
                },
                "output_fps": {
                  "max": 60,
                  "title": "Output FPS",
                  "type": "integer",
                  "description": "Output frames per second",
                  "min": 1,
                  "default": 24
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "output_fps",
                "recursive_interpolation_passes"
              ],
              "required": [
                "video_url"
              ]
            },
            "AmtInterpolationOutput": {
              "title": "AMTInterpolationOutput",
              "type": "object",
              "properties": {
                "video": {
                  "title": "Video",
                  "description": "Generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/amt-interpolation/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/amt-interpolation/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/amt-interpolation": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AmtInterpolationInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/amt-interpolation/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AmtInterpolationOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/amt-interpolation/frame-interpolation",
      "title": "fal-ai/amt-interpolation/frame-interpolation",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/amt-interpolation/frame-interpolation",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/amt-interpolation.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/amt-interpolation/frame-interpolation",
      "documentationUrl": "https://fal.ai/models/fal-ai/amt-interpolation/frame-interpolation/api",
      "inputs": [
        {
          "name": "frames",
          "type": "array",
          "description": "Frames to interpolate",
          "required": true,
          "default": [],
          "examples": [
            [
              {
                "url": "https://storage.googleapis.com/falserverless/model_tests/amt-interpolation/start.png"
              },
              {
                "url": "https://storage.googleapis.com/falserverless/model_tests/amt-interpolation/end.png"
              }
            ]
          ]
        },
        {
          "name": "output_fps",
          "type": "integer",
          "description": "Output frames per second",
          "required": false,
          "default": 24
        },
        {
          "name": "recursive_interpolation_passes",
          "type": "integer",
          "description": "Number of recursive interpolation passes",
          "required": false,
          "default": 4
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "Generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/amt-interpolation/frame-interpolation",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/amt-interpolation/frame-interpolation",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/amt-interpolation/frame-interpolation queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/amt-interpolation/frame-interpolation",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/amt-interpolation.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/amt-interpolation/frame-interpolation",
            "documentationUrl": "https://fal.ai/models/fal-ai/amt-interpolation/frame-interpolation/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AmtInterpolationFrameInterpolationInput": {
              "title": "AMTFrameInterpolationInput",
              "type": "object",
              "properties": {
                "frames": {
                  "examples": [
                    [
                      {
                        "url": "https://storage.googleapis.com/falserverless/model_tests/amt-interpolation/start.png"
                      },
                      {
                        "url": "https://storage.googleapis.com/falserverless/model_tests/amt-interpolation/end.png"
                      }
                    ]
                  ],
                  "title": "Frames",
                  "type": "array",
                  "description": "Frames to interpolate",
                  "items": {
                    "$ref": "#/components/schemas/Frame"
                  }
                },
                "recursive_interpolation_passes": {
                  "max": 10,
                  "title": "Recursive Interpolation Passes",
                  "type": "integer",
                  "description": "Number of recursive interpolation passes",
                  "min": 1,
                  "default": 4
                },
                "output_fps": {
                  "max": 60,
                  "title": "Output FPS",
                  "type": "integer",
                  "description": "Output frames per second",
                  "min": 1,
                  "default": 24
                }
              },
              "x-fal-order-properties": [
                "frames",
                "output_fps",
                "recursive_interpolation_passes"
              ],
              "required": [
                "frames"
              ]
            },
            "AmtInterpolationFrameInterpolationOutput": {
              "title": "AMTInterpolationOutput",
              "type": "object",
              "properties": {
                "video": {
                  "title": "Video",
                  "description": "Generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "Frame": {
              "title": "Frame",
              "type": "object",
              "properties": {
                "url": {
                  "title": "URL",
                  "type": "string",
                  "description": "URL of the frame"
                }
              },
              "x-fal-order-properties": [
                "url"
              ],
              "required": [
                "url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/amt-interpolation/frame-interpolation/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/amt-interpolation/frame-interpolation/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/amt-interpolation/frame-interpolation": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AmtInterpolationFrameInterpolationInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/amt-interpolation/frame-interpolation/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AmtInterpolationFrameInterpolationOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/animatediff-sparsectrl-lcm",
      "title": "fal-ai/animatediff-sparsectrl-lcm",
      "description": "Generate high-quality videos from text descriptions using AnimateDiff for stable and consistent video animation.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/animatediff-sparsectrl-lcm",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ad-sparsectrl-lcm.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/animatediff-sparsectrl-lcm",
      "documentationUrl": "https://fal.ai/models/fal-ai/animatediff-sparsectrl-lcm/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to use for generating the image. Be as descriptive as possible for best results.",
          "required": true,
          "default": "",
          "examples": [
            "Drone footage, futuristic city at night, synthwave, vaporware, neon lights, highly detailed, masterpeice, high quality"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "\n            The negative prompt to use. Use it to specify what you don't want.\n        ",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low resolution, bad, ugly, low quality, pixelated, interpolated, compression artifacts, noisey, grainy"
          ]
        },
        {
          "name": "controlnet_type",
          "type": "string",
          "description": "The type of controlnet to use for generating the video. The controlnet determines how the video will be animated.",
          "required": false,
          "default": "scribble",
          "enum": [
            "scribble",
            "rgb"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Increasing the amount of steps tells Stable Diffusion that it should take more steps to generate your final result which can increase the amount of detail in your image.",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 12
        },
        {
          "name": "guidance_scale",
          "type": "integer",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 2
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n        The same seed and the same prompt given to the same version of Stable\n        Diffusion will output the same image every time.\n        ",
          "required": false,
          "default": null,
          "examples": [
            42
          ]
        },
        {
          "name": "keyframe_0_image_url",
          "type": "string",
          "description": "The URL of the first keyframe to use for the generation.",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/scribble2/scribble_2_1.png"
          ]
        },
        {
          "name": "keyframe_0_index",
          "type": "integer",
          "description": "The frame index of the first keyframe to use for the generation.",
          "required": false,
          "default": 0,
          "examples": [
            0
          ]
        },
        {
          "name": "keyframe_1_image_url",
          "type": "string",
          "description": "The URL of the second keyframe to use for the generation.",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/scribble2/scribble_2_2.png"
          ]
        },
        {
          "name": "keyframe_1_index",
          "type": "integer",
          "description": "The frame index of the second keyframe to use for the generation.",
          "required": false,
          "default": 0,
          "examples": [
            8
          ]
        },
        {
          "name": "keyframe_2_image_url",
          "type": "string",
          "description": "The URL of the third keyframe to use for the generation.",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/scribble2/scribble_2_3.png"
          ]
        },
        {
          "name": "keyframe_2_index",
          "type": "integer",
          "description": "The frame index of the third keyframe to use for the generation.",
          "required": false,
          "default": 0,
          "examples": [
            15
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used to generate the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/animatediff-sparsectrl-lcm",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/animatediff-sparsectrl-lcm",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/animatediff-sparsectrl-lcm queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/animatediff-sparsectrl-lcm",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ad-sparsectrl-lcm.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/animatediff-sparsectrl-lcm",
            "documentationUrl": "https://fal.ai/models/fal-ai/animatediff-sparsectrl-lcm/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AnimatediffSparsectrlLcmInput": {
              "title": "AnimatediffLCMInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Drone footage, futuristic city at night, synthwave, vaporware, neon lights, highly detailed, masterpeice, high quality"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to use for generating the image. Be as descriptive as possible for best results."
                },
                "seed": {
                  "examples": [
                    42
                  ],
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n        The same seed and the same prompt given to the same version of Stable\n        Diffusion will output the same image every time.\n        "
                },
                "controlnet_type": {
                  "enum": [
                    "scribble",
                    "rgb"
                  ],
                  "title": "Controlnet Type",
                  "type": "string",
                  "description": "The type of controlnet to use for generating the video. The controlnet determines how the video will be animated.",
                  "default": "scribble"
                },
                "keyframe_2_index": {
                  "examples": [
                    15
                  ],
                  "title": "Keyframe 2 Index",
                  "type": "integer",
                  "description": "The frame index of the third keyframe to use for the generation.",
                  "nullable": false,
                  "default": 0
                },
                "keyframe_0_index": {
                  "examples": [
                    0
                  ],
                  "title": "Keyframe 0 Index",
                  "type": "integer",
                  "description": "The frame index of the first keyframe to use for the generation.",
                  "nullable": false,
                  "default": 0
                },
                "keyframe_1_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/scribble2/scribble_2_2.png"
                  ],
                  "title": "Keyframe 1 Image Url",
                  "type": "string",
                  "description": "The URL of the second keyframe to use for the generation.",
                  "nullable": true
                },
                "keyframe_1_index": {
                  "examples": [
                    8
                  ],
                  "title": "Keyframe 1 Index",
                  "type": "integer",
                  "description": "The frame index of the second keyframe to use for the generation.",
                  "nullable": false,
                  "default": 0
                },
                "guidance_scale": {
                  "minimum": 0,
                  "maximum": 2,
                  "type": "integer",
                  "title": "Classifier-Free Guidance scale (CFG)",
                  "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
                  "default": 1
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 12,
                  "type": "integer",
                  "title": "Number of inference steps",
                  "description": "Increasing the amount of steps tells Stable Diffusion that it should take more steps to generate your final result which can increase the amount of detail in your image.",
                  "default": 4
                },
                "keyframe_2_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/scribble2/scribble_2_3.png"
                  ],
                  "title": "Keyframe 2 Image Url",
                  "type": "string",
                  "description": "The URL of the third keyframe to use for the generation.",
                  "nullable": true
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low resolution, bad, ugly, low quality, pixelated, interpolated, compression artifacts, noisey, grainy"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "\n            The negative prompt to use. Use it to specify what you don't want.\n        ",
                  "default": ""
                },
                "keyframe_0_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/scribble2/scribble_2_1.png"
                  ],
                  "title": "Keyframe 0 Image Url",
                  "type": "string",
                  "description": "The URL of the first keyframe to use for the generation.",
                  "nullable": true
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "controlnet_type",
                "num_inference_steps",
                "guidance_scale",
                "seed",
                "keyframe_0_image_url",
                "keyframe_0_index",
                "keyframe_1_image_url",
                "keyframe_1_index",
                "keyframe_2_image_url",
                "keyframe_2_index"
              ],
              "required": [
                "prompt"
              ]
            },
            "AnimatediffSparsectrlLcmOutput": {
              "title": "AnimatediffLCMOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used to generate the video."
                },
                "video": {
                  "title": "Video",
                  "description": "Generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "examples": [
                    "https://url.to/generated/file/z9RV14K95DvU.png"
                  ],
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/animatediff-sparsectrl-lcm/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/animatediff-sparsectrl-lcm/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/animatediff-sparsectrl-lcm": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AnimatediffSparsectrlLcmInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/animatediff-sparsectrl-lcm/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AnimatediffSparsectrlLcmOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/aura-flow",
      "title": "fal-ai/aura-flow",
      "description": "AI-powered video generation.",
      "task": "text-to-image",
      "endpoint": "https://queue.fal.run/fal-ai/aura-flow",
      "category": "text-to-image",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/aura-flow.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/aura-flow",
      "documentationUrl": "https://fal.ai/models/fal-ai/aura-flow/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate images from",
          "required": true,
          "default": "",
          "examples": [
            "Close-up portrait of a majestic iguana with vibrant blue-green scales, piercing amber eyes, and orange spiky crest. Intricate textures and details visible on scaly skin. Wrapped in dark hood, giving regal appearance. Dramatic lighting against black background. Hyper-realistic, high-resolution image showcasing the reptile's expressive features and coloration."
          ]
        },
        {
          "name": "num_images",
          "type": "integer",
          "description": "The number of images to generate",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 2
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating images",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier free guidance scale",
          "required": false,
          "default": 3.5,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to take",
          "required": false,
          "default": 50,
          "minimum": 20,
          "maximum": 50
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to perform prompt expansion (recommended)",
          "required": false,
          "default": true
        },
        {
          "name": "sync_mode",
          "type": "boolean",
          "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The expanded prompt"
        },
        {
          "name": "images",
          "type": "array",
          "description": "The generated images"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used to generate the images"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/aura-flow",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/aura-flow",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/aura-flow queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/aura-flow",
            "category": "text-to-image",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/aura-flow.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/aura-flow",
            "documentationUrl": "https://fal.ai/models/fal-ai/aura-flow/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AuraFlowInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Close-up portrait of a majestic iguana with vibrant blue-green scales, piercing amber eyes, and orange spiky crest. Intricate textures and details visible on scaly skin. Wrapped in dark hood, giving regal appearance. Dramatic lighting against black background. Hyper-realistic, high-resolution image showcasing the reptile's expressive features and coloration."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate images from"
                },
                "num_images": {
                  "minimum": 1,
                  "maximum": 2,
                  "type": "integer",
                  "title": "Num Images",
                  "description": "The number of images to generate",
                  "default": 1
                },
                "expand_prompt": {
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to perform prompt expansion (recommended)",
                  "default": true
                },
                "sync_mode": {
                  "title": "Sync Mode",
                  "type": "boolean",
                  "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
                  "default": false
                },
                "guidance_scale": {
                  "minimum": 0,
                  "maximum": 20,
                  "type": "number",
                  "title": "Guidance Scale",
                  "description": "Classifier free guidance scale",
                  "default": 3.5
                },
                "num_inference_steps": {
                  "minimum": 20,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "The number of inference steps to take",
                  "default": 50
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating images"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "num_images",
                "seed",
                "guidance_scale",
                "num_inference_steps",
                "expand_prompt",
                "sync_mode"
              ],
              "required": [
                "prompt"
              ]
            },
            "AuraFlowOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The expanded prompt"
                },
                "images": {
                  "title": "Images",
                  "type": "array",
                  "description": "The generated images",
                  "items": {
                    "$ref": "#/components/schemas/Image"
                  }
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used to generate the images"
                }
              },
              "x-fal-order-properties": [
                "images",
                "seed",
                "prompt"
              ],
              "required": [
                "images",
                "seed",
                "prompt"
              ]
            },
            "Image": {
              "description": "Represents an image file.",
              "type": "object",
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data",
                "width",
                "height"
              ],
              "title": "Image",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "height": {
                  "examples": [
                    1024
                  ],
                  "title": "Height",
                  "type": "integer",
                  "description": "The height of the image in pixels."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "width": {
                  "examples": [
                    1024
                  ],
                  "title": "Width",
                  "type": "integer",
                  "description": "The width of the image in pixels."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/aura-flow/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/aura-flow/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/aura-flow": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AuraFlowInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/aura-flow/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AuraFlowOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/auto-caption",
      "title": "fal-ai/auto-caption",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/auto-caption",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/caption_thumbnail.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/auto-caption",
      "documentationUrl": "https://fal.ai/models/fal-ai/auto-caption/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the .mp4 video with audio. Only videos of size <100MB are allowed.",
          "required": true,
          "default": ""
        },
        {
          "name": "txt_color",
          "type": "string",
          "description": "Colour of the text. Can be a RGB tuple, a color name, or an hexadecimal notation.",
          "required": false,
          "default": "white"
        },
        {
          "name": "txt_font",
          "type": "string",
          "description": "Font for generated captions. Choose one in 'Arial','Standard','Garamond', 'Times New Roman','Georgia', or pass a url to a .ttf file",
          "required": false,
          "default": "Standard"
        },
        {
          "name": "font_size",
          "type": "integer",
          "description": "Size of text in generated captions.",
          "required": false,
          "default": 24
        },
        {
          "name": "stroke_width",
          "type": "integer",
          "description": "Width of the text strokes in pixels",
          "required": false,
          "default": 1
        },
        {
          "name": "left_align",
          "type": "string",
          "description": "Left-to-right alignment of the text. Can be a string ('left', 'center', 'right') or a float (0.0-1.0)",
          "required": false,
          "default": "center"
        },
        {
          "name": "top_align",
          "type": "string",
          "description": "Top-to-bottom alignment of the text. Can be a string ('top', 'center', 'bottom') or a float (0.0-1.0)",
          "required": false,
          "default": "center"
        },
        {
          "name": "refresh_interval",
          "type": "number",
          "description": "Number of seconds the captions should stay on screen. A higher number will also result in more text being displayed at once.",
          "required": false,
          "default": 1.5,
          "minimum": 0.5,
          "maximum": 3
        }
      ],
      "outputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the caption .mp4 video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/auto-caption",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/auto-caption",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/auto-caption queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/auto-caption",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/caption_thumbnail.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/auto-caption",
            "documentationUrl": "https://fal.ai/models/fal-ai/auto-caption/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AutoCaptionInput": {
              "title": "CaptionInput",
              "type": "object",
              "properties": {
                "txt_font": {
                  "title": "Txt Font",
                  "type": "string",
                  "description": "Font for generated captions. Choose one in 'Arial','Standard','Garamond', 'Times New Roman','Georgia', or pass a url to a .ttf file",
                  "default": "Standard"
                },
                "video_url": {
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL to the .mp4 video with audio. Only videos of size <100MB are allowed."
                },
                "top_align": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "title": "Top Align",
                  "description": "Top-to-bottom alignment of the text. Can be a string ('top', 'center', 'bottom') or a float (0.0-1.0)",
                  "default": "center"
                },
                "txt_color": {
                  "title": "Txt Color",
                  "type": "string",
                  "description": "Colour of the text. Can be a RGB tuple, a color name, or an hexadecimal notation.",
                  "default": "white"
                },
                "stroke_width": {
                  "title": "Stroke Width",
                  "type": "integer",
                  "description": "Width of the text strokes in pixels",
                  "default": 1
                },
                "refresh_interval": {
                  "minimum": 0.5,
                  "maximum": 3,
                  "type": "number",
                  "title": "Refresh Interval",
                  "description": "Number of seconds the captions should stay on screen. A higher number will also result in more text being displayed at once.",
                  "default": 1.5
                },
                "font_size": {
                  "title": "Font Size",
                  "type": "integer",
                  "description": "Size of text in generated captions.",
                  "default": 24
                },
                "left_align": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "title": "Left Align",
                  "description": "Left-to-right alignment of the text. Can be a string ('left', 'center', 'right') or a float (0.0-1.0)",
                  "default": "center"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "txt_color",
                "txt_font",
                "font_size",
                "stroke_width",
                "left_align",
                "top_align",
                "refresh_interval"
              ],
              "required": [
                "video_url"
              ]
            },
            "AutoCaptionOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "video_url": {
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL to the caption .mp4 video."
                }
              },
              "x-fal-order-properties": [
                "video_url"
              ],
              "required": [
                "video_url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/auto-caption/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/auto-caption/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/auto-caption": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AutoCaptionInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/auto-caption/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AutoCaptionOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ben/v2/video",
      "title": "fal-ai/ben/v2/video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ben/v2/video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/Ben2/Vi9PBzFF8BfuKGsLCvoH-_773fe2c0efc744af900eaac2047b9b5f.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ben/v2/video",
      "documentationUrl": "https://fal.ai/models/fal-ai/ben/v2/video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of video to be used for background removal.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/gallery/Ben2/100063-video-2160.mp4"
          ]
        },
        {
          "name": "background_color",
          "type": "array",
          "description": "Optional RGB values (0-255) for the background color. If not provided, the background will be transparent. For ex: [0, 0, 0]",
          "required": false,
          "default": [],
          "minItems": 3,
          "maxItems": 3
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducible generation.",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ben/v2/video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ben/v2/video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ben/v2/video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ben/v2/video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/Ben2/Vi9PBzFF8BfuKGsLCvoH-_773fe2c0efc744af900eaac2047b9b5f.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ben/v2/video",
            "documentationUrl": "https://fal.ai/models/fal-ai/ben/v2/video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "BenV2VideoInput": {
              "title": "Ben2InputVideo",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/gallery/Ben2/100063-video-2160.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of video to be used for background removal."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducible generation."
                },
                "background_color": {
                  "title": "Background Color",
                  "type": "array",
                  "minItems": 3,
                  "description": "Optional RGB values (0-255) for the background color. If not provided, the background will be transparent. For ex: [0, 0, 0]",
                  "maxItems": 3,
                  "items": {
                    "0": {
                      "type": "integer"
                    },
                    "1": {
                      "type": "integer"
                    },
                    "2": {
                      "type": "integer"
                    }
                  }
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "background_color",
                "seed"
              ],
              "required": [
                "video_url"
              ]
            },
            "BenV2VideoOutput": {
              "title": "Ben2OutputVideo",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                },
                "video": {
                  "examples": [
                    {
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/gallery/Ben2/foreground.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ben/v2/video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ben/v2/video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ben/v2/video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BenV2VideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ben/v2/video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BenV2VideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/bytedance/omnihuman",
      "title": "fal-ai/bytedance/omnihuman",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/bytedance/omnihuman",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/omnihuman",
      "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/omnihuman/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image used to generate the video",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/omnihuman.png"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "The URL of the audio file to generate the video. Audio must be under 30s long.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/omnihuman_audio.mp3"
          ]
        }
      ],
      "outputs": [
        {
          "name": "duration",
          "type": "number",
          "description": "Duration of audio input/video output as used for billing."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/bytedance/omnihuman",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/bytedance/omnihuman",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/bytedance/omnihuman queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/bytedance/omnihuman",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/omnihuman",
            "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/omnihuman/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "BytedanceOmnihumanInput": {
              "title": "OmniHumanInput",
              "type": "object",
              "properties": {
                "audio_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/omnihuman_audio.mp3"
                  ],
                  "title": "Audio Url",
                  "type": "string",
                  "description": "The URL of the audio file to generate the video. Audio must be under 30s long."
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/omnihuman.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the image used to generate the video"
                }
              },
              "x-fal-order-properties": [
                "image_url",
                "audio_url"
              ],
              "required": [
                "image_url",
                "audio_url"
              ]
            },
            "BytedanceOmnihumanOutput": {
              "title": "OmniHumanOutput",
              "type": "object",
              "properties": {
                "duration": {
                  "title": "Duration",
                  "type": "number",
                  "description": "Duration of audio input/video output as used for billing."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/omnihuman_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "duration"
              ],
              "required": [
                "video",
                "duration"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/bytedance/omnihuman/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/omnihuman/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/omnihuman": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BytedanceOmnihumanInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/omnihuman/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BytedanceOmnihumanOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/bytedance/seedance/v1/lite/image-to-video",
      "title": "fal-ai/bytedance/seedance/v1/lite/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/bytedance/seedance/v1/lite/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used to generate the video",
          "required": true,
          "default": "",
          "examples": [
            "A little dog is running in the sunshine. The camera follows the dog as it plays in a garden."
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Video resolution - 480p for faster generation, 720p for higher quality",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "Duration of the video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12"
          ]
        },
        {
          "name": "camera_fixed",
          "type": "boolean",
          "description": "Whether to fix the camera position",
          "required": false,
          "default": false
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed to control video generation. Use -1 for random.",
          "required": false,
          "default": null
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image used to generate video",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/koala/f_xmiodPjhiKjdBkFmTu1.png"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "The URL of the image the video ends with. Defaults to None.",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generation"
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/bytedance/seedance/v1/lite/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/bytedance/seedance/v1/lite/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/bytedance/seedance/v1/lite/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/bytedance/seedance/v1/lite/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "BytedanceSeedanceV1LiteImageToVideoInput": {
              "title": "SeedanceImageToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A little dog is running in the sunshine. The camera follows the dog as it plays in a garden."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used to generate the video"
                },
                "duration": {
                  "enum": [
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "11",
                    "12"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "Duration of the video in seconds",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Video resolution - 480p for faster generation, 720p for higher quality",
                  "default": "720p"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/koala/f_xmiodPjhiKjdBkFmTu1.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the image used to generate video"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "camera_fixed": {
                  "title": "Camera Fixed",
                  "type": "boolean",
                  "description": "Whether to fix the camera position",
                  "default": false
                },
                "end_image_url": {
                  "title": "End Image Url",
                  "type": "string",
                  "description": "The URL of the image the video ends with. Defaults to None."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed to control video generation. Use -1 for random."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "resolution",
                "duration",
                "camera_fixed",
                "seed",
                "enable_safety_checker",
                "image_url",
                "end_image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "BytedanceSeedanceV1LiteImageToVideoOutput": {
              "title": "SeedanceVideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "examples": [
                    42
                  ],
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generation"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/penguin/qmLZSvOIzTKs6bDFXiEtH_video.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/bytedance/seedance/v1/lite/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BytedanceSeedanceV1LiteImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BytedanceSeedanceV1LiteImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/bytedance/seedance/v1/lite/reference-to-video",
      "title": "fal-ai/bytedance/seedance/v1/lite/reference-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/bytedance/seedance/v1/lite/reference-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/kangaroo/B49-COdFROSlS850S1PfV_be7c6c85a41b4410ae02216253e5c6f8.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/reference-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/reference-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used to generate the video",
          "required": true,
          "default": "",
          "examples": [
            "The girl catches the puppy and hugs it."
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Video resolution - 480p for faster generation, 720p for higher quality",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "Duration of the video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12"
          ]
        },
        {
          "name": "camera_fixed",
          "type": "boolean",
          "description": "Whether to fix the camera position",
          "required": false,
          "default": false
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed to control video generation. Use -1 for random.",
          "required": false,
          "default": null
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "reference_image_urls",
          "type": "array",
          "description": "Reference images to generate the video with.",
          "required": true,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/example_inputs/seedance_reference.jpeg",
              "https://storage.googleapis.com/falserverless/example_inputs/seedance_reference_2.jpeg"
            ]
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generation"
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/bytedance/seedance/v1/lite/reference-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/bytedance/seedance/v1/lite/reference-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/bytedance/seedance/v1/lite/reference-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/bytedance/seedance/v1/lite/reference-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/kangaroo/B49-COdFROSlS850S1PfV_be7c6c85a41b4410ae02216253e5c6f8.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/reference-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/reference-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "BytedanceSeedanceV1LiteReferenceToVideoInput": {
              "title": "SeedanceReferenceToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The girl catches the puppy and hugs it."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used to generate the video"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Video resolution - 480p for faster generation, 720p for higher quality",
                  "default": "720p"
                },
                "duration": {
                  "enum": [
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "11",
                    "12"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "Duration of the video in seconds",
                  "default": "5"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "camera_fixed": {
                  "title": "Camera Fixed",
                  "type": "boolean",
                  "description": "Whether to fix the camera position",
                  "default": false
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed to control video generation. Use -1 for random."
                },
                "reference_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/example_inputs/seedance_reference.jpeg",
                      "https://storage.googleapis.com/falserverless/example_inputs/seedance_reference_2.jpeg"
                    ]
                  ],
                  "title": "Reference Image Urls",
                  "type": "array",
                  "description": "Reference images to generate the video with.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "resolution",
                "duration",
                "camera_fixed",
                "seed",
                "enable_safety_checker",
                "reference_image_urls"
              ],
              "required": [
                "prompt",
                "reference_image_urls"
              ]
            },
            "BytedanceSeedanceV1LiteReferenceToVideoOutput": {
              "title": "SeedanceReferenceToVideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "examples": [
                    42
                  ],
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generation"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/seedance_reference_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/bytedance/seedance/v1/lite/reference-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/reference-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/reference-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BytedanceSeedanceV1LiteReferenceToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/reference-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BytedanceSeedanceV1LiteReferenceToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/bytedance/seedance/v1/lite/text-to-video",
      "title": "fal-ai/bytedance/seedance/v1/lite/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/bytedance/seedance/v1/lite/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used to generate the video",
          "required": true,
          "default": "",
          "examples": [
            "A little dog is running in the sunshine. The camera follows the dog as it plays in a garden."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16",
            "9:21"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Video resolution - 480p for faster generation, 720p for higher quality",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "Duration of the video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12"
          ]
        },
        {
          "name": "camera_fixed",
          "type": "boolean",
          "description": "Whether to fix the camera position",
          "required": false,
          "default": false
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed to control video generation. Use -1 for random.",
          "required": false,
          "default": null
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generation"
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/bytedance/seedance/v1/lite/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/bytedance/seedance/v1/lite/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/bytedance/seedance/v1/lite/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/bytedance/seedance/v1/lite/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/lite/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "BytedanceSeedanceV1LiteTextToVideoInput": {
              "title": "SeedanceTextToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A little dog is running in the sunshine. The camera follows the dog as it plays in a garden."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used to generate the video"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Video resolution - 480p for faster generation, 720p for higher quality",
                  "default": "720p"
                },
                "duration": {
                  "enum": [
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "11",
                    "12"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "Duration of the video in seconds",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "camera_fixed": {
                  "title": "Camera Fixed",
                  "type": "boolean",
                  "description": "Whether to fix the camera position",
                  "default": false
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed to control video generation. Use -1 for random."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "camera_fixed",
                "seed",
                "enable_safety_checker"
              ],
              "required": [
                "prompt"
              ]
            },
            "BytedanceSeedanceV1LiteTextToVideoOutput": {
              "title": "SeedanceVideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "examples": [
                    42
                  ],
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generation"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/penguin/qmLZSvOIzTKs6bDFXiEtH_video.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/bytedance/seedance/v1/lite/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BytedanceSeedanceV1LiteTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/lite/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BytedanceSeedanceV1LiteTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/bytedance/seedance/v1/pro/image-to-video",
      "title": "fal-ai/bytedance/seedance/v1/pro/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/bytedance/seedance/v1/pro/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/pro/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/pro/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used to generate the video",
          "required": true,
          "default": "",
          "examples": [
            "A skier glides over fresh snow, joyously smiling while kicking up large clouds of snow as he turns. Accelerating gradually down the slope, the camera moves smoothly alongside."
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Video resolution - 480p for faster generation, 720p for balance, 1080p for higher quality",
          "required": false,
          "default": "1080p",
          "enum": [
            "480p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "Duration of the video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12"
          ]
        },
        {
          "name": "camera_fixed",
          "type": "boolean",
          "description": "Whether to fix the camera position",
          "required": false,
          "default": false
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed to control video generation. Use -1 for random.",
          "required": false,
          "default": null
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image used to generate video",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/seedance_pro_i2v_img.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generation"
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/bytedance/seedance/v1/pro/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/bytedance/seedance/v1/pro/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/bytedance/seedance/v1/pro/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/bytedance/seedance/v1/pro/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/pro/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/pro/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "BytedanceSeedanceV1ProImageToVideoInput": {
              "title": "SeedanceProImageToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A skier glides over fresh snow, joyously smiling while kicking up large clouds of snow as he turns. Accelerating gradually down the slope, the camera moves smoothly alongside."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used to generate the video"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Video resolution - 480p for faster generation, 720p for balance, 1080p for higher quality",
                  "default": "1080p"
                },
                "duration": {
                  "enum": [
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "11",
                    "12"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "Duration of the video in seconds",
                  "default": "5"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/seedance_pro_i2v_img.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the image used to generate video"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "camera_fixed": {
                  "title": "Camera Fixed",
                  "type": "boolean",
                  "description": "Whether to fix the camera position",
                  "default": false
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed to control video generation. Use -1 for random."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "resolution",
                "duration",
                "camera_fixed",
                "seed",
                "enable_safety_checker",
                "image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "BytedanceSeedanceV1ProImageToVideoOutput": {
              "title": "SeedanceProI2VVideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "examples": [
                    42
                  ],
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generation"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_inputs/seedance_pro_i2v.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/bytedance/seedance/v1/pro/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/pro/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/pro/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BytedanceSeedanceV1ProImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/pro/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BytedanceSeedanceV1ProImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/bytedance/seedance/v1/pro/text-to-video",
      "title": "fal-ai/bytedance/seedance/v1/pro/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/bytedance/seedance/v1/pro/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/pro/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/pro/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used to generate the video",
          "required": true,
          "default": "",
          "examples": [
            "A bright blue race car speeds along a snowy racetrack. [Low-angle shot] Captures several cars speeding along the racetrack through a harsh snowstorm. [Overhead shot] The camera gradually pulls upward, revealing the full race scene illuminated by storm lights"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "21:9",
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Video resolution - 480p for faster generation, 720p for balance, 1080p for higher quality",
          "required": false,
          "default": "1080p",
          "enum": [
            "480p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "Duration of the video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12"
          ]
        },
        {
          "name": "camera_fixed",
          "type": "boolean",
          "description": "Whether to fix the camera position",
          "required": false,
          "default": false
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed to control video generation. Use -1 for random.",
          "required": false,
          "default": null
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generation"
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/bytedance/seedance/v1/pro/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/bytedance/seedance/v1/pro/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/bytedance/seedance/v1/pro/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/bytedance/seedance/v1/pro/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/pro/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/seedance/v1/pro/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "BytedanceSeedanceV1ProTextToVideoInput": {
              "title": "SeedanceProTextToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A bright blue race car speeds along a snowy racetrack. [Low-angle shot] Captures several cars speeding along the racetrack through a harsh snowstorm. [Overhead shot] The camera gradually pulls upward, revealing the full race scene illuminated by storm lights"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used to generate the video"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Video resolution - 480p for faster generation, 720p for balance, 1080p for higher quality",
                  "default": "1080p"
                },
                "duration": {
                  "enum": [
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "11",
                    "12"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "Duration of the video in seconds",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "21:9",
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "camera_fixed": {
                  "title": "Camera Fixed",
                  "type": "boolean",
                  "description": "Whether to fix the camera position",
                  "default": false
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed to control video generation. Use -1 for random."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "camera_fixed",
                "seed",
                "enable_safety_checker"
              ],
              "required": [
                "prompt"
              ]
            },
            "BytedanceSeedanceV1ProTextToVideoOutput": {
              "title": "SeedanceProT2VVideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "examples": [
                    42
                  ],
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generation"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_inputs/seedance_pro_t2v.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/bytedance/seedance/v1/pro/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/pro/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/pro/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BytedanceSeedanceV1ProTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/seedance/v1/pro/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BytedanceSeedanceV1ProTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/bytedance/video-stylize",
      "title": "fal-ai/bytedance/video-stylize",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/bytedance/video-stylize",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/koala/LxwcxJuokX_e4sZ6EopoG_fb133832f45f4366b13faa832797092d.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/video-stylize",
      "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/video-stylize/api",
      "inputs": [
        {
          "name": "style",
          "type": "string",
          "description": "The style for your character in the video. Please use a short description.",
          "required": true,
          "default": "",
          "examples": [
            "Manga style"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to make the stylized video from.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/kangaroo/-KmSPIcXeGA3Z_iiH4C75_tmph2ry_0_8.png"
          ]
        }
      ],
      "outputs": [],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/bytedance/video-stylize",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/bytedance/video-stylize",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/bytedance/video-stylize queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/bytedance/video-stylize",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/koala/LxwcxJuokX_e4sZ6EopoG_fb133832f45f4366b13faa832797092d.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/bytedance/video-stylize",
            "documentationUrl": "https://fal.ai/models/fal-ai/bytedance/video-stylize/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "BytedanceVideoStylizeInput": {
              "title": "StylizeInput",
              "type": "object",
              "properties": {
                "style": {
                  "examples": [
                    "Manga style"
                  ],
                  "title": "Style",
                  "type": "string",
                  "maxLength": 100,
                  "description": "The style for your character in the video. Please use a short description."
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/kangaroo/-KmSPIcXeGA3Z_iiH4C75_tmph2ry_0_8.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to make the stylized video from."
                }
              },
              "x-fal-order-properties": [
                "style",
                "image_url"
              ],
              "required": [
                "style",
                "image_url"
              ]
            },
            "BytedanceVideoStylizeOutput": {}
          }
        },
        "paths": {
          "/fal-ai/bytedance/video-stylize/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/video-stylize/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/video-stylize": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BytedanceVideoStylizeInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/bytedance/video-stylize/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BytedanceVideoStylizeOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/cogvideox-5b",
      "title": "fal-ai/cogvideox-5b",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/cogvideox-5b",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/cogvideox-5b",
      "documentationUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A garden comes to life as a kaleidoscope of butterflies flutters amidst the blossoms, their delicate wings casting shadows on the petals below. In the background, a grand fountain cascades water with a gentle splendor, its rhythmic sound providing a soothing backdrop. Beneath the cool shade of a mature tree, a solitary wooden chair invites solitude and reflection, its smooth surface worn by the touch of countless visitors seeking a moment of tranquility in nature's embrace."
          ]
        },
        {
          "name": "video_size",
          "description": "The size of the generated video.",
          "required": false,
          "default": {
            "height": 480,
            "width": 720
          }
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to generate video from",
          "required": false,
          "default": "",
          "examples": [
            "Distorted, discontinuous, Ugly, blurry, low resolution, motionless, static, disfigured, disconnected limbs, Ugly faces, incomplete arms"
          ]
        },
        {
          "name": "loras",
          "type": "array",
          "description": "\n            The LoRAs to use for the image generation. We currently support one lora.\n        ",
          "required": false,
          "default": []
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 50,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related video to show you.\n        ",
          "required": false,
          "default": 7,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "use_rife",
          "type": "boolean",
          "description": "Use RIFE for video interpolation",
          "required": false,
          "default": true
        },
        {
          "name": "export_fps",
          "type": "integer",
          "description": "The target FPS of the video",
          "required": false,
          "default": 16,
          "minimum": 4,
          "maximum": 32
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generating the video."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated video. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        },
        {
          "name": "timings",
          "type": "object",
          "description": "Timings"
        },
        {
          "name": "video",
          "type": "string",
          "description": "The URL to the generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/cogvideox-5b",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/cogvideox-5b",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/cogvideox-5b queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/cogvideox-5b",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/cogvideox-5b",
            "documentationUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Cogvideox5bInput": {
              "title": "BaseInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A garden comes to life as a kaleidoscope of butterflies flutters amidst the blossoms, their delicate wings casting shadows on the petals below. In the background, a grand fountain cascades water with a gentle splendor, its rhythmic sound providing a soothing backdrop. Beneath the cool shade of a mature tree, a solitary wooden chair invites solitude and reflection, its smooth surface worn by the touch of countless visitors seeking a moment of tranquility in nature's embrace."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "use_rife": {
                  "title": "Use Rife",
                  "type": "boolean",
                  "description": "Use RIFE for video interpolation",
                  "default": true
                },
                "loras": {
                  "description": "\n            The LoRAs to use for the image generation. We currently support one lora.\n        ",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoraWeight"
                  },
                  "examples": [],
                  "title": "Loras",
                  "default": []
                },
                "video_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Video Size",
                  "description": "The size of the generated video.",
                  "default": {
                    "height": 480,
                    "width": 720
                  }
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance scale (CFG)",
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related video to show you.\n        ",
                  "maximum": 20,
                  "default": 7
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        "
                },
                "export_fps": {
                  "minimum": 4,
                  "title": "Export Fps",
                  "type": "integer",
                  "description": "The target FPS of the video",
                  "maximum": 32,
                  "default": 16
                },
                "negative_prompt": {
                  "examples": [
                    "Distorted, discontinuous, Ugly, blurry, low resolution, motionless, static, disfigured, disconnected limbs, Ugly faces, incomplete arms"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to generate video from",
                  "default": ""
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "The number of inference steps to perform.",
                  "maximum": 50,
                  "default": 50
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "video_size",
                "negative_prompt",
                "loras",
                "num_inference_steps",
                "seed",
                "guidance_scale",
                "use_rife",
                "export_fps"
              ],
              "required": [
                "prompt"
              ]
            },
            "Cogvideox5bOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generating the video."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated video. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                },
                "timings": {
                  "title": "Timings",
                  "type": "object",
                  "additionalProperties": {
                    "type": "number"
                  }
                },
                "video": {
                  "title": "Video",
                  "description": "The URL to the generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "timings",
                "seed",
                "prompt"
              ],
              "required": [
                "video",
                "timings",
                "seed",
                "prompt"
              ]
            },
            "LoraWeight": {
              "title": "LoraWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "maximum": 4,
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "path",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer",
                  "description": "The height of the generated image.",
                  "maximum": 14142,
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "title": "Width",
                  "type": "integer",
                  "description": "The width of the generated image.",
                  "maximum": 14142,
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/cogvideox-5b/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Cogvideox5bInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Cogvideox5bOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/cogvideox-5b/image-to-video",
      "title": "fal-ai/cogvideox-5b/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/cogvideox-5b/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A low angle shot of a man walking down a street, illuminated by the neon signs of the bars around him"
          ]
        },
        {
          "name": "video_size",
          "description": "The size of the generated video.",
          "required": false,
          "default": {
            "height": 480,
            "width": 720
          }
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to generate video from",
          "required": false,
          "default": "",
          "examples": [
            "Distorted, discontinuous, Ugly, blurry, low resolution, motionless, static, disfigured, disconnected limbs, Ugly faces, incomplete arms"
          ]
        },
        {
          "name": "loras",
          "type": "array",
          "description": "\n            The LoRAs to use for the image generation. We currently support one lora.\n        ",
          "required": false,
          "default": []
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 50,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related video to show you.\n        ",
          "required": false,
          "default": 7,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "use_rife",
          "type": "boolean",
          "description": "Use RIFE for video interpolation",
          "required": false,
          "default": true
        },
        {
          "name": "export_fps",
          "type": "integer",
          "description": "The target FPS of the video",
          "required": false,
          "default": 16,
          "minimum": 4,
          "maximum": 32
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL to the image to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "https://d3phaj0sisr2ct.cloudfront.net/research/eugene.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generating the video."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated video. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        },
        {
          "name": "timings",
          "type": "object",
          "description": "Timings"
        },
        {
          "name": "video",
          "type": "string",
          "description": "The URL to the generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/cogvideox-5b/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/cogvideox-5b/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/cogvideox-5b/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/cogvideox-5b/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Cogvideox5bImageToVideoInput": {
              "title": "ImageToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A low angle shot of a man walking down a street, illuminated by the neon signs of the bars around him"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "use_rife": {
                  "title": "Use Rife",
                  "type": "boolean",
                  "description": "Use RIFE for video interpolation",
                  "default": true
                },
                "image_url": {
                  "examples": [
                    "https://d3phaj0sisr2ct.cloudfront.net/research/eugene.jpg"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "The URL to the image to generate the video from."
                },
                "loras": {
                  "description": "\n            The LoRAs to use for the image generation. We currently support one lora.\n        ",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoraWeight"
                  },
                  "examples": [],
                  "title": "Loras",
                  "default": []
                },
                "video_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Video Size",
                  "description": "The size of the generated video.",
                  "default": {
                    "height": 480,
                    "width": 720
                  }
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance scale (CFG)",
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related video to show you.\n        ",
                  "maximum": 20,
                  "default": 7
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        "
                },
                "export_fps": {
                  "minimum": 4,
                  "title": "Export Fps",
                  "type": "integer",
                  "description": "The target FPS of the video",
                  "maximum": 32,
                  "default": 16
                },
                "negative_prompt": {
                  "examples": [
                    "Distorted, discontinuous, Ugly, blurry, low resolution, motionless, static, disfigured, disconnected limbs, Ugly faces, incomplete arms"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to generate video from",
                  "default": ""
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "The number of inference steps to perform.",
                  "maximum": 50,
                  "default": 50
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "video_size",
                "negative_prompt",
                "loras",
                "num_inference_steps",
                "seed",
                "guidance_scale",
                "use_rife",
                "export_fps",
                "image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "Cogvideox5bImageToVideoOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generating the video."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated video. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                },
                "timings": {
                  "title": "Timings",
                  "type": "object",
                  "additionalProperties": {
                    "type": "number"
                  }
                },
                "video": {
                  "title": "Video",
                  "description": "The URL to the generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "timings",
                "seed",
                "prompt"
              ],
              "required": [
                "video",
                "timings",
                "seed",
                "prompt"
              ]
            },
            "LoraWeight": {
              "title": "LoraWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "maximum": 4,
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "path",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer",
                  "description": "The height of the generated image.",
                  "maximum": 14142,
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "title": "Width",
                  "type": "integer",
                  "description": "The width of the generated image.",
                  "maximum": 14142,
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/cogvideox-5b/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Cogvideox5bImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Cogvideox5bImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/cogvideox-5b/video-to-video",
      "title": "fal-ai/cogvideox-5b/video-to-video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/cogvideox-5b/video-to-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/video-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/video-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "An astronaut stands triumphantly at the peak of a towering mountain. Panorama of rugged peaks and valleys. Very futuristic vibe and animated aesthetic. Highlights of purple and golden colors in the scene. The sky is looks like an animated/cartoonish dream of galaxies, nebulae, stars, planets, moons, but the remainder of the scene is mostly realistic. "
          ]
        },
        {
          "name": "video_size",
          "description": "The size of the generated video.",
          "required": false,
          "default": {
            "height": 480,
            "width": 720
          }
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to generate video from",
          "required": false,
          "default": "",
          "examples": [
            "Distorted, discontinuous, Ugly, blurry, low resolution, motionless, static, disfigured, disconnected limbs, Ugly faces, incomplete arms"
          ]
        },
        {
          "name": "loras",
          "type": "array",
          "description": "\n            The LoRAs to use for the image generation. We currently support one lora.\n        ",
          "required": false,
          "default": []
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 50,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related video to show you.\n        ",
          "required": false,
          "default": 7,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "use_rife",
          "type": "boolean",
          "description": "Use RIFE for video interpolation",
          "required": false,
          "default": true
        },
        {
          "name": "export_fps",
          "type": "integer",
          "description": "The target FPS of the video",
          "required": false,
          "default": 16,
          "minimum": 4,
          "maximum": 32
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "The video to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/hiker.mp4"
          ]
        },
        {
          "name": "strength",
          "type": "number",
          "description": "The strength to use for Video to Video.  1.0 completely remakes the video while 0.0 preserves the original.",
          "required": false,
          "default": 0.8,
          "minimum": 0.05,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generating the video."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated video. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        },
        {
          "name": "timings",
          "type": "object",
          "description": "Timings"
        },
        {
          "name": "video",
          "type": "string",
          "description": "The URL to the generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/cogvideox-5b/video-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/cogvideox-5b/video-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/cogvideox-5b/video-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/cogvideox-5b/video-to-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/video-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/cogvideox-5b/video-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Cogvideox5bVideoToVideoInput": {
              "title": "VideoToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "An astronaut stands triumphantly at the peak of a towering mountain. Panorama of rugged peaks and valleys. Very futuristic vibe and animated aesthetic. Highlights of purple and golden colors in the scene. The sky is looks like an animated/cartoonish dream of galaxies, nebulae, stars, planets, moons, but the remainder of the scene is mostly realistic. "
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "video_url": {
                  "examples": [
                    "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/hiker.mp4"
                  ],
                  "title": "Input Video Url",
                  "type": "string",
                  "description": "The video to generate the video from."
                },
                "use_rife": {
                  "title": "Use Rife",
                  "type": "boolean",
                  "description": "Use RIFE for video interpolation",
                  "default": true
                },
                "strength": {
                  "minimum": 0.05,
                  "title": "Strength",
                  "type": "number",
                  "description": "The strength to use for Video to Video.  1.0 completely remakes the video while 0.0 preserves the original.",
                  "maximum": 1,
                  "default": 0.8
                },
                "video_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Video Size",
                  "description": "The size of the generated video.",
                  "default": {
                    "height": 480,
                    "width": 720
                  }
                },
                "loras": {
                  "description": "\n            The LoRAs to use for the image generation. We currently support one lora.\n        ",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoraWeight"
                  },
                  "examples": [],
                  "title": "Loras",
                  "default": []
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance scale (CFG)",
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related video to show you.\n        ",
                  "maximum": 20,
                  "default": 7
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        "
                },
                "export_fps": {
                  "minimum": 4,
                  "title": "Export Fps",
                  "type": "integer",
                  "description": "The target FPS of the video",
                  "maximum": 32,
                  "default": 16
                },
                "negative_prompt": {
                  "examples": [
                    "Distorted, discontinuous, Ugly, blurry, low resolution, motionless, static, disfigured, disconnected limbs, Ugly faces, incomplete arms"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to generate video from",
                  "default": ""
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "The number of inference steps to perform.",
                  "maximum": 50,
                  "default": 50
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "video_size",
                "negative_prompt",
                "loras",
                "num_inference_steps",
                "seed",
                "guidance_scale",
                "use_rife",
                "export_fps",
                "video_url",
                "strength"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "Cogvideox5bVideoToVideoOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generating the video."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated video. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                },
                "timings": {
                  "title": "Timings",
                  "type": "object",
                  "additionalProperties": {
                    "type": "number"
                  }
                },
                "video": {
                  "title": "Video",
                  "description": "The URL to the generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "timings",
                "seed",
                "prompt"
              ],
              "required": [
                "video",
                "timings",
                "seed",
                "prompt"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer",
                  "description": "The height of the generated image.",
                  "maximum": 14142,
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "title": "Width",
                  "type": "integer",
                  "description": "The width of the generated image.",
                  "maximum": 14142,
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "LoraWeight": {
              "title": "LoraWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "maximum": 4,
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "path",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/cogvideox-5b/video-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b/video-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b/video-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Cogvideox5bVideoToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/cogvideox-5b/video-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Cogvideox5bVideoToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/controlnext",
      "title": "fal-ai/controlnext",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/controlnext",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/controlnext.JPG",
      "playgroundUrl": "https://fal.ai/models/fal-ai/controlnext",
      "documentationUrl": "https://fal.ai/models/fal-ai/controlnext/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the reference image.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/musepose/ref.png"
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/musepose/dance.mp4"
          ]
        },
        {
          "name": "height",
          "type": "integer",
          "description": "Height of the output video.",
          "required": false,
          "default": 1024,
          "minimum": 64,
          "maximum": 1024
        },
        {
          "name": "width",
          "type": "integer",
          "description": "Width of the output video.",
          "required": false,
          "default": 576,
          "minimum": 64,
          "maximum": 1024
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for the diffusion process.",
          "required": false,
          "default": 3,
          "minimum": 0.1,
          "maximum": 10
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps.",
          "required": false,
          "default": 25,
          "minimum": 1,
          "maximum": 100
        },
        {
          "name": "max_frame_num",
          "type": "integer",
          "description": "Maximum number of frames to process.",
          "required": false,
          "default": 240,
          "minimum": 1,
          "maximum": 1000
        },
        {
          "name": "batch_frames",
          "type": "integer",
          "description": "Number of frames to process in each batch.",
          "required": false,
          "default": 24,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "overlap",
          "type": "integer",
          "description": "Number of overlapping frames between batches.",
          "required": false,
          "default": 6,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "sample_stride",
          "type": "integer",
          "description": "Stride for sampling frames from the input video.",
          "required": false,
          "default": 2,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "decode_chunk_size",
          "type": "integer",
          "description": "Chunk size for decoding frames.",
          "required": false,
          "default": 2,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "motion_bucket_id",
          "type": "number",
          "description": "Motion bucket ID for the pipeline.",
          "required": false,
          "default": 127,
          "minimum": 0,
          "maximum": 255
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "Frames per second for the output video.",
          "required": false,
          "default": 7,
          "minimum": 1,
          "maximum": 60
        },
        {
          "name": "controlnext_cond_scale",
          "type": "number",
          "description": "Condition scale for ControlNeXt.",
          "required": false,
          "default": 1,
          "minimum": 0.1,
          "maximum": 10
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/controlnext",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/controlnext",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/controlnext queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/controlnext",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/controlnext.JPG",
            "playgroundUrl": "https://fal.ai/models/fal-ai/controlnext",
            "documentationUrl": "https://fal.ai/models/fal-ai/controlnext/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ControlnextInput": {
              "title": "ControlNeXtInput",
              "type": "object",
              "properties": {
                "controlnext_cond_scale": {
                  "minimum": 0.1,
                  "maximum": 10,
                  "type": "number",
                  "title": "Controlnext Cond Scale",
                  "description": "Condition scale for ControlNeXt.",
                  "default": 1
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/musepose/dance.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video."
                },
                "fps": {
                  "minimum": 1,
                  "maximum": 60,
                  "type": "integer",
                  "title": "Fps",
                  "description": "Frames per second for the output video.",
                  "default": 7
                },
                "max_frame_num": {
                  "minimum": 1,
                  "maximum": 1000,
                  "type": "integer",
                  "title": "Max Frame Num",
                  "description": "Maximum number of frames to process.",
                  "default": 240
                },
                "width": {
                  "minimum": 64,
                  "maximum": 1024,
                  "type": "integer",
                  "title": "Width",
                  "description": "Width of the output video.",
                  "default": 576
                },
                "overlap": {
                  "minimum": 0,
                  "maximum": 20,
                  "type": "integer",
                  "title": "Overlap",
                  "description": "Number of overlapping frames between batches.",
                  "default": 6
                },
                "guidance_scale": {
                  "minimum": 0.1,
                  "maximum": 10,
                  "type": "number",
                  "title": "Guidance Scale",
                  "description": "Guidance scale for the diffusion process.",
                  "default": 3
                },
                "batch_frames": {
                  "minimum": 1,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Batch Frames",
                  "description": "Number of frames to process in each batch.",
                  "default": 24
                },
                "height": {
                  "minimum": 64,
                  "maximum": 1024,
                  "type": "integer",
                  "title": "Height",
                  "description": "Height of the output video.",
                  "default": 1024
                },
                "sample_stride": {
                  "minimum": 1,
                  "maximum": 10,
                  "type": "integer",
                  "title": "Sample Stride",
                  "description": "Stride for sampling frames from the input video.",
                  "default": 2
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/musepose/ref.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the reference image."
                },
                "decode_chunk_size": {
                  "minimum": 1,
                  "maximum": 10,
                  "type": "integer",
                  "title": "Decode Chunk Size",
                  "description": "Chunk size for decoding frames.",
                  "default": 2
                },
                "motion_bucket_id": {
                  "minimum": 0,
                  "maximum": 255,
                  "type": "number",
                  "title": "Motion Bucket Id",
                  "description": "Motion bucket ID for the pipeline.",
                  "default": 127
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 100,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "Number of inference steps.",
                  "default": 25
                }
              },
              "x-fal-order-properties": [
                "image_url",
                "video_url",
                "height",
                "width",
                "guidance_scale",
                "num_inference_steps",
                "max_frame_num",
                "batch_frames",
                "overlap",
                "sample_stride",
                "decode_chunk_size",
                "motion_bucket_id",
                "fps",
                "controlnext_cond_scale"
              ],
              "required": [
                "image_url",
                "video_url"
              ]
            },
            "ControlnextOutput": {
              "title": "ControlNeXtOutput",
              "type": "object",
              "properties": {
                "video": {
                  "description": "The generated video.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/controlnext/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/controlnext/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/controlnext": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ControlnextInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/controlnext/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ControlnextOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/decart/lucy-5b/image-to-video",
      "title": "fal-ai/decart/lucy-5b/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/decart/lucy-5b/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/kangaroo/srM1hEjGsuYwd4UhvzpE7_c5bddd630600497e918bb16e99e21653.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/decart/lucy-5b/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/decart/lucy-5b/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text description of the desired video content",
          "required": true,
          "default": "",
          "examples": [
            "A cat is walking slowly in the garden"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/monkey/OlpQEYh7oNeJ3qKsdiaym_ia5ECOgFbfcniMDu01_18_da73e078e0924472b51d92f3e3fba98c.png"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video.",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "16:9"
          ]
        },
        {
          "name": "sync_mode",
          "type": "boolean",
          "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated MP4 video with H.264 encoding"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/decart/lucy-5b/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/decart/lucy-5b/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/decart/lucy-5b/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/decart/lucy-5b/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/kangaroo/srM1hEjGsuYwd4UhvzpE7_c5bddd630600497e918bb16e99e21653.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/decart/lucy-5b/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/decart/lucy-5b/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "DecartLucy5bImageToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "resolution",
                "aspect_ratio",
                "sync_mode"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A cat is walking slowly in the garden"
                  ],
                  "description": "Text description of the desired video content",
                  "type": "string",
                  "maxLength": 1500,
                  "title": "Prompt"
                },
                "resolution": {
                  "enum": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "sync_mode": {
                  "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
                  "type": "boolean",
                  "title": "Sync Mode",
                  "default": true
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "16:9"
                  ],
                  "description": "Aspect ratio of the generated video.",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/monkey/OlpQEYh7oNeJ3qKsdiaym_ia5ECOgFbfcniMDu01_18_da73e078e0924472b51d92f3e3fba98c.png"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "Image Url"
                }
              },
              "title": "ProcessRequest",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "DecartLucy5bImageToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/kangaroo/rIFaCsyWvBxYBKw3cPbOU_indir.mp4"
                    }
                  ],
                  "description": "The generated MP4 video with H.264 encoding",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "ProcessOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/decart/lucy-5b/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/decart/lucy-5b/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/decart/lucy-5b/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DecartLucy5bImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/decart/lucy-5b/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/DecartLucy5bImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/dubbing",
      "title": "fal-ai/dubbing",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/dubbing",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/dubbing.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/dubbing",
      "documentationUrl": "https://fal.ai/models/fal-ai/dubbing/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "Input video URL to be dubbed.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/dubbing/swapjokes_clip_cropped.mp4"
          ]
        },
        {
          "name": "target_language",
          "type": "string",
          "description": "Target language to dub the video to",
          "required": false,
          "default": "hindi",
          "enum": [
            "hindi",
            "turkish",
            "english"
          ]
        },
        {
          "name": "do_lipsync",
          "type": "boolean",
          "description": "Whether to lip sync the audio to the video",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with the lip sync."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/dubbing",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/dubbing",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/dubbing queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/dubbing",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/dubbing.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/dubbing",
            "documentationUrl": "https://fal.ai/models/fal-ai/dubbing/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "DubbingInput": {
              "title": "InputModel",
              "type": "object",
              "properties": {
                "do_lipsync": {
                  "title": "Do Lipsync",
                  "type": "boolean",
                  "description": "Whether to lip sync the audio to the video",
                  "default": true
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/dubbing/swapjokes_clip_cropped.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "Input video URL to be dubbed."
                },
                "target_language": {
                  "enum": [
                    "hindi",
                    "turkish",
                    "english"
                  ],
                  "title": "Target Language",
                  "type": "string",
                  "description": "Target language to dub the video to",
                  "default": "hindi"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "target_language",
                "do_lipsync"
              ],
              "required": [
                "video_url"
              ]
            },
            "DubbingOutput": {
              "title": "OutputModel",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 120000,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/koala/7BzEwUucbr6yuFjpcJipl_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video with the lip sync.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/dubbing/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/dubbing/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/dubbing": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DubbingInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/dubbing/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/DubbingOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/dwpose/video",
      "title": "fal-ai/dwpose/video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/dwpose/video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/dwpose.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/dwpose/video",
      "documentationUrl": "https://fal.ai/models/fal-ai/dwpose/video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of video to be used for pose estimation",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/gallery/Ben2/100063-video-2160.mp4"
          ]
        },
        {
          "name": "draw_mode",
          "type": "string",
          "description": "Mode of drawing the pose on the video. Options are: 'full-pose', 'body-pose', 'face-pose', 'hand-pose', 'face-hand-mask', 'face-mask', 'hand-mask'.",
          "required": false,
          "default": "body-pose",
          "enum": [
            "full-pose",
            "body-pose",
            "face-pose",
            "hand-pose",
            "face-hand-mask",
            "face-mask",
            "hand-mask"
          ],
          "examples": [
            "body-pose"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The output video with pose estimation."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/dwpose/video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/dwpose/video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/dwpose/video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/dwpose/video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/dwpose.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/dwpose/video",
            "documentationUrl": "https://fal.ai/models/fal-ai/dwpose/video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "DwposeVideoInput": {
              "x-fal-order-properties": [
                "video_url",
                "draw_mode"
              ],
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/gallery/Ben2/100063-video-2160.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of video to be used for pose estimation"
                },
                "draw_mode": {
                  "enum": [
                    "full-pose",
                    "body-pose",
                    "face-pose",
                    "hand-pose",
                    "face-hand-mask",
                    "face-mask",
                    "hand-mask"
                  ],
                  "title": "Draw Mode",
                  "type": "string",
                  "examples": [
                    "body-pose"
                  ],
                  "description": "Mode of drawing the pose on the video. Options are: 'full-pose', 'body-pose', 'face-pose', 'hand-pose', 'face-hand-mask', 'face-mask', 'hand-mask'.",
                  "default": "body-pose"
                }
              },
              "title": "DWPoseVideoInput",
              "required": [
                "video_url"
              ]
            },
            "DwposeVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/dwpose-video-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The output video with pose estimation.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "DWPoseVideoOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/dwpose/video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/dwpose/video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/dwpose/video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DwposeVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/dwpose/video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/DwposeVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/fast-animatediff/text-to-video",
      "title": "fal-ai/fast-animatediff/text-to-video",
      "description": "Generate high-quality videos from text descriptions using AnimateDiff for stable and consistent video animation.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/fast-animatediff/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-animatediff-t2v.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/fast-animatediff/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/fast-animatediff/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to use for generating the video. Be as descriptive as possible for best results.",
          "required": true,
          "default": "",
          "examples": [
            "masterpiece, best quality, 1girl, solo, cherry blossoms, hanami, pink flower, white flower, spring season, wisteria, petals, flower, plum blossoms, outdoors, falling petals, white hair, black eyes",
            "panda playing a guitar, on a boat, in the ocean, high quality, high quality, ultra HD, realistic"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "\n            The negative prompt to use. Use it to address details that you don't want\n            in the image. This could be colors, objects, scenery and even the small details\n            (e.g. moustache, blurry, low resolution).\n        ",
          "required": false,
          "default": "(bad quality, worst quality:1.2), ugly faces, bad anime"
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate for the video.",
          "required": false,
          "default": 16,
          "minimum": 1,
          "maximum": 32
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 25,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
          "required": false,
          "default": 7.5,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "Number of frames per second to extract from the video.",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 16
        },
        {
          "name": "motions",
          "type": "array",
          "description": "The motions to apply to the video.",
          "required": false,
          "default": []
        },
        {
          "name": "video_size",
          "description": "The size of the video to generate.",
          "required": false,
          "default": "square"
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/fast-animatediff/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/fast-animatediff/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/fast-animatediff/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/fast-animatediff/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-animatediff-t2v.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/fast-animatediff/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/fast-animatediff/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FastAnimatediffTextToVideoInput": {
              "title": "AnimateDiffT2VInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "masterpiece, best quality, 1girl, solo, cherry blossoms, hanami, pink flower, white flower, spring season, wisteria, petals, flower, plum blossoms, outdoors, falling petals, white hair, black eyes",
                    "panda playing a guitar, on a boat, in the ocean, high quality, high quality, ultra HD, realistic"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to use for generating the video. Be as descriptive as possible for best results."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        "
                },
                "fps": {
                  "minimum": 1,
                  "title": "Fps",
                  "type": "integer",
                  "maximum": 16,
                  "description": "Number of frames per second to extract from the video.",
                  "default": 8
                },
                "video_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Video Size",
                  "description": "The size of the video to generate.",
                  "default": "square"
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance scale (CFG)",
                  "type": "number",
                  "maximum": 20,
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
                  "default": 7.5
                },
                "num_frames": {
                  "minimum": 1,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 32,
                  "description": "The number of frames to generate for the video.",
                  "default": 16
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 50,
                  "description": "The number of inference steps to perform.",
                  "default": 25
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "\n            The negative prompt to use. Use it to address details that you don't want\n            in the image. This could be colors, objects, scenery and even the small details\n            (e.g. moustache, blurry, low resolution).\n        ",
                  "default": "(bad quality, worst quality:1.2), ugly faces, bad anime"
                },
                "motions": {
                  "title": "Motions",
                  "type": "array",
                  "description": "The motions to apply to the video.",
                  "uniqueItems": true,
                  "items": {
                    "enum": [
                      "zoom-out",
                      "zoom-in",
                      "pan-left",
                      "pan-right",
                      "tilt-up",
                      "tilt-down"
                    ],
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "num_inference_steps",
                "guidance_scale",
                "seed",
                "fps",
                "motions",
                "video_size"
              ],
              "required": [
                "prompt"
              ]
            },
            "FastAnimatediffTextToVideoOutput": {
              "title": "AnimateDiffT2VOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://fal-cdn.batuhan-941.workers.dev/files/kangaroo/DSrFBOk9XXIplm_kukI4n.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "title": "Width",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/fast-animatediff/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FastAnimatediffTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FastAnimatediffTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/fast-animatediff/turbo/text-to-video",
      "title": "fal-ai/fast-animatediff/turbo/text-to-video",
      "description": "Generate high-quality videos from text descriptions using AnimateDiff for stable and consistent video animation.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/fast-animatediff/turbo/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-animatediff-t2v-turbo.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/fast-animatediff/turbo/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/fast-animatediff/turbo/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to use for generating the video. Be as descriptive as possible for best results.",
          "required": true,
          "default": "",
          "examples": [
            "masterpiece, best quality, 1girl, solo, cherry blossoms, hanami, pink flower, white flower, spring season, wisteria, petals, flower, plum blossoms, outdoors, falling petals, white hair, black eyes",
            "panda playing a guitar, on a boat, in the ocean, high quality, high quality, ultra HD, realistic"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "\n            The negative prompt to use. Use it to address details that you don't want\n            in the image. This could be colors, objects, scenery and even the small details\n            (e.g. moustache, blurry, low resolution).\n        ",
          "required": false,
          "default": "(bad quality, worst quality:1.2), ugly faces, bad anime"
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate for the video.",
          "required": false,
          "default": 16,
          "minimum": 1,
          "maximum": 64
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform. 4-12 is recommended for turbo mode.",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 8
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "Number of frames per second to extract from the video.",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 16
        },
        {
          "name": "motions",
          "type": "array",
          "description": "The motions to apply to the video.",
          "required": false,
          "default": []
        },
        {
          "name": "video_size",
          "description": "The size of the video to generate.",
          "required": false,
          "default": "square"
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/fast-animatediff/turbo/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/fast-animatediff/turbo/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/fast-animatediff/turbo/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/fast-animatediff/turbo/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-animatediff-t2v-turbo.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/fast-animatediff/turbo/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/fast-animatediff/turbo/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FastAnimatediffTurboTextToVideoInput": {
              "title": "AnimateDiffT2VTurboInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "masterpiece, best quality, 1girl, solo, cherry blossoms, hanami, pink flower, white flower, spring season, wisteria, petals, flower, plum blossoms, outdoors, falling petals, white hair, black eyes",
                    "panda playing a guitar, on a boat, in the ocean, high quality, high quality, ultra HD, realistic"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to use for generating the video. Be as descriptive as possible for best results."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        "
                },
                "fps": {
                  "minimum": 1,
                  "title": "Fps",
                  "type": "integer",
                  "maximum": 16,
                  "description": "Number of frames per second to extract from the video.",
                  "default": 8
                },
                "video_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Video Size",
                  "description": "The size of the video to generate.",
                  "default": "square"
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance Scale",
                  "type": "number",
                  "maximum": 20,
                  "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
                  "default": 1
                },
                "num_frames": {
                  "minimum": 1,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 64,
                  "description": "The number of frames to generate for the video.",
                  "default": 16
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 8,
                  "description": "The number of inference steps to perform. 4-12 is recommended for turbo mode.",
                  "default": 4
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "\n            The negative prompt to use. Use it to address details that you don't want\n            in the image. This could be colors, objects, scenery and even the small details\n            (e.g. moustache, blurry, low resolution).\n        ",
                  "default": "(bad quality, worst quality:1.2), ugly faces, bad anime"
                },
                "motions": {
                  "title": "Motions",
                  "type": "array",
                  "description": "The motions to apply to the video.",
                  "uniqueItems": true,
                  "items": {
                    "enum": [
                      "zoom-out",
                      "zoom-in",
                      "pan-left",
                      "pan-right",
                      "tilt-up",
                      "tilt-down"
                    ],
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "num_inference_steps",
                "guidance_scale",
                "seed",
                "fps",
                "motions",
                "video_size"
              ],
              "required": [
                "prompt"
              ]
            },
            "FastAnimatediffTurboTextToVideoOutput": {
              "title": "AnimateDiffT2VOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://fal-cdn.batuhan-941.workers.dev/files/kangaroo/DSrFBOk9XXIplm_kukI4n.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "title": "Width",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/fast-animatediff/turbo/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/turbo/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/turbo/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FastAnimatediffTurboTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/turbo/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FastAnimatediffTurboTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/fast-animatediff/turbo/video-to-video",
      "title": "fal-ai/fast-animatediff/turbo/video-to-video",
      "description": "Transform and edit existing videos with AI using AnimateDiff for stable and consistent video animation.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/fast-animatediff/turbo/video-to-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/animatediff-v2v.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/fast-animatediff/turbo/video-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/fast-animatediff/turbo/video-to-video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the video.",
          "required": true,
          "default": "",
          "examples": [
            "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-2.gif",
            "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-1.gif"
          ]
        },
        {
          "name": "first_n_seconds",
          "type": "integer",
          "description": "The first N number of seconds of video to animate.",
          "required": false,
          "default": 3,
          "minimum": 2,
          "maximum": 12
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to use for generating the image. Be as descriptive as possible for best results.",
          "required": true,
          "default": "",
          "examples": [
            "closeup of tony stark, robert downey jr, fireworks, high quality, ultra HD",
            "panda playing a guitar, on a boat, in the ocean, high quality, high quality, ultra HD, realistic"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "\n            The negative prompt to use. Use it to address details that you don't want\n            in the image. This could be colors, objects, scenery and even the small details\n            (e.g. moustache, blurry, low resolution).\n        ",
          "required": false,
          "default": "(bad quality, worst quality:1.2), ugly faces, bad anime"
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform. 4-12 is recommended for turbo mode.",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 32
        },
        {
          "name": "strength",
          "type": "number",
          "description": "The strength of the input video in the final output.",
          "required": false,
          "default": 0.7,
          "minimum": 0.1,
          "maximum": 1
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "Number of frames per second to extract from the video.",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 16
        },
        {
          "name": "motions",
          "type": "array",
          "description": "The motions to apply to the video.",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/fast-animatediff/turbo/video-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/fast-animatediff/turbo/video-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/fast-animatediff/turbo/video-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/fast-animatediff/turbo/video-to-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/animatediff-v2v.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/fast-animatediff/turbo/video-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/fast-animatediff/turbo/video-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FastAnimatediffTurboVideoToVideoInput": {
              "title": "AnimateDiffV2VTurboInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "closeup of tony stark, robert downey jr, fireworks, high quality, ultra HD",
                    "panda playing a guitar, on a boat, in the ocean, high quality, high quality, ultra HD, realistic"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to use for generating the image. Be as descriptive as possible for best results."
                },
                "video_url": {
                  "examples": [
                    "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-2.gif",
                    "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-1.gif"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the video."
                },
                "first_n_seconds": {
                  "minimum": 2,
                  "title": "First N Seconds",
                  "type": "integer",
                  "maximum": 12,
                  "description": "The first N number of seconds of video to animate.",
                  "default": 3
                },
                "fps": {
                  "minimum": 1,
                  "title": "Fps",
                  "type": "integer",
                  "maximum": 16,
                  "description": "Number of frames per second to extract from the video.",
                  "default": 8
                },
                "strength": {
                  "minimum": 0.1,
                  "title": "Strength",
                  "type": "number",
                  "maximum": 1,
                  "description": "The strength of the input video in the final output.",
                  "default": 0.7
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance Scale",
                  "type": "number",
                  "maximum": 20,
                  "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
                  "default": 1
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 32,
                  "description": "The number of inference steps to perform. 4-12 is recommended for turbo mode.",
                  "default": 8
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        "
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "\n            The negative prompt to use. Use it to address details that you don't want\n            in the image. This could be colors, objects, scenery and even the small details\n            (e.g. moustache, blurry, low resolution).\n        ",
                  "default": "(bad quality, worst quality:1.2), ugly faces, bad anime"
                },
                "motions": {
                  "title": "Motions",
                  "type": "array",
                  "description": "The motions to apply to the video.",
                  "uniqueItems": true,
                  "items": {
                    "enum": [
                      "zoom-out",
                      "zoom-in",
                      "pan-left",
                      "pan-right",
                      "tilt-up",
                      "tilt-down"
                    ],
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "first_n_seconds",
                "prompt",
                "negative_prompt",
                "num_inference_steps",
                "strength",
                "guidance_scale",
                "seed",
                "fps",
                "motions"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "FastAnimatediffTurboVideoToVideoOutput": {
              "title": "AnimateDiffV2VOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://fal-cdn.batuhan-941.workers.dev/files/koala/5Cb_6P_s9wW8f8-g9c4yj.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/fast-animatediff/turbo/video-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/turbo/video-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/turbo/video-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FastAnimatediffTurboVideoToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/turbo/video-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FastAnimatediffTurboVideoToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/fast-animatediff/video-to-video",
      "title": "fal-ai/fast-animatediff/video-to-video",
      "description": "Transform and edit existing videos with AI using AnimateDiff for stable and consistent video animation.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/fast-animatediff/video-to-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/animatediff-v2v.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/fast-animatediff/video-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/fast-animatediff/video-to-video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the video.",
          "required": true,
          "default": "",
          "examples": [
            "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-2.gif",
            "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-1.gif"
          ]
        },
        {
          "name": "first_n_seconds",
          "type": "integer",
          "description": "The first N number of seconds of video to animate.",
          "required": false,
          "default": 3,
          "minimum": 2,
          "maximum": 4
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to use for generating the image. Be as descriptive as possible for best results.",
          "required": true,
          "default": "",
          "examples": [
            "closeup of tony stark, robert downey jr, fireworks, high quality, ultra HD",
            "panda playing a guitar, on a boat, in the ocean, high quality, high quality, ultra HD, realistic"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "\n            The negative prompt to use. Use it to address details that you don't want\n            in the image. This could be colors, objects, scenery and even the small details\n            (e.g. moustache, blurry, low resolution).\n        ",
          "required": false,
          "default": "(bad quality, worst quality:1.2), ugly faces, bad anime"
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 25,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "strength",
          "type": "number",
          "description": "The strength of the input video in the final output.",
          "required": false,
          "default": 0.7,
          "minimum": 0.1,
          "maximum": 1
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
          "required": false,
          "default": 7.5,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "Number of frames per second to extract from the video.",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 16
        },
        {
          "name": "motions",
          "type": "array",
          "description": "The motions to apply to the video.",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/fast-animatediff/video-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/fast-animatediff/video-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/fast-animatediff/video-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/fast-animatediff/video-to-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/animatediff-v2v.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/fast-animatediff/video-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/fast-animatediff/video-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FastAnimatediffVideoToVideoInput": {
              "title": "AnimateDiffV2VInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "closeup of tony stark, robert downey jr, fireworks, high quality, ultra HD",
                    "panda playing a guitar, on a boat, in the ocean, high quality, high quality, ultra HD, realistic"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to use for generating the image. Be as descriptive as possible for best results."
                },
                "video_url": {
                  "examples": [
                    "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-2.gif",
                    "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/animatediff-vid2vid-input-1.gif"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the video."
                },
                "first_n_seconds": {
                  "minimum": 2,
                  "title": "First N Seconds",
                  "type": "integer",
                  "maximum": 4,
                  "description": "The first N number of seconds of video to animate.",
                  "default": 3
                },
                "fps": {
                  "minimum": 1,
                  "title": "Fps",
                  "type": "integer",
                  "maximum": 16,
                  "description": "Number of frames per second to extract from the video.",
                  "default": 8
                },
                "strength": {
                  "minimum": 0.1,
                  "title": "Strength",
                  "type": "number",
                  "maximum": 1,
                  "description": "The strength of the input video in the final output.",
                  "default": 0.7
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance scale (CFG)",
                  "type": "number",
                  "maximum": 20,
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
                  "default": 7.5
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 50,
                  "description": "The number of inference steps to perform.",
                  "default": 25
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        "
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "\n            The negative prompt to use. Use it to address details that you don't want\n            in the image. This could be colors, objects, scenery and even the small details\n            (e.g. moustache, blurry, low resolution).\n        ",
                  "default": "(bad quality, worst quality:1.2), ugly faces, bad anime"
                },
                "motions": {
                  "title": "Motions",
                  "type": "array",
                  "description": "The motions to apply to the video.",
                  "uniqueItems": true,
                  "items": {
                    "enum": [
                      "zoom-out",
                      "zoom-in",
                      "pan-left",
                      "pan-right",
                      "tilt-up",
                      "tilt-down"
                    ],
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "first_n_seconds",
                "prompt",
                "negative_prompt",
                "num_inference_steps",
                "strength",
                "guidance_scale",
                "seed",
                "fps",
                "motions"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "FastAnimatediffVideoToVideoOutput": {
              "title": "AnimateDiffV2VOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://fal-cdn.batuhan-941.workers.dev/files/koala/5Cb_6P_s9wW8f8-g9c4yj.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "Generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/fast-animatediff/video-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/video-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/video-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FastAnimatediffVideoToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-animatediff/video-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FastAnimatediffVideoToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/fast-svd-lcm",
      "title": "fal-ai/fast-svd-lcm",
      "description": "Transform static images into dynamic videos with AI using Stable Video Diffusion for high-quality motion synthesis.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/fast-svd-lcm",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-svd-turbo.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/fast-svd-lcm",
      "documentationUrl": "https://fal.ai/models/fal-ai/fast-svd-lcm/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image to use as a starting point for the generation.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/svd/rocket.png",
            "https://storage.googleapis.com/falserverless/model_tests/svd/mustang.png",
            "https://storage.googleapis.com/falserverless/model_tests/svd/ship.png",
            "https://storage.googleapis.com/falserverless/model_tests/svd/rocket2.png"
          ]
        },
        {
          "name": "motion_bucket_id",
          "type": "integer",
          "description": "\n            The motion bucket id determines the motion of the generated video. The\n            higher the number, the more motion there will be.\n        ",
          "required": false,
          "default": 127,
          "minimum": 1,
          "maximum": 255
        },
        {
          "name": "cond_aug",
          "type": "number",
          "description": "\n            The conditoning augmentation determines the amount of noise that will be\n            added to the conditioning frame. The higher the number, the more noise\n            there will be, and the less the video will look like the initial image.\n            Increase it for more motion.\n        ",
          "required": false,
          "default": 0.02,
          "minimum": 0,
          "maximum": 10
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "steps",
          "type": "integer",
          "description": "\n            The number of steps to run the model for. The higher the number the better\n            the quality and longer it will take to generate.\n        ",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 20
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "\n            The FPS of the generated video. The higher the number, the faster the video will\n            play. Total video length is 25 frames.\n        ",
          "required": false,
          "default": 10,
          "minimum": 1,
          "maximum": 25
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n\n        "
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/fast-svd-lcm",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/fast-svd-lcm",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/fast-svd-lcm queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/fast-svd-lcm",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-svd-turbo.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/fast-svd-lcm",
            "documentationUrl": "https://fal.ai/models/fal-ai/fast-svd-lcm/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FastSvdLcmInput": {
              "title": "FastSVDImageInput",
              "type": "object",
              "properties": {
                "motion_bucket_id": {
                  "minimum": 1,
                  "maximum": 255,
                  "type": "integer",
                  "title": "Motion Bucket Id",
                  "description": "\n            The motion bucket id determines the motion of the generated video. The\n            higher the number, the more motion there will be.\n        ",
                  "default": 127
                },
                "fps": {
                  "minimum": 1,
                  "maximum": 25,
                  "type": "integer",
                  "title": "Fps",
                  "description": "\n            The FPS of the generated video. The higher the number, the faster the video will\n            play. Total video length is 25 frames.\n        ",
                  "default": 10
                },
                "steps": {
                  "minimum": 1,
                  "maximum": 20,
                  "type": "integer",
                  "title": "Steps",
                  "description": "\n            The number of steps to run the model for. The higher the number the better\n            the quality and longer it will take to generate.\n        ",
                  "default": 4
                },
                "cond_aug": {
                  "minimum": 0,
                  "maximum": 10,
                  "type": "number",
                  "title": "Cond Aug",
                  "description": "\n            The conditoning augmentation determines the amount of noise that will be\n            added to the conditioning frame. The higher the number, the more noise\n            there will be, and the less the video will look like the initial image.\n            Increase it for more motion.\n        ",
                  "default": 0.02
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        "
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/svd/rocket.png",
                    "https://storage.googleapis.com/falserverless/model_tests/svd/mustang.png",
                    "https://storage.googleapis.com/falserverless/model_tests/svd/ship.png",
                    "https://storage.googleapis.com/falserverless/model_tests/svd/rocket2.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the image to use as a starting point for the generation."
                }
              },
              "x-fal-order-properties": [
                "image_url",
                "motion_bucket_id",
                "cond_aug",
                "seed",
                "steps",
                "fps"
              ],
              "required": [
                "image_url"
              ]
            },
            "FastSvdLcmOutput": {
              "title": "FastSVDOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n\n        "
                },
                "video": {
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/fast-svd-lcm/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd-lcm/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd-lcm": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FastSvdLcmInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd-lcm/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FastSvdLcmOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/fast-svd-lcm/text-to-video",
      "title": "fal-ai/fast-svd-lcm/text-to-video",
      "description": "Generate high-quality videos from text descriptions using Stable Video Diffusion for high-quality motion synthesis.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/fast-svd-lcm/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-svd-turbo.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/fast-svd-lcm/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/fast-svd-lcm/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to use as a starting point for the generation.",
          "required": true,
          "default": "",
          "examples": [
            "A rocket flying that is about to take off"
          ]
        },
        {
          "name": "motion_bucket_id",
          "type": "integer",
          "description": "\n            The motion bucket id determines the motion of the generated video. The\n            higher the number, the more motion there will be.\n        ",
          "required": false,
          "default": 127,
          "minimum": 1,
          "maximum": 255
        },
        {
          "name": "cond_aug",
          "type": "number",
          "description": "\n            The conditoning augmentation determines the amount of noise that will be\n            added to the conditioning frame. The higher the number, the more noise\n            there will be, and the less the video will look like the initial image.\n            Increase it for more motion.\n        ",
          "required": false,
          "default": 0.02,
          "minimum": 0,
          "maximum": 10
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "steps",
          "type": "integer",
          "description": "\n            The number of steps to run the model for. The higher the number the better\n            the quality and longer it will take to generate.\n        ",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 20
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "\n            The FPS of the generated video. The higher the number, the faster the video will\n            play. Total video length is 25 frames.\n        ",
          "required": false,
          "default": 10,
          "minimum": 1,
          "maximum": 25
        },
        {
          "name": "video_size",
          "description": "The size of the generated video.",
          "required": false,
          "default": "landscape_16_9"
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n\n        "
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/fast-svd-lcm/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/fast-svd-lcm/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/fast-svd-lcm/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/fast-svd-lcm/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-svd-turbo.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/fast-svd-lcm/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/fast-svd-lcm/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FastSvdLcmTextToVideoInput": {
              "title": "FastSVDTextInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A rocket flying that is about to take off"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to use as a starting point for the generation."
                },
                "cond_aug": {
                  "minimum": 0,
                  "maximum": 10,
                  "type": "number",
                  "title": "Cond Aug",
                  "description": "\n            The conditoning augmentation determines the amount of noise that will be\n            added to the conditioning frame. The higher the number, the more noise\n            there will be, and the less the video will look like the initial image.\n            Increase it for more motion.\n        ",
                  "default": 0.02
                },
                "fps": {
                  "minimum": 1,
                  "maximum": 25,
                  "type": "integer",
                  "title": "Fps",
                  "description": "\n            The FPS of the generated video. The higher the number, the faster the video will\n            play. Total video length is 25 frames.\n        ",
                  "default": 10
                },
                "motion_bucket_id": {
                  "minimum": 1,
                  "maximum": 255,
                  "type": "integer",
                  "title": "Motion Bucket Id",
                  "description": "\n            The motion bucket id determines the motion of the generated video. The\n            higher the number, the more motion there will be.\n        ",
                  "default": 127
                },
                "video_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Video Size",
                  "description": "The size of the generated video.",
                  "default": "landscape_16_9"
                },
                "steps": {
                  "minimum": 1,
                  "maximum": 20,
                  "type": "integer",
                  "title": "Steps",
                  "description": "\n            The number of steps to run the model for. The higher the number the better\n            the quality and longer it will take to generate.\n        ",
                  "default": 4
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        "
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "motion_bucket_id",
                "cond_aug",
                "seed",
                "steps",
                "fps",
                "video_size"
              ],
              "required": [
                "prompt"
              ]
            },
            "FastSvdLcmTextToVideoOutput": {
              "title": "FastSVDOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n\n        "
                },
                "video": {
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "maximum": 14142,
                  "type": "integer",
                  "title": "Height",
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "maximum": 14142,
                  "type": "integer",
                  "title": "Width",
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/fast-svd-lcm/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd-lcm/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd-lcm/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FastSvdLcmTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd-lcm/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FastSvdLcmTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/fast-svd/text-to-video",
      "title": "fal-ai/fast-svd/text-to-video",
      "description": "Generate high-quality videos from text descriptions using Stable Video Diffusion for high-quality motion synthesis.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/fast-svd/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/svd_rocket.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/fast-svd/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/fast-svd/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to use as a starting point for the generation.",
          "required": true,
          "default": "",
          "examples": [
            "A rocket flying that is about to take off"
          ]
        },
        {
          "name": "motion_bucket_id",
          "type": "integer",
          "description": "\n            The motion bucket id determines the motion of the generated video. The\n            higher the number, the more motion there will be.\n        ",
          "required": false,
          "default": 127,
          "minimum": 1,
          "maximum": 255
        },
        {
          "name": "cond_aug",
          "type": "number",
          "description": "\n            The conditoning augmentation determines the amount of noise that will be\n            added to the conditioning frame. The higher the number, the more noise\n            there will be, and the less the video will look like the initial image.\n            Increase it for more motion.\n        ",
          "required": false,
          "default": 0.02,
          "minimum": 0,
          "maximum": 10
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "steps",
          "type": "integer",
          "description": "\n            The number of steps to run the model for. The higher the number the better\n            the quality and longer it will take to generate.\n        ",
          "required": false,
          "default": 20,
          "minimum": 1,
          "maximum": 100
        },
        {
          "name": "deep_cache",
          "type": "string",
          "description": "\n            Enabling [DeepCache](https://github.com/horseee/DeepCache) will make the execution\n            faster, but might sometimes degrade overall quality. The higher the setting, the\n            faster the execution will be, but the more quality might be lost.\n        ",
          "required": false,
          "default": "none",
          "enum": [
            "none",
            "minimum",
            "medium",
            "high"
          ]
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "\n            The FPS of the generated video. The higher the number, the faster the video will\n            play. Total video length is 25 frames.\n        ",
          "required": false,
          "default": 10,
          "minimum": 1,
          "maximum": 25
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to use as a starting point for the generation.",
          "required": false,
          "default": "unrealistic, saturated, high contrast, big nose, painting, drawing, sketch, cartoon, anime, manga, render, CG, 3d, watermark, signature, label"
        },
        {
          "name": "video_size",
          "description": "The size of the generated video.",
          "required": false,
          "default": "landscape_16_9"
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n\n        "
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/fast-svd/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/fast-svd/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/fast-svd/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/fast-svd/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/svd_rocket.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/fast-svd/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/fast-svd/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FastSvdTextToVideoInput": {
              "title": "FastSVDTextInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A rocket flying that is about to take off"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to use as a starting point for the generation."
                },
                "cond_aug": {
                  "minimum": 0,
                  "maximum": 10,
                  "type": "number",
                  "title": "Cond Aug",
                  "description": "\n            The conditoning augmentation determines the amount of noise that will be\n            added to the conditioning frame. The higher the number, the more noise\n            there will be, and the less the video will look like the initial image.\n            Increase it for more motion.\n        ",
                  "default": 0.02
                },
                "deep_cache": {
                  "enum": [
                    "none",
                    "minimum",
                    "medium",
                    "high"
                  ],
                  "title": "Deep Cache",
                  "type": "string",
                  "description": "\n            Enabling [DeepCache](https://github.com/horseee/DeepCache) will make the execution\n            faster, but might sometimes degrade overall quality. The higher the setting, the\n            faster the execution will be, but the more quality might be lost.\n        ",
                  "default": "none"
                },
                "fps": {
                  "minimum": 1,
                  "maximum": 25,
                  "type": "integer",
                  "title": "Fps",
                  "description": "\n            The FPS of the generated video. The higher the number, the faster the video will\n            play. Total video length is 25 frames.\n        ",
                  "default": 10
                },
                "motion_bucket_id": {
                  "minimum": 1,
                  "maximum": 255,
                  "type": "integer",
                  "title": "Motion Bucket Id",
                  "description": "\n            The motion bucket id determines the motion of the generated video. The\n            higher the number, the more motion there will be.\n        ",
                  "default": 127
                },
                "video_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Video Size",
                  "description": "The size of the generated video.",
                  "default": "landscape_16_9"
                },
                "steps": {
                  "minimum": 1,
                  "maximum": 100,
                  "type": "integer",
                  "title": "Steps",
                  "description": "\n            The number of steps to run the model for. The higher the number the better\n            the quality and longer it will take to generate.\n        ",
                  "default": 20
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        "
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to use as a starting point for the generation.",
                  "default": "unrealistic, saturated, high contrast, big nose, painting, drawing, sketch, cartoon, anime, manga, render, CG, 3d, watermark, signature, label"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "motion_bucket_id",
                "cond_aug",
                "seed",
                "steps",
                "deep_cache",
                "fps",
                "negative_prompt",
                "video_size"
              ],
              "required": [
                "prompt"
              ]
            },
            "FastSvdTextToVideoOutput": {
              "title": "FastSVDOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n\n        "
                },
                "video": {
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "maximum": 14142,
                  "type": "integer",
                  "title": "Height",
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "maximum": 14142,
                  "type": "integer",
                  "title": "Width",
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/fast-svd/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FastSvdTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/fast-svd/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FastSvdTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ffmpeg-api/compose",
      "title": "fal-ai/ffmpeg-api/compose",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ffmpeg-api/compose",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ffmpeg-api-compose.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/compose",
      "documentationUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/compose/api",
      "inputs": [
        {
          "name": "tracks",
          "type": "array",
          "description": "List of tracks to be combined into the final media",
          "required": true,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the processed video file"
        },
        {
          "name": "thumbnail_url",
          "type": "string",
          "description": "URL of the video's thumbnail image"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ffmpeg-api/compose",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ffmpeg-api/compose",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ffmpeg-api/compose queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ffmpeg-api/compose",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ffmpeg-api-compose.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/compose",
            "documentationUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/compose/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FfmpegApiComposeInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "tracks": {
                  "title": "Tracks",
                  "type": "array",
                  "description": "List of tracks to be combined into the final media",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              },
              "x-fal-order-properties": [
                "tracks"
              ],
              "required": [
                "tracks"
              ]
            },
            "FfmpegApiComposeOutput": {
              "title": "ComposeOutput",
              "type": "object",
              "properties": {
                "video_url": {
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the processed video file"
                },
                "thumbnail_url": {
                  "title": "Thumbnail Url",
                  "type": "string",
                  "description": "URL of the video's thumbnail image"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "thumbnail_url"
              ],
              "required": [
                "video_url",
                "thumbnail_url"
              ]
            },
            "Track": {
              "title": "Track",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type",
                  "type": "string",
                  "description": "Type of track ('video' or 'audio')"
                },
                "id": {
                  "title": "Id",
                  "type": "string",
                  "description": "Unique identifier for the track"
                },
                "keyframes": {
                  "title": "Keyframes",
                  "type": "array",
                  "description": "List of keyframes that make up this track",
                  "items": {
                    "$ref": "#/components/schemas/Keyframe"
                  }
                }
              },
              "x-fal-order-properties": [
                "id",
                "type",
                "keyframes"
              ],
              "required": [
                "id",
                "type",
                "keyframes"
              ]
            },
            "Keyframe": {
              "title": "Keyframe",
              "type": "object",
              "properties": {
                "duration": {
                  "title": "Duration",
                  "type": "number",
                  "description": "The duration in milliseconds of this keyframe"
                },
                "timestamp": {
                  "title": "Timestamp",
                  "type": "number",
                  "description": "The timestamp in milliseconds where this keyframe starts"
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where this keyframe's media file can be accessed"
                }
              },
              "x-fal-order-properties": [
                "timestamp",
                "duration",
                "url"
              ],
              "required": [
                "timestamp",
                "duration",
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ffmpeg-api/compose/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/compose/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/compose": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FfmpegApiComposeInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/compose/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FfmpegApiComposeOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ffmpeg-api/merge-audio-video",
      "title": "fal-ai/ffmpeg-api/merge-audio-video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ffmpeg-api/merge-audio-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-5.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/merge-audio-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/merge-audio-video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the video file to use as the video track",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/ffmpeg-video.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "URL of the audio file to use as the audio track",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/ffmpeg-audio.wav"
          ]
        },
        {
          "name": "start_offset",
          "type": "number",
          "description": "Offset in seconds for when the audio should start relative to the video",
          "required": false,
          "default": 0,
          "minimum": 0
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "Output video with merged audio."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ffmpeg-api/merge-audio-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ffmpeg-api/merge-audio-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ffmpeg-api/merge-audio-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ffmpeg-api/merge-audio-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-5.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/merge-audio-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/merge-audio-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FfmpegApiMergeAudioVideoInput": {
              "title": "CombineInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/ffmpeg-video.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the video file to use as the video track"
                },
                "start_offset": {
                  "minimum": 0,
                  "title": "Start Offset",
                  "type": "number",
                  "description": "Offset in seconds for when the audio should start relative to the video",
                  "default": 0
                },
                "audio_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/ffmpeg-audio.wav"
                  ],
                  "title": "Audio Url",
                  "type": "string",
                  "description": "URL of the audio file to use as the audio track"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "audio_url",
                "start_offset"
              ],
              "required": [
                "video_url",
                "audio_url"
              ]
            },
            "FfmpegApiMergeAudioVideoOutput": {
              "title": "CombineOutput",
              "type": "object",
              "properties": {
                "video": {
                  "description": "Output video with merged audio.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ffmpeg-api/merge-audio-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/merge-audio-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/merge-audio-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FfmpegApiMergeAudioVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/merge-audio-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FfmpegApiMergeAudioVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ffmpeg-api/merge-videos",
      "title": "fal-ai/ffmpeg-api/merge-videos",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ffmpeg-api/merge-videos",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/zebra/FIx0cgDim0YGWogS3xc0x_c4b30ad7fb8a4747814f7d80c99adaaf.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/merge-videos",
      "documentationUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/merge-videos/api",
      "inputs": [
        {
          "name": "video_urls",
          "type": "array",
          "description": "List of video URLs to merge in order",
          "required": true,
          "default": [],
          "minItems": 2
        },
        {
          "name": "target_fps",
          "type": "number",
          "description": "Target FPS for the output video. If not provided, uses the lowest FPS from input videos.",
          "required": false,
          "default": 1
        },
        {
          "name": "resolution",
          "description": "Resolution of the final video. Width and height must be between 512 and 2048.",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "metadata",
          "type": "object",
          "description": "Metadata about the merged video including original video info"
        },
        {
          "name": "video",
          "type": "string",
          "description": "Merged video file"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ffmpeg-api/merge-videos",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ffmpeg-api/merge-videos",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ffmpeg-api/merge-videos queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ffmpeg-api/merge-videos",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/zebra/FIx0cgDim0YGWogS3xc0x_c4b30ad7fb8a4747814f7d80c99adaaf.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/merge-videos",
            "documentationUrl": "https://fal.ai/models/fal-ai/ffmpeg-api/merge-videos/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FfmpegApiMergeVideosInput": {
              "title": "MergeVideosInput",
              "type": "object",
              "properties": {
                "target_fps": {
                  "anyOf": [
                    {
                      "minimum": 1,
                      "maximum": 60,
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Target Fps",
                  "description": "Target FPS for the output video. If not provided, uses the lowest FPS from input videos."
                },
                "video_urls": {
                  "title": "Video Urls",
                  "type": "array",
                  "minItems": 2,
                  "description": "List of video URLs to merge in order",
                  "items": {
                    "type": "string"
                  }
                },
                "resolution": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Resolution",
                  "description": "Resolution of the final video. Width and height must be between 512 and 2048."
                }
              },
              "x-fal-order-properties": [
                "video_urls",
                "target_fps",
                "resolution"
              ],
              "required": [
                "video_urls"
              ]
            },
            "FfmpegApiMergeVideosOutput": {
              "title": "MergeVideosOutput",
              "type": "object",
              "properties": {
                "metadata": {
                  "title": "Metadata",
                  "type": "object",
                  "description": "Metadata about the merged video including original video info"
                },
                "video": {
                  "description": "Merged video file",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "metadata"
              ],
              "required": [
                "video",
                "metadata"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "title": "Width",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ffmpeg-api/merge-videos/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/merge-videos/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/merge-videos": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FfmpegApiMergeVideosInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ffmpeg-api/merge-videos/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FfmpegApiMergeVideosOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/film/video",
      "title": "fal-ai/film/video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/film/video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/film/video",
      "documentationUrl": "https://fal.ai/models/fal-ai/film/video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to use for interpolation.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/interpolation-video-input.mp4"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate between the input video frames.",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 4
        },
        {
          "name": "use_scene_detection",
          "type": "boolean",
          "description": "If True, the input video will be split into scenes before interpolation. This removes smear frames between scenes, but can result in false positives if the scene detection is not accurate. If False, the entire video will be treated as a single scene.",
          "required": false,
          "default": false
        },
        {
          "name": "use_calculated_fps",
          "type": "boolean",
          "description": "If True, the function will use the calculated FPS of the input video multiplied by the number of frames to determine the output FPS. If False, the passed FPS will be used.",
          "required": false,
          "default": true
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "Frames per second for the output video. Only applicable if use_calculated_fps is False.",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 60
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "If True, the final frame will be looped back to the first frame to create a seamless loop. If False, the final frame will not loop back.",
          "required": false,
          "default": false
        },
        {
          "name": "sync_mode",
          "type": "boolean",
          "description": "If True, the function will wait for images to be generated and uploaded before returning. This will increase the response time but ensures that the images are ready for use immediately without going through the CDN. Does not apply if output_type is 'video'.",
          "required": false,
          "default": false
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Only applicable if output_type is 'video'.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Only applicable if output_type is 'video'.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file with interpolated frames."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/film/video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/film/video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/film/video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/film/video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/film/video",
            "documentationUrl": "https://fal.ai/models/fal-ai/film/video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FilmVideoInput": {
              "title": "FILMVideoInput",
              "type": "object",
              "properties": {
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "description": "The write mode of the output video. Only applicable if output_type is 'video'.",
                  "type": "string",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "title": "Video Write Mode",
                  "default": "balanced"
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/interpolation-video-input.mp4"
                  ],
                  "description": "The URL of the video to use for interpolation.",
                  "type": "string",
                  "title": "Video URL"
                },
                "use_calculated_fps": {
                  "description": "If True, the function will use the calculated FPS of the input video multiplied by the number of frames to determine the output FPS. If False, the passed FPS will be used.",
                  "type": "boolean",
                  "title": "Use Calculated FPS",
                  "default": true
                },
                "loop": {
                  "description": "If True, the final frame will be looped back to the first frame to create a seamless loop. If False, the final frame will not loop back.",
                  "type": "boolean",
                  "title": "Loop",
                  "default": false
                },
                "fps": {
                  "minimum": 1,
                  "description": "Frames per second for the output video. Only applicable if use_calculated_fps is False.",
                  "type": "integer",
                  "maximum": 60,
                  "title": "Frames Per Second",
                  "default": 8
                },
                "sync_mode": {
                  "description": "If True, the function will wait for images to be generated and uploaded before returning. This will increase the response time but ensures that the images are ready for use immediately without going through the CDN. Does not apply if output_type is 'video'.",
                  "type": "boolean",
                  "title": "Sync Mode",
                  "default": false
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "description": "The quality of the output video. Only applicable if output_type is 'video'.",
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "title": "Video Quality",
                  "default": "high"
                },
                "use_scene_detection": {
                  "description": "If True, the input video will be split into scenes before interpolation. This removes smear frames between scenes, but can result in false positives if the scene detection is not accurate. If False, the entire video will be treated as a single scene.",
                  "type": "boolean",
                  "title": "Use Scene Detection",
                  "default": false
                },
                "num_frames": {
                  "description": "The number of frames to generate between the input video frames.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 4,
                  "title": "Number of Frames",
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "num_frames",
                "use_scene_detection",
                "use_calculated_fps",
                "fps",
                "loop",
                "sync_mode",
                "video_quality",
                "video_write_mode"
              ],
              "required": [
                "video_url"
              ]
            },
            "FilmVideoOutput": {
              "title": "FILMVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/film-video-output.mp4"
                    }
                  ],
                  "description": "The generated video file with interpolated frames.",
                  "$ref": "#/components/schemas/VideoFile"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "VideoFile": {
              "title": "VideoFile",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ],
                  "title": "File Size"
                },
                "duration": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The duration of the video",
                  "title": "Duration"
                },
                "height": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The height of the video",
                  "title": "Height"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "fps": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The FPS of the video",
                  "title": "Fps"
                },
                "width": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The width of the video",
                  "title": "Width"
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name"
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type"
                },
                "num_frames": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The number of frames in the video",
                  "title": "Num Frames"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "width",
                "height",
                "fps",
                "duration",
                "num_frames"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/film/video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/film/video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/film/video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FilmVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/film/video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FilmVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/flux-lora",
      "title": "fal-ai/flux-lora",
      "description": "AI-powered video generation.",
      "task": "text-to-image",
      "endpoint": "https://queue.fal.run/fal-ai/flux-lora",
      "category": "text-to-image",
      "thumbnailUrl": "https://fal.media/files/elephant/RqIQsOY3cgQMMtCedJKlf_c2fc262516d24b94afdc17a747292710.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/flux-lora",
      "documentationUrl": "https://fal.ai/models/fal-ai/flux-lora/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate an image from.",
          "required": true,
          "default": "",
          "examples": [
            "Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil. Sharp focus on eye texture and color. Natural lighting to capture authentic eye shine and depth. The word \"FLUX\" is painted over it in big, white brush strokes with visible texture."
          ]
        },
        {
          "name": "image_size",
          "description": "The size of the generated image.",
          "required": false,
          "default": "landscape_4_3"
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 28,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "loras",
          "type": "array",
          "description": "\n            The LoRAs to use for the image generation. You can use any number of LoRAs\n            and they will be merged together to generate the final image.\n        ",
          "required": false,
          "default": []
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
          "required": false,
          "default": 3.5,
          "minimum": 0,
          "maximum": 35
        },
        {
          "name": "sync_mode",
          "type": "boolean",
          "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
          "required": false,
          "default": false
        },
        {
          "name": "num_images",
          "type": "integer",
          "description": "The number of images to generate. This is always set to 1 for streaming output.",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 4
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true
        },
        {
          "name": "output_format",
          "type": "string",
          "description": "The format of the generated image.",
          "required": false,
          "default": "jpeg",
          "enum": [
            "jpeg",
            "png"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generating the image."
        },
        {
          "name": "images",
          "type": "array",
          "description": "The generated image files info."
        },
        {
          "name": "timings",
          "type": "object",
          "description": "Timings"
        },
        {
          "name": "has_nsfw_concepts",
          "type": "array",
          "description": "Whether the generated images contain NSFW concepts."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/flux-lora",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/flux-lora",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/flux-lora queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/flux-lora",
            "category": "text-to-image",
            "thumbnailUrl": "https://fal.media/files/elephant/RqIQsOY3cgQMMtCedJKlf_c2fc262516d24b94afdc17a747292710.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/flux-lora",
            "documentationUrl": "https://fal.ai/models/fal-ai/flux-lora/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FluxLoraInput": {
              "title": "TextToImageInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil. Sharp focus on eye texture and color. Natural lighting to capture authentic eye shine and depth. The word \"FLUX\" is painted over it in big, white brush strokes with visible texture."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate an image from."
                },
                "num_images": {
                  "minimum": 1,
                  "maximum": 4,
                  "type": "integer",
                  "title": "Num Images",
                  "description": "The number of images to generate. This is always set to 1 for streaming output.",
                  "default": 1
                },
                "image_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Image Size",
                  "description": "The size of the generated image.",
                  "default": "landscape_4_3"
                },
                "output_format": {
                  "enum": [
                    "jpeg",
                    "png"
                  ],
                  "title": "Output Format",
                  "type": "string",
                  "description": "The format of the generated image.",
                  "default": "jpeg"
                },
                "loras": {
                  "description": "\n            The LoRAs to use for the image generation. You can use any number of LoRAs\n            and they will be merged together to generate the final image.\n        ",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoraWeight"
                  },
                  "examples": [],
                  "title": "Loras",
                  "default": []
                },
                "sync_mode": {
                  "title": "Sync Mode",
                  "type": "boolean",
                  "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
                  "default": false
                },
                "guidance_scale": {
                  "minimum": 0,
                  "maximum": 35,
                  "type": "number",
                  "title": "Guidance scale (CFG)",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
                  "default": 3.5
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "The number of inference steps to perform.",
                  "default": 28
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same image every time.\n        "
                },
                "enable_safety_checker": {
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_size",
                "num_inference_steps",
                "seed",
                "loras",
                "guidance_scale",
                "sync_mode",
                "num_images",
                "enable_safety_checker",
                "output_format"
              ],
              "required": [
                "prompt"
              ]
            },
            "FluxLoraOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generating the image."
                },
                "images": {
                  "title": "Images",
                  "type": "array",
                  "description": "The generated image files info.",
                  "items": {
                    "$ref": "#/components/schemas/Image"
                  }
                },
                "timings": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object",
                  "title": "Timings"
                },
                "has_nsfw_concepts": {
                  "title": "Has Nsfw Concepts",
                  "type": "array",
                  "description": "Whether the generated images contain NSFW concepts.",
                  "items": {
                    "type": "boolean"
                  }
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                }
              },
              "x-fal-order-properties": [
                "images",
                "timings",
                "seed",
                "has_nsfw_concepts",
                "prompt"
              ],
              "required": [
                "images",
                "timings",
                "seed",
                "has_nsfw_concepts",
                "prompt"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "maximum": 14142,
                  "type": "integer",
                  "title": "Height",
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "maximum": 14142,
                  "type": "integer",
                  "title": "Width",
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "LoraWeight": {
              "title": "LoraWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "title": "Scale",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "path",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "Image": {
              "title": "Image",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer"
                },
                "content_type": {
                  "title": "Content Type",
                  "type": "string",
                  "default": "image/jpeg"
                },
                "url": {
                  "title": "Url",
                  "type": "string"
                },
                "width": {
                  "title": "Width",
                  "type": "integer"
                }
              },
              "x-fal-order-properties": [
                "url",
                "width",
                "height",
                "content_type"
              ],
              "required": [
                "url",
                "width",
                "height"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/flux-lora/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-lora/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-lora": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FluxLoraInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-lora/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FluxLoraOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/flux-lora-fast-training",
      "title": "fal-ai/flux-lora-fast-training",
      "description": "AI-powered video generation.",
      "task": "training",
      "endpoint": "https://queue.fal.run/fal-ai/flux-lora-fast-training",
      "category": "training",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/video-training.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/flux-lora-fast-training",
      "documentationUrl": "https://fal.ai/models/fal-ai/flux-lora-fast-training/api",
      "inputs": [
        {
          "name": "images_data_url",
          "type": "string",
          "description": "\n        URL to zip archive with images. Try to use at least 4 images in general the more the better.\n\n        In addition to images the archive can contain text files with captions. Each text file should have the same name as the image file it corresponds to.\n    ",
          "required": true,
          "default": ""
        },
        {
          "name": "trigger_word",
          "type": "string",
          "description": "Trigger word to be used in the captions. If None, a trigger word will not be used.\n        If no captions are provide the trigger_word will be used instead of captions. If captions are the trigger word will not be used.\n        ",
          "required": false,
          "default": ""
        },
        {
          "name": "create_masks",
          "type": "boolean",
          "description": "If True segmentation masks will be used in the weight the training loss. For people a face mask is used if possible.",
          "required": false,
          "default": true
        },
        {
          "name": "steps",
          "type": "integer",
          "description": "Number of steps to train the LoRA on.",
          "required": false,
          "default": 25,
          "minimum": 1,
          "maximum": 10000,
          "examples": [
            1000
          ]
        },
        {
          "name": "is_style",
          "type": "boolean",
          "description": "If True, the training will be for a style. This will deactivate segmentation, captioning and will use trigger word instead. Use the trigger word to specify the style.",
          "required": false,
          "default": false
        },
        {
          "name": "is_input_format_already_preprocessed",
          "type": "boolean",
          "description": "Specifies whether the input data is already in a processed format. When set to False (default), the system expects raw input where image files and their corresponding caption files share the same name (e.g., 'photo.jpg' and 'photo.txt'). Set to True if your data is already in a preprocessed format.",
          "required": false,
          "default": false
        },
        {
          "name": "data_archive_format",
          "type": "string",
          "description": "The format of the archive. If not specified, the format will be inferred from the URL.",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "config_file",
          "type": "string",
          "description": "URL to the training configuration file."
        },
        {
          "name": "debug_preprocessed_output",
          "type": "string",
          "description": "URL to the preprocessed images."
        },
        {
          "name": "diffusers_lora_file",
          "type": "string",
          "description": "URL to the trained diffusers lora weights."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/flux-lora-fast-training",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/flux-lora-fast-training",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/flux-lora-fast-training queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/flux-lora-fast-training",
            "category": "training",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/video-training.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/flux-lora-fast-training",
            "documentationUrl": "https://fal.ai/models/fal-ai/flux-lora-fast-training/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FluxLoraFastTrainingInput": {
              "title": "PublicInput",
              "type": "object",
              "properties": {
                "images_data_url": {
                  "title": "Images Data Url",
                  "type": "string",
                  "description": "\n        URL to zip archive with images. Try to use at least 4 images in general the more the better.\n\n        In addition to images the archive can contain text files with captions. Each text file should have the same name as the image file it corresponds to.\n    "
                },
                "is_input_format_already_preprocessed": {
                  "title": "Is Input Format Already Preprocessed",
                  "type": "boolean",
                  "description": "Specifies whether the input data is already in a processed format. When set to False (default), the system expects raw input where image files and their corresponding caption files share the same name (e.g., 'photo.jpg' and 'photo.txt'). Set to True if your data is already in a preprocessed format.",
                  "default": false
                },
                "trigger_word": {
                  "title": "Trigger Word",
                  "type": "string",
                  "description": "Trigger word to be used in the captions. If None, a trigger word will not be used.\n        If no captions are provide the trigger_word will be used instead of captions. If captions are the trigger word will not be used.\n        ",
                  "nullable": true
                },
                "steps": {
                  "description": "Number of steps to train the LoRA on.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 10000,
                  "examples": [
                    1000
                  ],
                  "title": "Steps"
                },
                "data_archive_format": {
                  "title": "Data Archive Format",
                  "type": "string",
                  "description": "The format of the archive. If not specified, the format will be inferred from the URL.",
                  "nullable": true
                },
                "is_style": {
                  "title": "Is Style",
                  "type": "boolean",
                  "description": "If True, the training will be for a style. This will deactivate segmentation, captioning and will use trigger word instead. Use the trigger word to specify the style.",
                  "default": false
                },
                "create_masks": {
                  "title": "Create Masks",
                  "type": "boolean",
                  "description": "If True segmentation masks will be used in the weight the training loss. For people a face mask is used if possible.",
                  "default": true
                }
              },
              "x-fal-order-properties": [
                "images_data_url",
                "trigger_word",
                "create_masks",
                "steps",
                "is_style",
                "is_input_format_already_preprocessed",
                "data_archive_format"
              ],
              "required": [
                "images_data_url"
              ]
            },
            "FluxLoraFastTrainingOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "config_file": {
                  "title": "Config File",
                  "description": "URL to the training configuration file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                },
                "debug_preprocessed_output": {
                  "title": "Debug Preprocessed Output",
                  "description": "URL to the preprocessed images.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                },
                "diffusers_lora_file": {
                  "title": "Diffusers Lora File",
                  "description": "URL to the trained diffusers lora weights.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "diffusers_lora_file",
                "config_file",
                "debug_preprocessed_output"
              ],
              "required": [
                "diffusers_lora_file",
                "config_file"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/flux-lora-fast-training/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-lora-fast-training/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-lora-fast-training": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FluxLoraFastTrainingInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-lora-fast-training/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FluxLoraFastTrainingOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/flux-realism",
      "title": "fal-ai/flux-realism",
      "description": "AI-powered video generation.",
      "task": "private",
      "endpoint": "https://queue.fal.run/fal-ai/flux-realism",
      "category": "private",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-3.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/flux-realism",
      "documentationUrl": "https://fal.ai/models/fal-ai/flux-realism/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate an image from.",
          "required": true,
          "default": "",
          "examples": [
            "A charismatic speaker is captured mid-speech. He has long, slightly wavy blonde hair tied back in a ponytail. His expressive face, adorned with a salt-and-pepper beard and mustache, is animated as he gestures with his left hand, displaying a large ring on his pinky finger. He is holding a black microphone in his right hand, speaking passionately. The man is wearing a dark, textured shirt with unique, slightly shimmering patterns, and a green lanyard with multiple badges and logos hanging around his neck. The lanyard features the \"Autodesk\" and \"V-Ray\" logos prominently. Behind him, there is a blurred background with a white banner containing logos and text, indicating a professional or conference setting. The overall scene is vibrant and dynamic, capturing the energy of a live presentation."
          ]
        },
        {
          "name": "image_size",
          "description": "The size of the generated image.",
          "required": false,
          "default": "landscape_4_3"
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 28,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
          "required": false,
          "default": 3.5,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "sync_mode",
          "type": "boolean",
          "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
          "required": false,
          "default": false
        },
        {
          "name": "num_images",
          "type": "integer",
          "description": "The number of images to generate.",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 1
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true
        },
        {
          "name": "strength",
          "type": "number",
          "description": "The strength of the model.",
          "required": false,
          "default": 1,
          "minimum": 0.1,
          "maximum": 1
        },
        {
          "name": "output_format",
          "type": "string",
          "description": "The output image format.",
          "required": false,
          "default": "jpeg",
          "enum": [
            "jpeg",
            "png"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generating the image."
        },
        {
          "name": "images",
          "type": "array",
          "description": "The generated image files info."
        },
        {
          "name": "timings",
          "type": "object",
          "description": "Timings"
        },
        {
          "name": "has_nsfw_concepts",
          "type": "array",
          "description": "Whether the generated images contain NSFW concepts."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/flux-realism",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/flux-realism",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/flux-realism queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/flux-realism",
            "category": "private",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-3.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/flux-realism",
            "documentationUrl": "https://fal.ai/models/fal-ai/flux-realism/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FluxRealismInput": {
              "title": "BaseInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A charismatic speaker is captured mid-speech. He has long, slightly wavy blonde hair tied back in a ponytail. His expressive face, adorned with a salt-and-pepper beard and mustache, is animated as he gestures with his left hand, displaying a large ring on his pinky finger. He is holding a black microphone in his right hand, speaking passionately. The man is wearing a dark, textured shirt with unique, slightly shimmering patterns, and a green lanyard with multiple badges and logos hanging around his neck. The lanyard features the \"Autodesk\" and \"V-Ray\" logos prominently. Behind him, there is a blurred background with a white banner containing logos and text, indicating a professional or conference setting. The overall scene is vibrant and dynamic, capturing the energy of a live presentation."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate an image from."
                },
                "num_images": {
                  "minimum": 1,
                  "maximum": 1,
                  "type": "integer",
                  "title": "Num Images",
                  "description": "The number of images to generate.",
                  "default": 1
                },
                "image_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Image Size",
                  "description": "The size of the generated image.",
                  "default": "landscape_4_3"
                },
                "output_format": {
                  "enum": [
                    "jpeg",
                    "png"
                  ],
                  "title": "Output Format",
                  "type": "string",
                  "description": "The output image format.",
                  "default": "jpeg"
                },
                "sync_mode": {
                  "title": "Sync Mode",
                  "type": "boolean",
                  "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
                  "default": false
                },
                "strength": {
                  "minimum": 0.1,
                  "maximum": 1,
                  "type": "number",
                  "title": "Strength",
                  "description": "The strength of the model.",
                  "default": 1
                },
                "guidance_scale": {
                  "minimum": 0,
                  "maximum": 20,
                  "type": "number",
                  "title": "Guidance scale (CFG)",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
                  "default": 3.5
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "The number of inference steps to perform.",
                  "default": 28
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same image every time.\n        "
                },
                "enable_safety_checker": {
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_size",
                "num_inference_steps",
                "seed",
                "guidance_scale",
                "sync_mode",
                "num_images",
                "enable_safety_checker",
                "strength",
                "output_format"
              ],
              "required": [
                "prompt"
              ]
            },
            "FluxRealismOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generating the image."
                },
                "images": {
                  "title": "Images",
                  "type": "array",
                  "description": "The generated image files info.",
                  "items": {
                    "$ref": "#/components/schemas/Image"
                  }
                },
                "timings": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object",
                  "title": "Timings"
                },
                "has_nsfw_concepts": {
                  "title": "Has Nsfw Concepts",
                  "type": "array",
                  "description": "Whether the generated images contain NSFW concepts.",
                  "items": {
                    "type": "boolean"
                  }
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                }
              },
              "x-fal-order-properties": [
                "images",
                "timings",
                "seed",
                "has_nsfw_concepts",
                "prompt"
              ],
              "required": [
                "images",
                "timings",
                "seed",
                "has_nsfw_concepts",
                "prompt"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "maximum": 14142,
                  "type": "integer",
                  "title": "Height",
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "maximum": 14142,
                  "type": "integer",
                  "title": "Width",
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "Image": {
              "title": "Image",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer"
                },
                "content_type": {
                  "title": "Content Type",
                  "type": "string",
                  "default": "image/jpeg"
                },
                "url": {
                  "title": "Url",
                  "type": "string"
                },
                "width": {
                  "title": "Width",
                  "type": "integer"
                }
              },
              "x-fal-order-properties": [
                "url",
                "width",
                "height",
                "content_type"
              ],
              "required": [
                "url",
                "width",
                "height"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/flux-realism/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-realism/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-realism": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FluxRealismInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux-realism/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FluxRealismOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/flux/dev",
      "title": "fal-ai/flux/dev",
      "description": "AI-powered video generation.",
      "task": "text-to-image",
      "endpoint": "https://queue.fal.run/fal-ai/flux/dev",
      "category": "text-to-image",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/flux/dev",
      "documentationUrl": "https://fal.ai/models/fal-ai/flux/dev/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate an image from.",
          "required": true,
          "default": "",
          "examples": [
            "Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil. Sharp focus on eye texture and color. Natural lighting to capture authentic eye shine and depth. The word \"FLUX\" is painted over it in big, white brush strokes with visible texture."
          ]
        },
        {
          "name": "image_size",
          "description": "The size of the generated image.",
          "required": false,
          "default": "landscape_4_3"
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 28,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n        The same seed and the same prompt given to the same version of the model\n        will output the same image every time.\n    ",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n        The CFG (Classifier Free Guidance) scale is a measure of how close you want\n        the model to stick to your prompt when looking for a related image to show you.\n    ",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 20
        },
        {
          "name": "sync_mode",
          "type": "boolean",
          "description": "\n        If set to true, the function will wait for the image to be generated and uploaded\n        before returning the response. This will increase the latency of the function but\n        it allows you to get the image directly in the response without going through the CDN.\n    ",
          "required": false,
          "default": false
        },
        {
          "name": "num_images",
          "type": "integer",
          "description": "The number of images to generate.",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 4
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true
        },
        {
          "name": "output_format",
          "type": "string",
          "description": "The format of the generated image.",
          "required": false,
          "default": "jpeg",
          "enum": [
            "jpeg",
            "png"
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "The speed of the generation. The higher the speed, the faster the generation.",
          "required": false,
          "default": "none",
          "enum": [
            "none",
            "regular",
            "high"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generating the image."
        },
        {
          "name": "images",
          "type": "array",
          "description": "The generated image files info."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        },
        {
          "name": "has_nsfw_concepts",
          "type": "array",
          "description": "Whether the generated images contain NSFW concepts."
        },
        {
          "name": "timings",
          "type": "object",
          "description": "Timings"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/flux/dev",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/flux/dev",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/flux/dev queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/flux/dev",
            "category": "text-to-image",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/flux/dev",
            "documentationUrl": "https://fal.ai/models/fal-ai/flux/dev/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FluxDevInput": {
              "title": "BaseInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil. Sharp focus on eye texture and color. Natural lighting to capture authentic eye shine and depth. The word \"FLUX\" is painted over it in big, white brush strokes with visible texture."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate an image from."
                },
                "num_images": {
                  "minimum": 1,
                  "title": "Num Images",
                  "type": "integer",
                  "maximum": 4,
                  "description": "The number of images to generate.",
                  "default": 1
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular",
                    "high"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "The speed of the generation. The higher the speed, the faster the generation.",
                  "default": "none"
                },
                "image_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Image Size",
                  "description": "The size of the generated image.",
                  "default": "landscape_4_3"
                },
                "output_format": {
                  "enum": [
                    "jpeg",
                    "png"
                  ],
                  "title": "Output Format",
                  "type": "string",
                  "description": "The format of the generated image.",
                  "default": "jpeg"
                },
                "sync_mode": {
                  "title": "Sync Mode",
                  "type": "boolean",
                  "description": "\n        If set to true, the function will wait for the image to be generated and uploaded\n        before returning the response. This will increase the latency of the function but\n        it allows you to get the image directly in the response without going through the CDN.\n    ",
                  "default": false
                },
                "enable_safety_checker": {
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 50,
                  "description": "The number of inference steps to perform.",
                  "default": 28
                },
                "guidance_scale": {
                  "minimum": 1,
                  "title": "Guidance scale (CFG)",
                  "type": "number",
                  "maximum": 20,
                  "description": "\n        The CFG (Classifier Free Guidance) scale is a measure of how close you want\n        the model to stick to your prompt when looking for a related image to show you.\n    ",
                  "default": 3.5
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "\n        The same seed and the same prompt given to the same version of the model\n        will output the same image every time.\n    "
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_size",
                "num_inference_steps",
                "seed",
                "guidance_scale",
                "sync_mode",
                "num_images",
                "enable_safety_checker",
                "output_format",
                "acceleration"
              ],
              "required": [
                "prompt"
              ]
            },
            "FluxDevOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generating the image."
                },
                "images": {
                  "title": "Images",
                  "type": "array",
                  "description": "The generated image files info.",
                  "items": {
                    "$ref": "#/components/schemas/Image"
                  }
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                },
                "has_nsfw_concepts": {
                  "title": "Has Nsfw Concepts",
                  "type": "array",
                  "description": "Whether the generated images contain NSFW concepts.",
                  "items": {
                    "type": "boolean"
                  }
                },
                "timings": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object",
                  "title": "Timings"
                }
              },
              "x-fal-order-properties": [
                "images",
                "timings",
                "seed",
                "has_nsfw_concepts",
                "prompt"
              ],
              "required": [
                "images",
                "timings",
                "seed",
                "has_nsfw_concepts",
                "prompt"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "title": "Width",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "Image": {
              "title": "Image",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer"
                },
                "content_type": {
                  "title": "Content Type",
                  "type": "string",
                  "default": "image/jpeg"
                },
                "url": {
                  "title": "Url",
                  "type": "string"
                },
                "width": {
                  "title": "Width",
                  "type": "integer"
                }
              },
              "x-fal-order-properties": [
                "url",
                "width",
                "height",
                "content_type"
              ],
              "required": [
                "url",
                "width",
                "height"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/flux/dev/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux/dev/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux/dev": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FluxDevInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux/dev/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FluxDevOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/flux/schnell",
      "title": "fal-ai/flux/schnell",
      "description": "AI-powered video generation.",
      "task": "text-to-image",
      "endpoint": "https://queue.fal.run/fal-ai/flux/schnell",
      "category": "text-to-image",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/flux-schnell-thumb.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/flux/schnell",
      "documentationUrl": "https://fal.ai/models/fal-ai/flux/schnell/api",
      "inputs": [
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 12
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate an image from.",
          "required": true,
          "default": "",
          "examples": [
            "Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil. Sharp focus on eye texture and color. Natural lighting to capture authentic eye shine and depth. The word \"FLUX\" is painted over it in big, white brush strokes with visible texture."
          ]
        },
        {
          "name": "image_size",
          "description": "The size of the generated image.",
          "required": false,
          "default": "landscape_4_3"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n        The same seed and the same prompt given to the same version of the model\n        will output the same image every time.\n    ",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n        The CFG (Classifier Free Guidance) scale is a measure of how close you want\n        the model to stick to your prompt when looking for a related image to show you.\n    ",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 20
        },
        {
          "name": "sync_mode",
          "type": "boolean",
          "description": "\n        If set to true, the function will wait for the image to be generated and uploaded\n        before returning the response. This will increase the latency of the function but\n        it allows you to get the image directly in the response without going through the CDN.\n    ",
          "required": false,
          "default": false
        },
        {
          "name": "num_images",
          "type": "integer",
          "description": "The number of images to generate.",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 4
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true
        },
        {
          "name": "output_format",
          "type": "string",
          "description": "The format of the generated image.",
          "required": false,
          "default": "jpeg",
          "enum": [
            "jpeg",
            "png"
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "The speed of the generation. The higher the speed, the faster the generation.",
          "required": false,
          "default": "none",
          "enum": [
            "none",
            "regular",
            "high"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generating the image."
        },
        {
          "name": "images",
          "type": "array",
          "description": "The generated image files info."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        },
        {
          "name": "has_nsfw_concepts",
          "type": "array",
          "description": "Whether the generated images contain NSFW concepts."
        },
        {
          "name": "timings",
          "type": "object",
          "description": "Timings"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/flux/schnell",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/flux/schnell",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/flux/schnell queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/flux/schnell",
            "category": "text-to-image",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/flux-schnell-thumb.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/flux/schnell",
            "documentationUrl": "https://fal.ai/models/fal-ai/flux/schnell/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FluxSchnellInput": {
              "title": "SchnellTextToImageInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil. Sharp focus on eye texture and color. Natural lighting to capture authentic eye shine and depth. The word \"FLUX\" is painted over it in big, white brush strokes with visible texture."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate an image from."
                },
                "num_images": {
                  "minimum": 1,
                  "title": "Num Images",
                  "type": "integer",
                  "maximum": 4,
                  "description": "The number of images to generate.",
                  "default": 1
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular",
                    "high"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "The speed of the generation. The higher the speed, the faster the generation.",
                  "default": "none"
                },
                "image_size": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ImageSize"
                    },
                    {
                      "enum": [
                        "square_hd",
                        "square",
                        "portrait_4_3",
                        "portrait_16_9",
                        "landscape_4_3",
                        "landscape_16_9"
                      ],
                      "type": "string"
                    }
                  ],
                  "title": "Image Size",
                  "description": "The size of the generated image.",
                  "default": "landscape_4_3"
                },
                "output_format": {
                  "enum": [
                    "jpeg",
                    "png"
                  ],
                  "title": "Output Format",
                  "type": "string",
                  "description": "The format of the generated image.",
                  "default": "jpeg"
                },
                "sync_mode": {
                  "title": "Sync Mode",
                  "type": "boolean",
                  "description": "\n        If set to true, the function will wait for the image to be generated and uploaded\n        before returning the response. This will increase the latency of the function but\n        it allows you to get the image directly in the response without going through the CDN.\n    ",
                  "default": false
                },
                "enable_safety_checker": {
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 12,
                  "description": "The number of inference steps to perform.",
                  "default": 4
                },
                "guidance_scale": {
                  "minimum": 1,
                  "title": "Guidance scale (CFG)",
                  "type": "number",
                  "maximum": 20,
                  "description": "\n        The CFG (Classifier Free Guidance) scale is a measure of how close you want\n        the model to stick to your prompt when looking for a related image to show you.\n    ",
                  "default": 3.5
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "\n        The same seed and the same prompt given to the same version of the model\n        will output the same image every time.\n    "
                }
              },
              "x-fal-order-properties": [
                "num_inference_steps",
                "prompt",
                "image_size",
                "seed",
                "guidance_scale",
                "sync_mode",
                "num_images",
                "enable_safety_checker",
                "output_format",
                "acceleration"
              ],
              "required": [
                "prompt"
              ]
            },
            "FluxSchnellOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generating the image."
                },
                "images": {
                  "title": "Images",
                  "type": "array",
                  "description": "The generated image files info.",
                  "items": {
                    "$ref": "#/components/schemas/Image"
                  }
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                },
                "has_nsfw_concepts": {
                  "title": "Has Nsfw Concepts",
                  "type": "array",
                  "description": "Whether the generated images contain NSFW concepts.",
                  "items": {
                    "type": "boolean"
                  }
                },
                "timings": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object",
                  "title": "Timings"
                }
              },
              "x-fal-order-properties": [
                "images",
                "timings",
                "seed",
                "has_nsfw_concepts",
                "prompt"
              ],
              "required": [
                "images",
                "timings",
                "seed",
                "has_nsfw_concepts",
                "prompt"
              ]
            },
            "ImageSize": {
              "title": "ImageSize",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The height of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                },
                "width": {
                  "title": "Width",
                  "type": "integer",
                  "maximum": 14142,
                  "description": "The width of the generated image.",
                  "exclusiveMinimum": 0,
                  "default": 512
                }
              },
              "x-fal-order-properties": [
                "width",
                "height"
              ]
            },
            "Image": {
              "title": "Image",
              "type": "object",
              "properties": {
                "height": {
                  "title": "Height",
                  "type": "integer"
                },
                "content_type": {
                  "title": "Content Type",
                  "type": "string",
                  "default": "image/jpeg"
                },
                "url": {
                  "title": "Url",
                  "type": "string"
                },
                "width": {
                  "title": "Width",
                  "type": "integer"
                }
              },
              "x-fal-order-properties": [
                "url",
                "width",
                "height",
                "content_type"
              ],
              "required": [
                "url",
                "width",
                "height"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/flux/schnell/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux/schnell/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux/schnell": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FluxSchnellInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/flux/schnell/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FluxSchnellOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/framepack",
      "title": "fal-ai/framepack",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/framepack",
      "category": "image-to-video",
      "thumbnailUrl": "https://v3.fal.media/files/koala/dUfFd9Z7aSX06gL2_qXn0_image.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/framepack",
      "documentationUrl": "https://fal.ai/models/fal-ai/framepack/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation (max 500 characters).",
          "required": true,
          "default": "",
          "examples": [
            "A mesmerising video of a deep sea jellyfish moving through an inky-black ocean. The jellyfish glows softly with an amber bioluminescence. The overall scene is lifelike."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "",
          "examples": [
            "Ugly, blurry distorted, bad quality"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image input.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/framepack/framepack.jpg"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
          "required": false,
          "default": "480p",
          "enum": [
            "720p",
            "480p"
          ]
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "Classifier-Free Guidance scale for the generation.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 7
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for the generation.",
          "required": false,
          "default": 10,
          "minimum": 0,
          "maximum": 32
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 180,
          "minimum": 30,
          "maximum": 900
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Output: video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/framepack",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/framepack",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/framepack queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/framepack",
            "category": "image-to-video",
            "thumbnailUrl": "https://v3.fal.media/files/koala/dUfFd9Z7aSX06gL2_qXn0_image.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/framepack",
            "documentationUrl": "https://fal.ai/models/fal-ai/framepack/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FramepackInput": {
              "title": "FramePackRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A mesmerising video of a deep sea jellyfish moving through an inky-black ocean. The jellyfish glows softly with an amber bioluminescence. The overall scene is lifelike."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt for video generation (max 500 characters)."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "480p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
                  "default": "480p"
                },
                "num_frames": {
                  "minimum": 30,
                  "title": "Number of Frames",
                  "type": "integer",
                  "maximum": 900,
                  "description": "The number of frames to generate.",
                  "default": 180
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/framepack/framepack.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image input."
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance Scale",
                  "type": "number",
                  "maximum": 32,
                  "description": "Guidance scale for the generation.",
                  "default": 10
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "The seed to use for generating the video."
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "negative_prompt": {
                  "examples": [
                    "Ugly, blurry distorted, bad quality"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "cfg_scale": {
                  "minimum": 0,
                  "title": "CFG Scale",
                  "type": "number",
                  "maximum": 7,
                  "description": "Classifier-Free Guidance scale for the generation.",
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "image_url",
                "seed",
                "aspect_ratio",
                "resolution",
                "cfg_scale",
                "guidance_scale",
                "num_frames",
                "enable_safety_checker"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "FramepackOutput": {
              "title": "FramePackResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/framepack/TfJPbwm6_D60dcWEv9LVX_output_video.mp4"
                    }
                  ],
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/framepack/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FramepackInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FramepackOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/framepack/f1",
      "title": "fal-ai/framepack/f1",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/framepack/f1",
      "category": "image-to-video",
      "thumbnailUrl": "https://v3.fal.media/files/koala/dUfFd9Z7aSX06gL2_qXn0_image.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/framepack/f1",
      "documentationUrl": "https://fal.ai/models/fal-ai/framepack/f1/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation (max 500 characters).",
          "required": true,
          "default": "",
          "examples": [
            "A mesmerising video of a deep sea jellyfish moving through an inky-black ocean. The jellyfish glows softly with an amber bioluminescence. The overall scene is lifelike."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "",
          "examples": [
            "Ugly, blurry distorted, bad quality"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image input.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/framepack/framepack.jpg"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
          "required": false,
          "default": "480p",
          "enum": [
            "720p",
            "480p"
          ]
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "Classifier-Free Guidance scale for the generation.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 7
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for the generation.",
          "required": false,
          "default": 10,
          "minimum": 0,
          "maximum": 32
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 180,
          "minimum": 30,
          "maximum": 900
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Output: video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/framepack/f1",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/framepack/f1",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/framepack/f1 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/framepack/f1",
            "category": "image-to-video",
            "thumbnailUrl": "https://v3.fal.media/files/koala/dUfFd9Z7aSX06gL2_qXn0_image.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/framepack/f1",
            "documentationUrl": "https://fal.ai/models/fal-ai/framepack/f1/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FramepackF1Input": {
              "title": "FramePackF1Request",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A mesmerising video of a deep sea jellyfish moving through an inky-black ocean. The jellyfish glows softly with an amber bioluminescence. The overall scene is lifelike."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt for video generation (max 500 characters)."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "480p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
                  "default": "480p"
                },
                "num_frames": {
                  "minimum": 30,
                  "title": "Number of Frames",
                  "type": "integer",
                  "maximum": 900,
                  "description": "The number of frames to generate.",
                  "default": 180
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/framepack/framepack.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image input."
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance Scale",
                  "type": "number",
                  "maximum": 32,
                  "description": "Guidance scale for the generation.",
                  "default": 10
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "The seed to use for generating the video."
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "negative_prompt": {
                  "examples": [
                    "Ugly, blurry distorted, bad quality"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "cfg_scale": {
                  "minimum": 0,
                  "title": "CFG Scale",
                  "type": "number",
                  "maximum": 7,
                  "description": "Classifier-Free Guidance scale for the generation.",
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "image_url",
                "seed",
                "aspect_ratio",
                "resolution",
                "cfg_scale",
                "guidance_scale",
                "num_frames",
                "enable_safety_checker"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "FramepackF1Output": {
              "title": "FramePackF1Response",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/framepack/TfJPbwm6_D60dcWEv9LVX_output_video.mp4"
                    }
                  ],
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/framepack/f1/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack/f1/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack/f1": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FramepackF1Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack/f1/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FramepackF1Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/framepack/flf2v",
      "title": "fal-ai/framepack/flf2v",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/framepack/flf2v",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-5.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/framepack/flf2v",
      "documentationUrl": "https://fal.ai/models/fal-ai/framepack/flf2v/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation (max 500 characters).",
          "required": true,
          "default": "",
          "examples": [
            "A tabby cat is confidely strolling toward the camera, when it spins and with a flash of magic reveals itself to be a cat-dragon hybrid with glistening amber scales."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "",
          "examples": [
            "Ugly, blurry distorted, bad quality"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image input.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/wan_flf/first_frame.png"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
          "required": false,
          "default": "480p",
          "enum": [
            "720p",
            "480p"
          ]
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "Classifier-Free Guidance scale for the generation.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 7
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for the generation.",
          "required": false,
          "default": 10,
          "minimum": 0,
          "maximum": 32
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 240,
          "minimum": 30,
          "maximum": 1800
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "URL of the end image input.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/wan_flf/last_frame.png"
          ]
        },
        {
          "name": "strength",
          "type": "number",
          "description": "Determines the influence of the final frame on the generated video. Higher values result in the output being more heavily influenced by the last frame.",
          "required": false,
          "default": 0.8,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Output: video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/framepack/flf2v",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/framepack/flf2v",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/framepack/flf2v queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/framepack/flf2v",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-5.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/framepack/flf2v",
            "documentationUrl": "https://fal.ai/models/fal-ai/framepack/flf2v/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "FramepackFlf2vInput": {
              "title": "FramePackF2LFRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A tabby cat is confidely strolling toward the camera, when it spins and with a flash of magic reveals itself to be a cat-dragon hybrid with glistening amber scales."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt for video generation (max 500 characters)."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "480p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
                  "default": "480p"
                },
                "num_frames": {
                  "minimum": 30,
                  "title": "Number of Frames",
                  "type": "integer",
                  "maximum": 1800,
                  "description": "The number of frames to generate.",
                  "default": 240
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/wan_flf/first_frame.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image input."
                },
                "strength": {
                  "minimum": 0,
                  "title": "Strength of last frame",
                  "type": "number",
                  "maximum": 1,
                  "description": "Determines the influence of the final frame on the generated video. Higher values result in the output being more heavily influenced by the last frame.",
                  "default": 0.8
                },
                "guidance_scale": {
                  "minimum": 0,
                  "title": "Guidance Scale",
                  "type": "number",
                  "maximum": 32,
                  "description": "Guidance scale for the generation.",
                  "default": 10
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "The seed to use for generating the video."
                },
                "end_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/wan_flf/last_frame.png"
                  ],
                  "title": "End Image Url",
                  "type": "string",
                  "description": "URL of the end image input."
                },
                "negative_prompt": {
                  "examples": [
                    "Ugly, blurry distorted, bad quality"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "cfg_scale": {
                  "minimum": 0,
                  "title": "CFG Scale",
                  "type": "number",
                  "maximum": 7,
                  "description": "Classifier-Free Guidance scale for the generation.",
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "image_url",
                "seed",
                "aspect_ratio",
                "resolution",
                "cfg_scale",
                "guidance_scale",
                "num_frames",
                "enable_safety_checker",
                "end_image_url",
                "strength"
              ],
              "required": [
                "prompt",
                "image_url",
                "end_image_url"
              ]
            },
            "FramepackFlf2vOutput": {
              "title": "FramePackFLF2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/flf2v.mp4"
                    }
                  ],
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/framepack/flf2v/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack/flf2v/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack/flf2v": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FramepackFlf2vInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/framepack/flf2v/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FramepackFlf2vOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-avatar",
      "title": "fal-ai/hunyuan-avatar",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-avatar",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-avatar",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-avatar/api",
      "inputs": [
        {
          "name": "audio_url",
          "type": "string",
          "description": "The URL of the audio file.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/koala/80RpP2FOhXZUV3NRKUWZu_2.WAV"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the reference image.",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/tiger/Y8EgvVqxORBCqWC1OlX3D_3c4c8bbe7f3941a2aea93e278ba14803.jpg",
            "https://v3.fal.media/files/zebra/HWILyw2UYI50Sp_4mDxqr_src2.png"
          ]
        },
        {
          "name": "text",
          "type": "string",
          "description": "Text prompt describing the scene.",
          "required": false,
          "default": "A cat is singing."
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of video frames to generate at 25 FPS. If greater than the input audio length, it will capped to the length of the input audio.",
          "required": false,
          "default": 129,
          "minimum": 129,
          "maximum": 401
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 30,
          "maximum": 50
        },
        {
          "name": "turbo_mode",
          "type": "boolean",
          "description": "If true, the video will be generated faster with no noticeable degradation in the visual quality.",
          "required": false,
          "default": true
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation.",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with the avatar animation."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-avatar",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-avatar",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-avatar queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-avatar",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-avatar",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-avatar/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanAvatarInput": {
              "x-fal-order-properties": [
                "audio_url",
                "image_url",
                "text",
                "num_frames",
                "num_inference_steps",
                "turbo_mode",
                "seed"
              ],
              "type": "object",
              "properties": {
                "text": {
                  "title": "Text",
                  "type": "string",
                  "description": "Text prompt describing the scene.",
                  "default": "A cat is singing."
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/tiger/Y8EgvVqxORBCqWC1OlX3D_3c4c8bbe7f3941a2aea93e278ba14803.jpg",
                    "https://v3.fal.media/files/zebra/HWILyw2UYI50Sp_4mDxqr_src2.png"
                  ],
                  "description": "The URL of the reference image.",
                  "type": "string",
                  "title": "Image Url"
                },
                "turbo_mode": {
                  "title": "Turbo Mode",
                  "type": "boolean",
                  "description": "If true, the video will be generated faster with no noticeable degradation in the visual quality.",
                  "default": true
                },
                "audio_url": {
                  "examples": [
                    "https://v3.fal.media/files/koala/80RpP2FOhXZUV3NRKUWZu_2.WAV"
                  ],
                  "description": "The URL of the audio file.",
                  "type": "string",
                  "title": "Audio Url"
                },
                "seed": {
                  "description": "Random seed for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "num_inference_steps": {
                  "minimum": 30,
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "maximum": 50,
                  "default": 30
                },
                "num_frames": {
                  "minimum": 129,
                  "maximum": 401,
                  "type": "integer",
                  "title": "Num Frames",
                  "description": "Number of video frames to generate at 25 FPS. If greater than the input audio length, it will capped to the length of the input audio.",
                  "default": 129
                }
              },
              "title": "Input",
              "required": [
                "audio_url",
                "image_url"
              ]
            },
            "HunyuanAvatarOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 1646349,
                      "file_name": "output_with_audio.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/monkey/3ODbdqHHQL3SvgRXEJXQ-_hunava_8333d613-d4e3-42ff-be36-1e97775621ba_audio.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video with the avatar animation.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "Output",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-avatar/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-avatar/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-avatar": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanAvatarInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-avatar/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanAvatarOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-custom",
      "title": "fal-ai/hunyuan-custom",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-custom",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-custom",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-custom/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation (max 500 characters).",
          "required": true,
          "default": "",
          "examples": [
            "Realistic, High-quality. A woman is playing a violin."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "Aerial view, aerial view, overexposed, low quality, deformation, a poor composition, bad hands, bad teeth, bad eyes, bad limbs, distortion, blurring, text, subtitles, static, picture, black border.",
          "examples": [
            "Ugly, blurry."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image input.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/hidream/woman.png"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to run. Lower gets faster results, higher gets better results.",
          "required": false,
          "default": 30,
          "minimum": 10,
          "maximum": 30
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
          "required": false,
          "default": "512p",
          "enum": [
            "512p",
            "720p"
          ]
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "The frames per second of the generated video.",
          "required": false,
          "default": 25,
          "minimum": 16,
          "maximum": 30
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "Classifier-Free Guidance scale for the generation.",
          "required": false,
          "default": 7.5,
          "minimum": 1.5,
          "maximum": 13
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 129,
          "minimum": 81,
          "maximum": 129
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-custom",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-custom",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-custom queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-custom",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-custom",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-custom/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanCustomInput": {
              "title": "HunyuanCustomRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Realistic, High-quality. A woman is playing a violin."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt for video generation (max 500 characters)."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "512p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
                  "default": "512p"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_frames": {
                  "minimum": 81,
                  "title": "Number of Frames",
                  "type": "integer",
                  "maximum": 129,
                  "description": "The number of frames to generate.",
                  "default": 129
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/hidream/woman.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image input."
                },
                "fps": {
                  "minimum": 16,
                  "title": "Frames per second",
                  "type": "integer",
                  "maximum": 30,
                  "description": "The frames per second of the generated video.",
                  "default": 25
                },
                "enable_prompt_expansion": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": true
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating the video."
                },
                "num_inference_steps": {
                  "minimum": 10,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 30,
                  "description": "The number of inference steps to run. Lower gets faster results, higher gets better results.",
                  "default": 30
                },
                "negative_prompt": {
                  "examples": [
                    "Ugly, blurry."
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "Aerial view, aerial view, overexposed, low quality, deformation, a poor composition, bad hands, bad teeth, bad eyes, bad limbs, distortion, blurring, text, subtitles, static, picture, black border."
                },
                "cfg_scale": {
                  "minimum": 1.5,
                  "title": "CFG Scale",
                  "type": "number",
                  "maximum": 13,
                  "description": "Classifier-Free Guidance scale for the generation.",
                  "default": 7.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "image_url",
                "num_inference_steps",
                "seed",
                "aspect_ratio",
                "resolution",
                "fps",
                "cfg_scale",
                "num_frames",
                "enable_prompt_expansion",
                "enable_safety_checker"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "HunyuanCustomOutput": {
              "title": "HunyuanCustomResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/test/p1/uQ4ddGyJ9U6cymnns0l6o_input-image-1747117169.mp4"
                    }
                  ],
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-custom/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-custom/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-custom": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanCustomInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-custom/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanCustomOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-portrait",
      "title": "fal-ai/hunyuan-portrait",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-portrait",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-4.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-portrait",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-portrait/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the driving video.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/panda/2GQH1q-bJOamqCGWMtKvS_what_if.mp4"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the source image.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/elephant/GG7iU-4GmzkX3_gIXutRV_image.png"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation. If None, a random seed will be used.",
          "required": false,
          "default": null
        },
        {
          "name": "use_arcface",
          "type": "boolean",
          "description": "Whether to use ArcFace for face recognition.",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with the portrait animation."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-portrait",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-portrait",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-portrait queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-portrait",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-4.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-portrait",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-portrait/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanPortraitInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/panda/2GQH1q-bJOamqCGWMtKvS_what_if.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the driving video."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation. If None, a random seed will be used."
                },
                "use_arcface": {
                  "title": "Use Arcface",
                  "type": "boolean",
                  "description": "Whether to use ArcFace for face recognition.",
                  "default": true
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/elephant/GG7iU-4GmzkX3_gIXutRV_image.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the source image."
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "image_url",
                "seed",
                "use_arcface"
              ],
              "required": [
                "video_url",
                "image_url"
              ]
            },
            "HunyuanPortraitOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 5485412,
                      "file_name": "output_with_audio.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/tiger/9H3vkuqNoYcKr6OBGj3Mr_3b01c7a4-802c-4697-b8fb-ad86bd0eba41_output_with_audio.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video with the portrait animation.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-portrait/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-portrait/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-portrait": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanPortraitInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-portrait/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanPortraitOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-video",
      "title": "fal-ai/hunyuan-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to run. Lower gets faster results, higher gets better results.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 30
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "pro_mode",
          "type": "boolean",
          "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time and cost 2x more billing units.",
          "required": false,
          "default": false
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "num_frames",
          "type": "string",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 129,
          "enum": [
            "129",
            "85"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanVideoInput": {
              "title": "HunyuanVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate.",
                  "default": "720p"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 30,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "The number of inference steps to run. Lower gets faster results, higher gets better results.",
                  "default": 30
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating the video."
                },
                "num_frames": {
                  "enum": [
                    "129",
                    "85"
                  ],
                  "title": "Number of Frames",
                  "type": "string",
                  "description": "The number of frames to generate.",
                  "default": 129
                },
                "pro_mode": {
                  "title": "Pro Mode",
                  "type": "boolean",
                  "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time and cost 2x more billing units.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "num_inference_steps",
                "seed",
                "pro_mode",
                "aspect_ratio",
                "resolution",
                "num_frames",
                "enable_safety_checker"
              ],
              "required": [
                "prompt"
              ]
            },
            "HunyuanVideoOutput": {
              "title": "HunyuanT2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/kangaroo/y5-1YTGpun17eSeggZMzX_video-1733468228.mp4"
                    }
                  ],
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-video-image-to-video",
      "title": "fal-ai/hunyuan-video-image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-video-image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video-image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video-image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "Two muscular cats boxing in a boxing ring."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image input.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/hunyuan_i2v.jpg"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate.",
          "required": false,
          "default": "720p",
          "enum": [
            "720p"
          ]
        },
        {
          "name": "num_frames",
          "type": "string",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 129,
          "enum": [
            "129"
          ]
        },
        {
          "name": "i2v_stability",
          "type": "boolean",
          "description": "Turning on I2V Stability reduces hallucination but also reduces motion.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Output: video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-video-image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-video-image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-video-image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-video-image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video-image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video-image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanVideoImageToVideoInput": {
              "title": "HunyuanVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Two muscular cats boxing in a boxing ring."
                  ],
                  "maxLength": 1000,
                  "type": "string",
                  "title": "Prompt",
                  "description": "The prompt to generate the video from."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate.",
                  "default": "720p"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/hunyuan_i2v.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image input."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating the video."
                },
                "num_frames": {
                  "enum": [
                    "129"
                  ],
                  "title": "Number of Frames",
                  "type": "string",
                  "description": "The number of frames to generate.",
                  "default": 129
                },
                "i2v_stability": {
                  "title": "I2V Stability",
                  "type": "boolean",
                  "description": "Turning on I2V Stability reduces hallucination but also reduces motion.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "seed",
                "aspect_ratio",
                "resolution",
                "num_frames",
                "i2v_stability"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "HunyuanVideoImageToVideoOutput": {
              "title": "HunyuanI2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-video-image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanVideoImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanVideoImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-video-img2vid-lora",
      "title": "fal-ai/hunyuan-video-img2vid-lora",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-video-img2vid-lora",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video-img2vid-lora",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video-img2vid-lora/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A low angle shot of a man walking down a street, illuminated by the neon signs of the bars around him"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL to the image to generate the video from. The image must be 960x544 or it will get cropped and resized to that size.",
          "required": true,
          "default": "",
          "examples": [
            "https://d3phaj0sisr2ct.cloudfront.net/research/eugene.jpg"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-video-img2vid-lora",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-video-img2vid-lora",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-video-img2vid-lora queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-video-img2vid-lora",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video-img2vid-lora",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video-img2vid-lora/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanVideoImg2vidLoraInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A low angle shot of a man walking down a street, illuminated by the neon signs of the bars around him"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating the video."
                },
                "image_url": {
                  "examples": [
                    "https://d3phaj0sisr2ct.cloudfront.net/research/eugene.jpg"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "The URL to the image to generate the video from. The image must be 960x544 or it will get cropped and resized to that size."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "seed"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "HunyuanVideoImg2vidLoraOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/gallery/man-smiles.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-video-img2vid-lora/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-img2vid-lora/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-img2vid-lora": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanVideoImg2vidLoraInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-img2vid-lora/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanVideoImg2vidLoraOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-video-lora",
      "title": "fal-ai/hunyuan-video-lora",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-video-lora",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video-lora",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video-lora/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "pro_mode",
          "type": "boolean",
          "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time and cost 2x more billing units.",
          "required": false,
          "default": false
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "num_frames",
          "type": "string",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 129,
          "enum": [
            "129",
            "85"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "loras",
          "type": "array",
          "description": "\n            The LoRAs to use for the image generation. You can use any number of LoRAs\n            and they will be merged together to generate the final image.\n        ",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-video-lora",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-video-lora",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-video-lora queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-video-lora",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video-lora",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video-lora/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanVideoLoraInput": {
              "title": "HunyuanT2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate.",
                  "default": "720p"
                },
                "loras": {
                  "description": "\n            The LoRAs to use for the image generation. You can use any number of LoRAs\n            and they will be merged together to generate the final image.\n        ",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoraWeight"
                  },
                  "examples": [],
                  "title": "Loras",
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating the video."
                },
                "num_frames": {
                  "enum": [
                    "129",
                    "85"
                  ],
                  "title": "Number of Frames",
                  "type": "string",
                  "description": "The number of frames to generate.",
                  "default": 129
                },
                "pro_mode": {
                  "title": "Pro Mode",
                  "type": "boolean",
                  "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time and cost 2x more billing units.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "pro_mode",
                "aspect_ratio",
                "resolution",
                "num_frames",
                "enable_safety_checker",
                "loras"
              ],
              "required": [
                "prompt"
              ]
            },
            "HunyuanVideoLoraOutput": {
              "title": "HunyuanT2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/kangaroo/y5-1YTGpun17eSeggZMzX_video-1733468228.mp4"
                    }
                  ],
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "LoraWeight": {
              "title": "LoraWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "title": "Scale",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "path",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-video-lora/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-lora/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-lora": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanVideoLoraInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-lora/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanVideoLoraOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-video-lora/video-to-video",
      "title": "fal-ai/hunyuan-video-lora/video-to-video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-video-lora/video-to-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video-lora/video-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video-lora/video-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a dark blue leather jacket, a long pink dress, and bright yellow boots, and carries a black purse."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "pro_mode",
          "type": "boolean",
          "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time and cost 2x more billing units.",
          "required": false,
          "default": false
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "num_frames",
          "type": "string",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 129,
          "enum": [
            "129",
            "85"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "loras",
          "type": "array",
          "description": "\n            The LoRAs to use for the image generation. You can use any number of LoRAs\n            and they will be merged together to generate the final image.\n        ",
          "required": false,
          "default": []
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the video",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/hunyuan_video/hunyuan_v2v_input.mp4"
          ]
        },
        {
          "name": "strength",
          "type": "number",
          "description": "Strength of video-to-video",
          "required": false,
          "default": 0.75,
          "minimum": 0.01,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-video-lora/video-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-video-lora/video-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-video-lora/video-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-video-lora/video-to-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video-lora/video-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video-lora/video-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanVideoLoraVideoToVideoInput": {
              "title": "HunyuanV2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a dark blue leather jacket, a long pink dress, and bright yellow boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate.",
                  "default": "720p"
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/hunyuan_video/hunyuan_v2v_input.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the video"
                },
                "loras": {
                  "description": "\n            The LoRAs to use for the image generation. You can use any number of LoRAs\n            and they will be merged together to generate the final image.\n        ",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoraWeight"
                  },
                  "examples": [],
                  "title": "Loras",
                  "default": []
                },
                "strength": {
                  "minimum": 0.01,
                  "maximum": 1,
                  "type": "number",
                  "title": "Strength",
                  "description": "Strength of video-to-video",
                  "default": 0.75
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating the video."
                },
                "num_frames": {
                  "enum": [
                    "129",
                    "85"
                  ],
                  "title": "Number of Frames",
                  "type": "string",
                  "description": "The number of frames to generate.",
                  "default": 129
                },
                "pro_mode": {
                  "title": "Pro Mode",
                  "type": "boolean",
                  "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time and cost 2x more billing units.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "pro_mode",
                "aspect_ratio",
                "resolution",
                "num_frames",
                "enable_safety_checker",
                "loras",
                "video_url",
                "strength"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "HunyuanVideoLoraVideoToVideoOutput": {
              "title": "HunyuanV2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/hunyuan_video/hunyuan_v2v_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "LoraWeight": {
              "title": "LoraWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "title": "Scale",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "default": 1
                }
              },
              "x-fal-order-properties": [
                "path",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-video-lora/video-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-lora/video-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-lora/video-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanVideoLoraVideoToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video-lora/video-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanVideoLoraVideoToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/hunyuan-video/video-to-video",
      "title": "fal-ai/hunyuan-video/video-to-video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/hunyuan-video/video-to-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
      "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video/video-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video/video-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a dark blue leather jacket, a long pink dress, and bright yellow boots, and carries a black purse."
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to run. Lower gets faster results, higher gets better results.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 30
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "pro_mode",
          "type": "boolean",
          "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time and cost 2x more billing units.",
          "required": false,
          "default": false
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video to generate.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video to generate.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "num_frames",
          "type": "string",
          "description": "The number of frames to generate.",
          "required": false,
          "default": 129,
          "enum": [
            "129",
            "85"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the video input.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/hunyuan_video/hunyuan_v2v_input.mp4"
          ]
        },
        {
          "name": "strength",
          "type": "number",
          "description": "Strength for Video-to-Video",
          "required": false,
          "default": 0.85,
          "minimum": 0.01,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generating the video."
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/hunyuan-video/video-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/hunyuan-video/video-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/hunyuan-video/video-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/hunyuan-video/video-to-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video.webp?v=1",
            "playgroundUrl": "https://fal.ai/models/fal-ai/hunyuan-video/video-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/hunyuan-video/video-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "HunyuanVideoVideoToVideoInput": {
              "title": "HunyuanV2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a dark blue leather jacket, a long pink dress, and bright yellow boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio (W:H)",
                  "type": "string",
                  "description": "The aspect ratio of the video to generate.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the video to generate.",
                  "default": "720p"
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/hunyuan_video/hunyuan_v2v_input.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the video input."
                },
                "strength": {
                  "minimum": 0.01,
                  "maximum": 1,
                  "type": "number",
                  "title": "Strength",
                  "description": "Strength for Video-to-Video",
                  "default": 0.85
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 30,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "The number of inference steps to run. Lower gets faster results, higher gets better results.",
                  "default": 30
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating the video."
                },
                "num_frames": {
                  "enum": [
                    "129",
                    "85"
                  ],
                  "title": "Number of Frames",
                  "type": "string",
                  "description": "The number of frames to generate.",
                  "default": 129
                },
                "pro_mode": {
                  "title": "Pro Mode",
                  "type": "boolean",
                  "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time and cost 2x more billing units.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "num_inference_steps",
                "seed",
                "pro_mode",
                "aspect_ratio",
                "resolution",
                "num_frames",
                "enable_safety_checker",
                "video_url",
                "strength"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "HunyuanVideoVideoToVideoOutput": {
              "title": "HunyuanT2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generating the video."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/kangaroo/y5-1YTGpun17eSeggZMzX_video-1733468228.mp4"
                    }
                  ],
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/hunyuan-video/video-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video/video-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video/video-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HunyuanVideoVideoToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/hunyuan-video/video-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HunyuanVideoVideoToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/infinitalk",
      "title": "fal-ai/infinitalk",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/infinitalk",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/tgT82rlusP7Mfw1gs8CsE_0cd1e1a621dd484b8c84973e3a1292bf.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/infinitalk",
      "documentationUrl": "https://fal.ai/models/fal-ai/infinitalk/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/koala/gmpc0QevDF9bBsL1EAYVF_1c637094161147559f0910a68275dc34.png"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "The URL of the audio file.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/penguin/PtiCYda53E9Dav25QmQYI_output.mp3"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A woman with colorful hair talking on a podcast."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 41 to 721.",
          "required": false,
          "default": 145,
          "minimum": 41,
          "maximum": 721
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the video to generate. Must be either 480p or 720p.",
          "required": false,
          "default": "480p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": 42
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "The acceleration level to use for generation.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular",
            "high"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/infinitalk",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/infinitalk",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/infinitalk queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/infinitalk",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/tgT82rlusP7Mfw1gs8CsE_0cd1e1a621dd484b8c84973e3a1292bf.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/infinitalk",
            "documentationUrl": "https://fal.ai/models/fal-ai/infinitalk/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "InfinitalkInput": {
              "x-fal-order-properties": [
                "image_url",
                "audio_url",
                "prompt",
                "num_frames",
                "resolution",
                "seed",
                "acceleration"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman with colorful hair talking on a podcast."
                  ],
                  "description": "The text prompt to guide video generation.",
                  "type": "string",
                  "title": "Prompt"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "description": "Resolution of the video to generate. Must be either 480p or 720p.",
                  "type": "string",
                  "title": "Resolution",
                  "default": "480p"
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular",
                    "high"
                  ],
                  "description": "The acceleration level to use for generation.",
                  "type": "string",
                  "title": "Acceleration",
                  "default": "regular"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/koala/gmpc0QevDF9bBsL1EAYVF_1c637094161147559f0910a68275dc34.png"
                  ],
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
                  "type": "string",
                  "title": "Image URL"
                },
                "audio_url": {
                  "examples": [
                    "https://v3.fal.media/files/penguin/PtiCYda53E9Dav25QmQYI_output.mp3"
                  ],
                  "description": "The URL of the audio file.",
                  "type": "string",
                  "title": "Audio URL"
                },
                "seed": {
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "type": "integer",
                  "title": "Seed",
                  "default": 42
                },
                "num_frames": {
                  "minimum": 41,
                  "maximum": 721,
                  "type": "integer",
                  "description": "Number of frames to generate. Must be between 41 to 721.",
                  "title": "Number of Frames",
                  "default": 145
                }
              },
              "title": "InfiniTalkSingleAudioRequest",
              "required": [
                "image_url",
                "audio_url",
                "prompt"
              ]
            },
            "InfinitalkOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "description": "The seed used for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "video": {
                  "examples": [
                    {
                      "file_size": 515275,
                      "file_name": "74af6c0bdd6041c3b1130d54885e3eee.mp4",
                      "content_type": "application/octet-stream",
                      "url": "https://v3.fal.media/files/kangaroo/z6VqUwNTwzuWa6YE1g7In_74af6c0bdd6041c3b1130d54885e3eee.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "AvatarSingleAudioResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes.",
                  "title": "File Size",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file.",
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/infinitalk/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/infinitalk/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/infinitalk": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/InfinitalkInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/infinitalk/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/InfinitalkOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/infinitalk/single-text",
      "title": "fal-ai/infinitalk/single-text",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/infinitalk/single-text",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/tiger/no2x6NmiDH44hhb5uCRpF_7a1a914245a54424a4f70019bb757ea3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/infinitalk/single-text",
      "documentationUrl": "https://fal.ai/models/fal-ai/infinitalk/single-text/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/panda/HuM21CXMf0q7OO2zbvwhV_c4533aada79a495b90e50e32dc9b83a8.png"
          ]
        },
        {
          "name": "text_input",
          "type": "string",
          "description": "The text input to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Spend more time with people who make you feel alive, and less with things that drain your soul."
          ]
        },
        {
          "name": "voice",
          "type": "string",
          "description": "The voice to use for speech generation",
          "required": true,
          "default": "",
          "enum": [
            "Aria",
            "Roger",
            "Sarah",
            "Laura",
            "Charlie",
            "George",
            "Callum",
            "River",
            "Liam",
            "Charlotte",
            "Alice",
            "Matilda",
            "Will",
            "Jessica",
            "Eric",
            "Chris",
            "Brian",
            "Daniel",
            "Lily",
            "Bill"
          ],
          "examples": [
            "Bill"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "An elderly man with a white beard and headphones records audio with a microphone. He appears engaged and expressive, suggesting a podcast or voiceover."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 41 to 721.",
          "required": false,
          "default": 145,
          "minimum": 41,
          "maximum": 721
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the video to generate. Must be either 480p or 720p.",
          "required": false,
          "default": "480p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": 42
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "The acceleration level to use for generation.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular",
            "high"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/infinitalk/single-text",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/infinitalk/single-text",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/infinitalk/single-text queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/infinitalk/single-text",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/tiger/no2x6NmiDH44hhb5uCRpF_7a1a914245a54424a4f70019bb757ea3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/infinitalk/single-text",
            "documentationUrl": "https://fal.ai/models/fal-ai/infinitalk/single-text/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "InfinitalkSingleTextInput": {
              "x-fal-order-properties": [
                "image_url",
                "text_input",
                "voice",
                "prompt",
                "num_frames",
                "resolution",
                "seed",
                "acceleration"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "An elderly man with a white beard and headphones records audio with a microphone. He appears engaged and expressive, suggesting a podcast or voiceover."
                  ],
                  "description": "The text prompt to guide video generation.",
                  "type": "string",
                  "title": "Prompt"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "description": "Resolution of the video to generate. Must be either 480p or 720p.",
                  "type": "string",
                  "title": "Resolution",
                  "default": "480p"
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular",
                    "high"
                  ],
                  "description": "The acceleration level to use for generation.",
                  "type": "string",
                  "title": "Acceleration",
                  "default": "regular"
                },
                "text_input": {
                  "examples": [
                    "Spend more time with people who make you feel alive, and less with things that drain your soul."
                  ],
                  "description": "The text input to guide video generation.",
                  "type": "string",
                  "title": "Text Input"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/panda/HuM21CXMf0q7OO2zbvwhV_c4533aada79a495b90e50e32dc9b83a8.png"
                  ],
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
                  "type": "string",
                  "title": "Image URL"
                },
                "voice": {
                  "enum": [
                    "Aria",
                    "Roger",
                    "Sarah",
                    "Laura",
                    "Charlie",
                    "George",
                    "Callum",
                    "River",
                    "Liam",
                    "Charlotte",
                    "Alice",
                    "Matilda",
                    "Will",
                    "Jessica",
                    "Eric",
                    "Chris",
                    "Brian",
                    "Daniel",
                    "Lily",
                    "Bill"
                  ],
                  "description": "The voice to use for speech generation",
                  "type": "string",
                  "title": "Voice",
                  "examples": [
                    "Bill"
                  ]
                },
                "seed": {
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "type": "integer",
                  "title": "Seed",
                  "default": 42
                },
                "num_frames": {
                  "minimum": 41,
                  "maximum": 721,
                  "type": "integer",
                  "description": "Number of frames to generate. Must be between 41 to 721.",
                  "title": "Number of Frames",
                  "default": 145
                }
              },
              "title": "InfiniTalkSingleTextRequest",
              "required": [
                "image_url",
                "text_input",
                "voice",
                "prompt"
              ]
            },
            "InfinitalkSingleTextOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "description": "The seed used for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "video": {
                  "examples": [
                    {
                      "file_size": 797478,
                      "file_name": "6c9dd31e1d9a4482877747a52a661a0a.mp4",
                      "content_type": "application/octet-stream",
                      "url": "https://v3.fal.media/files/elephant/-huMN0zTaXmBr2CqzCMps_6c9dd31e1d9a4482877747a52a661a0a.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "AvatarSingleTextResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes.",
                  "title": "File Size",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file.",
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/infinitalk/single-text/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/infinitalk/single-text/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/infinitalk/single-text": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/InfinitalkSingleTextInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/infinitalk/single-text/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/InfinitalkSingleTextOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/lipsync/audio-to-video",
      "title": "fal-ai/kling-video/lipsync/audio-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/lipsync/audio-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/lipsync/audio-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/lipsync/audio-to-video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to generate the lip sync for. Supports .mp4/.mov, ≤100MB, 2–10s, 720p/1080p only, width/height 720–1920px. If validation fails, an error is returned.",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/koala/8teUPbRRMtAUTORDvqy0l.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "The URL of the audio to generate the lip sync for.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/kling/kling-audio.mp3"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/lipsync/audio-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/lipsync/audio-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/lipsync/audio-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/lipsync/audio-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/lipsync/audio-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/lipsync/audio-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoLipsyncAudioToVideoInput": {
              "title": "LipsyncA2VRequest",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://fal.media/files/koala/8teUPbRRMtAUTORDvqy0l.mp4"
                  ],
                  "description": "The URL of the video to generate the lip sync for. Supports .mp4/.mov, ≤100MB, 2–10s, 720p/1080p only, width/height 720–1920px. If validation fails, an error is returned.",
                  "type": "string",
                  "title": "Video Url"
                },
                "audio_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/kling-audio.mp3"
                  ],
                  "description": "The URL of the audio to generate the lip sync for.",
                  "type": "string",
                  "title": "Audio Url"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "audio_url"
              ],
              "required": [
                "video_url",
                "audio_url"
              ]
            },
            "KlingVideoLipsyncAudioToVideoOutput": {
              "title": "LipsyncA2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/lipsync/audio-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/lipsync/audio-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/lipsync/audio-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoLipsyncAudioToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/lipsync/audio-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoLipsyncAudioToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/lipsync/text-to-video",
      "title": "fal-ai/kling-video/lipsync/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/lipsync/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/lipsync/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/lipsync/text-to-video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to generate the lip sync for. Supports .mp4/.mov, ≤100MB, 2–10s, 720p/1080p only, width/height 720–1920px. If validation fails, an error is returned.",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/koala/8teUPbRRMtAUTORDvqy0l.mp4"
          ]
        },
        {
          "name": "text",
          "type": "string",
          "description": "Text content for lip-sync video generation. Max 120 characters.",
          "required": true,
          "default": "",
          "examples": [
            "Mental health is as important as physical health, shaping our emotions, thoughts, and daily interactions."
          ]
        },
        {
          "name": "voice_id",
          "type": "string",
          "description": "Voice ID to use for speech synthesis",
          "required": true,
          "default": "",
          "enum": [
            "genshin_vindi2",
            "zhinen_xuesheng",
            "AOT",
            "ai_shatang",
            "genshin_klee2",
            "genshin_kirara",
            "ai_kaiya",
            "oversea_male1",
            "ai_chenjiahao_712",
            "girlfriend_4_speech02",
            "chat1_female_new-3",
            "chat_0407_5-1",
            "cartoon-boy-07",
            "uk_boy1",
            "cartoon-girl-01",
            "PeppaPig_platform",
            "ai_huangzhong_712",
            "ai_huangyaoshi_712",
            "ai_laoguowang_712",
            "chengshu_jiejie",
            "you_pingjing",
            "calm_story1",
            "uk_man2",
            "laopopo_speech02",
            "heainainai_speech02",
            "reader_en_m-v1",
            "commercial_lady_en_f-v1",
            "tiyuxi_xuedi",
            "tiexin_nanyou",
            "girlfriend_1_speech02",
            "girlfriend_2_speech02",
            "zhuxi_speech02",
            "uk_oldman3",
            "dongbeilaotie_speech02",
            "chongqingxiaohuo_speech02",
            "chuanmeizi_speech02",
            "chaoshandashu_speech02",
            "ai_taiwan_man2_speech02",
            "xianzhanggui_speech02",
            "tianjinjiejie_speech02",
            "diyinnansang_DB_CN_M_04-v2",
            "yizhipiannan-v1",
            "guanxiaofang-v2",
            "tianmeixuemei-v1",
            "daopianyansang-v1",
            "mengwa-v1"
          ],
          "examples": [
            "genshin_klee2"
          ]
        },
        {
          "name": "voice_language",
          "type": "string",
          "description": "The voice language corresponding to the Voice ID",
          "required": false,
          "default": "en",
          "enum": [
            "zh",
            "en"
          ]
        },
        {
          "name": "voice_speed",
          "type": "number",
          "description": "Speech rate for Text to Video generation",
          "required": false,
          "default": 1,
          "minimum": 0.8,
          "maximum": 2
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/lipsync/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/lipsync/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/lipsync/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/lipsync/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/lipsync/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/lipsync/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoLipsyncTextToVideoInput": {
              "title": "LipsyncT2VRequest",
              "type": "object",
              "properties": {
                "text": {
                  "examples": [
                    "Mental health is as important as physical health, shaping our emotions, thoughts, and daily interactions."
                  ],
                  "description": "Text content for lip-sync video generation. Max 120 characters.",
                  "type": "string",
                  "title": "Text",
                  "maxLength": 120
                },
                "video_url": {
                  "examples": [
                    "https://fal.media/files/koala/8teUPbRRMtAUTORDvqy0l.mp4"
                  ],
                  "description": "The URL of the video to generate the lip sync for. Supports .mp4/.mov, ≤100MB, 2–10s, 720p/1080p only, width/height 720–1920px. If validation fails, an error is returned.",
                  "type": "string",
                  "title": "Video Url"
                },
                "voice_id": {
                  "enum": [
                    "genshin_vindi2",
                    "zhinen_xuesheng",
                    "AOT",
                    "ai_shatang",
                    "genshin_klee2",
                    "genshin_kirara",
                    "ai_kaiya",
                    "oversea_male1",
                    "ai_chenjiahao_712",
                    "girlfriend_4_speech02",
                    "chat1_female_new-3",
                    "chat_0407_5-1",
                    "cartoon-boy-07",
                    "uk_boy1",
                    "cartoon-girl-01",
                    "PeppaPig_platform",
                    "ai_huangzhong_712",
                    "ai_huangyaoshi_712",
                    "ai_laoguowang_712",
                    "chengshu_jiejie",
                    "you_pingjing",
                    "calm_story1",
                    "uk_man2",
                    "laopopo_speech02",
                    "heainainai_speech02",
                    "reader_en_m-v1",
                    "commercial_lady_en_f-v1",
                    "tiyuxi_xuedi",
                    "tiexin_nanyou",
                    "girlfriend_1_speech02",
                    "girlfriend_2_speech02",
                    "zhuxi_speech02",
                    "uk_oldman3",
                    "dongbeilaotie_speech02",
                    "chongqingxiaohuo_speech02",
                    "chuanmeizi_speech02",
                    "chaoshandashu_speech02",
                    "ai_taiwan_man2_speech02",
                    "xianzhanggui_speech02",
                    "tianjinjiejie_speech02",
                    "diyinnansang_DB_CN_M_04-v2",
                    "yizhipiannan-v1",
                    "guanxiaofang-v2",
                    "tianmeixuemei-v1",
                    "daopianyansang-v1",
                    "mengwa-v1"
                  ],
                  "description": "Voice ID to use for speech synthesis",
                  "type": "string",
                  "title": "Voice Id",
                  "examples": [
                    "genshin_klee2"
                  ]
                },
                "voice_speed": {
                  "minimum": 0.8,
                  "maximum": 2,
                  "type": "number",
                  "description": "Speech rate for Text to Video generation",
                  "title": "Voice Speed",
                  "default": 1
                },
                "voice_language": {
                  "enum": [
                    "zh",
                    "en"
                  ],
                  "description": "The voice language corresponding to the Voice ID",
                  "type": "string",
                  "title": "Voice Language",
                  "default": "en"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "text",
                "voice_id",
                "voice_language",
                "voice_speed"
              ],
              "required": [
                "video_url",
                "text",
                "voice_id"
              ]
            },
            "KlingVideoLipsyncTextToVideoOutput": {
              "title": "LipsyncOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_text_lipsync.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/lipsync/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/lipsync/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/lipsync/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoLipsyncTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/lipsync/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoLipsyncTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.5/pro/effects",
      "title": "fal-ai/kling-video/v1.5/pro/effects",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.5/pro/effects",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/effects/api",
      "inputs": [
        {
          "name": "input_image_urls",
          "type": "array",
          "description": "URL of images to be used for hug, kiss or heart_gesture video.",
          "required": false,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/juggernaut_examples/VHXMavzPyI27zi6JseyL4.png",
              "https://storage.googleapis.com/falserverless/juggernaut_examples/QEW5VrzccxGva7mPfEXjf.png"
            ]
          ]
        },
        {
          "name": "effect_scene",
          "type": "string",
          "description": "The effect scene to use for the video generation",
          "required": true,
          "default": "",
          "enum": [
            "hug",
            "kiss",
            "heart_gesture",
            "squish",
            "expansion",
            "fuzzyfuzzy",
            "bloombloom",
            "dizzydizzy",
            "jelly_press",
            "jelly_slice",
            "jelly_squish",
            "jelly_jiggle",
            "pixelpixel",
            "yearbook",
            "instant_film",
            "anime_figure",
            "rocketrocket"
          ],
          "examples": [
            "hug"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.5/pro/effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.5/pro/effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.5/pro/effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.5/pro/effects",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV15ProEffectsInput": {
              "title": "VideoEffectsRequest",
              "type": "object",
              "properties": {
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "effect_scene": {
                  "enum": [
                    "hug",
                    "kiss",
                    "heart_gesture",
                    "squish",
                    "expansion",
                    "fuzzyfuzzy",
                    "bloombloom",
                    "dizzydizzy",
                    "jelly_press",
                    "jelly_slice",
                    "jelly_squish",
                    "jelly_jiggle",
                    "pixelpixel",
                    "yearbook",
                    "instant_film",
                    "anime_figure",
                    "rocketrocket"
                  ],
                  "description": "The effect scene to use for the video generation",
                  "type": "string",
                  "title": "Effect Scene",
                  "examples": [
                    "hug"
                  ]
                },
                "input_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/juggernaut_examples/VHXMavzPyI27zi6JseyL4.png",
                      "https://storage.googleapis.com/falserverless/juggernaut_examples/QEW5VrzccxGva7mPfEXjf.png"
                    ]
                  ],
                  "description": "URL of images to be used for hug, kiss or heart_gesture video.",
                  "type": "array",
                  "title": "Input Image Urls",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "input_image_urls",
                "effect_scene",
                "duration"
              ],
              "required": [
                "effect_scene"
              ]
            },
            "KlingVideoV15ProEffectsOutput": {
              "title": "VideoEffectsOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_ex.mp4.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.5/pro/effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV15ProEffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV15ProEffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.5/pro/image-to-video",
      "title": "fal-ai/kling-video/v1.5/pro/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.5/pro/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Snowflakes fall as a car moves along the road."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image Url",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "tail_image_url",
          "type": "string",
          "description": "URL of the image to be used for the end of the video",
          "required": false,
          "default": ""
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.5/pro/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.5/pro/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.5/pro/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.5/pro/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV15ProImageToVideoInput": {
              "title": "ProImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Snowflakes fall as a car moves along the road."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string"
                },
                "tail_image_url": {
                  "description": "URL of the image to be used for the end of the video",
                  "type": "string",
                  "title": "Tail Image Url"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "aspect_ratio",
                "tail_image_url",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV15ProImageToVideoOutput": {
              "title": "I2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_i2v_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.5/pro/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV15ProImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV15ProImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.5/pro/text-to-video",
      "title": "fal-ai/kling-video/v1.5/pro/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.5/pro/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.5/pro/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.5/pro/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.5/pro/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.5/pro/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.5/pro/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV15ProTextToVideoInput": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "duration",
                "aspect_ratio",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt"
              ]
            },
            "KlingVideoV15ProTextToVideoOutput": {
              "title": "T2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v2.fal.media/files/fb33a862b94d4d7195e610e4cbc5d392_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.5/pro/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV15ProTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.5/pro/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV15ProTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.6/pro/effects",
      "title": "fal-ai/kling-video/v1.6/pro/effects",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.6/pro/effects",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/effects/api",
      "inputs": [
        {
          "name": "input_image_urls",
          "type": "array",
          "description": "URL of images to be used for hug, kiss or heart_gesture video.",
          "required": false,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/juggernaut_examples/VHXMavzPyI27zi6JseyL4.png",
              "https://storage.googleapis.com/falserverless/juggernaut_examples/QEW5VrzccxGva7mPfEXjf.png"
            ]
          ]
        },
        {
          "name": "effect_scene",
          "type": "string",
          "description": "The effect scene to use for the video generation",
          "required": true,
          "default": "",
          "enum": [
            "hug",
            "kiss",
            "heart_gesture",
            "squish",
            "expansion",
            "fuzzyfuzzy",
            "bloombloom",
            "dizzydizzy",
            "jelly_press",
            "jelly_slice",
            "jelly_squish",
            "jelly_jiggle",
            "pixelpixel",
            "yearbook",
            "instant_film",
            "anime_figure",
            "rocketrocket"
          ],
          "examples": [
            "hug"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.6/pro/effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.6/pro/effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.6/pro/effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.6/pro/effects",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV16ProEffectsInput": {
              "title": "VideoEffectsRequest",
              "type": "object",
              "properties": {
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "effect_scene": {
                  "enum": [
                    "hug",
                    "kiss",
                    "heart_gesture",
                    "squish",
                    "expansion",
                    "fuzzyfuzzy",
                    "bloombloom",
                    "dizzydizzy",
                    "jelly_press",
                    "jelly_slice",
                    "jelly_squish",
                    "jelly_jiggle",
                    "pixelpixel",
                    "yearbook",
                    "instant_film",
                    "anime_figure",
                    "rocketrocket"
                  ],
                  "description": "The effect scene to use for the video generation",
                  "type": "string",
                  "title": "Effect Scene",
                  "examples": [
                    "hug"
                  ]
                },
                "input_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/juggernaut_examples/VHXMavzPyI27zi6JseyL4.png",
                      "https://storage.googleapis.com/falserverless/juggernaut_examples/QEW5VrzccxGva7mPfEXjf.png"
                    ]
                  ],
                  "description": "URL of images to be used for hug, kiss or heart_gesture video.",
                  "type": "array",
                  "title": "Input Image Urls",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "input_image_urls",
                "effect_scene",
                "duration"
              ],
              "required": [
                "effect_scene"
              ]
            },
            "KlingVideoV16ProEffectsOutput": {
              "title": "VideoEffectsOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_ex.mp4.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.6/pro/effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV16ProEffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV16ProEffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.6/pro/elements",
      "title": "fal-ai/kling-video/v1.6/pro/elements",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.6/pro/elements",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/kling-1-6-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/elements",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/elements/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A cute girl and a baby cow sleeping together on a bed"
          ]
        },
        {
          "name": "input_image_urls",
          "type": "array",
          "description": "List of image URLs to use for video generation. Supports up to 4 images.",
          "required": true,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/web-examples/kling-elements/first_image.jpeg",
              "https://storage.googleapis.com/falserverless/web-examples/kling-elements/second_image.png"
            ]
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.6/pro/elements",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.6/pro/elements",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.6/pro/elements queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.6/pro/elements",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/kling-1-6-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/elements",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/elements/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV16ProElementsInput": {
              "title": "MultiImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A cute girl and a baby cow sleeping together on a bed"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "input_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/web-examples/kling-elements/first_image.jpeg",
                      "https://storage.googleapis.com/falserverless/web-examples/kling-elements/second_image.png"
                    ]
                  ],
                  "description": "List of image URLs to use for video generation. Supports up to 4 images.",
                  "type": "array",
                  "title": "Input Image Urls",
                  "items": {
                    "type": "string"
                  }
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "input_image_urls",
                "duration",
                "aspect_ratio",
                "negative_prompt"
              ],
              "required": [
                "prompt",
                "input_image_urls"
              ]
            },
            "KlingVideoV16ProElementsOutput": {
              "title": "ElementsOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 3910577,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/penguin/twy6u1yv09NvqsX0mMFM2_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.6/pro/elements/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/elements/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/elements": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV16ProElementsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/elements/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV16ProElementsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.6/pro/image-to-video",
      "title": "fal-ai/kling-video/v1.6/pro/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.6/pro/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/kling-1-6-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Snowflakes fall as a car moves along the road."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image Url",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "tail_image_url",
          "type": "string",
          "description": "URL of the image to be used for the end of the video",
          "required": false,
          "default": ""
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.6/pro/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.6/pro/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.6/pro/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.6/pro/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/kling-1-6-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV16ProImageToVideoInput": {
              "title": "ProImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Snowflakes fall as a car moves along the road."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string"
                },
                "tail_image_url": {
                  "description": "URL of the image to be used for the end of the video",
                  "type": "string",
                  "title": "Tail Image Url"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "aspect_ratio",
                "tail_image_url",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV16ProImageToVideoOutput": {
              "title": "I2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_i2v_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.6/pro/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV16ProImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV16ProImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.6/pro/text-to-video",
      "title": "fal-ai/kling-video/v1.6/pro/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.6/pro/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.6/pro/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.6/pro/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.6/pro/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.6/pro/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/pro/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV16ProTextToVideoInput": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "duration",
                "aspect_ratio",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt"
              ]
            },
            "KlingVideoV16ProTextToVideoOutput": {
              "title": "T2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v2.fal.media/files/fb33a862b94d4d7195e610e4cbc5d392_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.6/pro/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV16ProTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/pro/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV16ProTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.6/standard/effects",
      "title": "fal-ai/kling-video/v1.6/standard/effects",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.6/standard/effects",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/effects/api",
      "inputs": [
        {
          "name": "input_image_urls",
          "type": "array",
          "description": "URL of images to be used for hug, kiss or heart_gesture video.",
          "required": false,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/juggernaut_examples/VHXMavzPyI27zi6JseyL4.png",
              "https://storage.googleapis.com/falserverless/juggernaut_examples/QEW5VrzccxGva7mPfEXjf.png"
            ]
          ]
        },
        {
          "name": "effect_scene",
          "type": "string",
          "description": "The effect scene to use for the video generation",
          "required": true,
          "default": "",
          "enum": [
            "hug",
            "kiss",
            "heart_gesture",
            "squish",
            "expansion",
            "fuzzyfuzzy",
            "bloombloom",
            "dizzydizzy",
            "jelly_press",
            "jelly_slice",
            "jelly_squish",
            "jelly_jiggle",
            "pixelpixel",
            "yearbook",
            "instant_film",
            "anime_figure",
            "rocketrocket"
          ],
          "examples": [
            "hug"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.6/standard/effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.6/standard/effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.6/standard/effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.6/standard/effects",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV16StandardEffectsInput": {
              "title": "VideoEffectsRequest",
              "type": "object",
              "properties": {
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "effect_scene": {
                  "enum": [
                    "hug",
                    "kiss",
                    "heart_gesture",
                    "squish",
                    "expansion",
                    "fuzzyfuzzy",
                    "bloombloom",
                    "dizzydizzy",
                    "jelly_press",
                    "jelly_slice",
                    "jelly_squish",
                    "jelly_jiggle",
                    "pixelpixel",
                    "yearbook",
                    "instant_film",
                    "anime_figure",
                    "rocketrocket"
                  ],
                  "description": "The effect scene to use for the video generation",
                  "type": "string",
                  "title": "Effect Scene",
                  "examples": [
                    "hug"
                  ]
                },
                "input_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/juggernaut_examples/VHXMavzPyI27zi6JseyL4.png",
                      "https://storage.googleapis.com/falserverless/juggernaut_examples/QEW5VrzccxGva7mPfEXjf.png"
                    ]
                  ],
                  "description": "URL of images to be used for hug, kiss or heart_gesture video.",
                  "type": "array",
                  "title": "Input Image Urls",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "input_image_urls",
                "effect_scene",
                "duration"
              ],
              "required": [
                "effect_scene"
              ]
            },
            "KlingVideoV16StandardEffectsOutput": {
              "title": "VideoEffectsOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_ex.mp4.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.6/standard/effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV16StandardEffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV16StandardEffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.6/standard/elements",
      "title": "fal-ai/kling-video/v1.6/standard/elements",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.6/standard/elements",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/kling-1-6-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/elements",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/elements/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A cute girl and a baby cow sleeping together on a bed"
          ]
        },
        {
          "name": "input_image_urls",
          "type": "array",
          "description": "List of image URLs to use for video generation. Supports up to 4 images.",
          "required": true,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/web-examples/kling-elements/first_image.jpeg",
              "https://storage.googleapis.com/falserverless/web-examples/kling-elements/second_image.png"
            ]
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.6/standard/elements",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.6/standard/elements",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.6/standard/elements queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.6/standard/elements",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/kling-1-6-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/elements",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/elements/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV16StandardElementsInput": {
              "title": "MultiImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A cute girl and a baby cow sleeping together on a bed"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "input_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/web-examples/kling-elements/first_image.jpeg",
                      "https://storage.googleapis.com/falserverless/web-examples/kling-elements/second_image.png"
                    ]
                  ],
                  "description": "List of image URLs to use for video generation. Supports up to 4 images.",
                  "type": "array",
                  "title": "Input Image Urls",
                  "items": {
                    "type": "string"
                  }
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "input_image_urls",
                "duration",
                "aspect_ratio",
                "negative_prompt"
              ],
              "required": [
                "prompt",
                "input_image_urls"
              ]
            },
            "KlingVideoV16StandardElementsOutput": {
              "title": "ElementsOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 3910577,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/penguin/twy6u1yv09NvqsX0mMFM2_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.6/standard/elements/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/elements/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/elements": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV16StandardElementsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/elements/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV16StandardElementsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.6/standard/image-to-video",
      "title": "fal-ai/kling-video/v1.6/standard/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.6/standard/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Snowflakes fall as a car moves forward along the road."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image Url",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.6/standard/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.6/standard/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.6/standard/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.6/standard/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV16StandardImageToVideoInput": {
              "title": "ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Snowflakes fall as a car moves forward along the road."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV16StandardImageToVideoOutput": {
              "title": "I2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_i2v_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.6/standard/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV16StandardImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV16StandardImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1.6/standard/text-to-video",
      "title": "fal-ai/kling-video/v1.6/standard/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1.6/standard/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1.6/standard/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1.6/standard/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1.6/standard/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1.6/standard/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/28-vTrv3W2BT-u8_cy7mt.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1.6/standard/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV16StandardTextToVideoInput": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "duration",
                "aspect_ratio",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt"
              ]
            },
            "KlingVideoV16StandardTextToVideoOutput": {
              "title": "T2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v2.fal.media/files/fb33a862b94d4d7195e610e4cbc5d392_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1.6/standard/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV16StandardTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1.6/standard/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV16StandardTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1/pro/image-to-video",
      "title": "fal-ai/kling-video/v1/pro/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1/pro/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/pro/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/pro/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt for the video",
          "required": true,
          "default": "",
          "examples": [
            "Snowflakes fall as a car moves forward along the road."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to be used for the video",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        },
        {
          "name": "tail_image_url",
          "type": "string",
          "description": "URL of the image to be used for the end of the video",
          "required": false,
          "default": ""
        },
        {
          "name": "static_mask_url",
          "type": "string",
          "description": "URL of the image for Static Brush Application Area (Mask image created by users using the motion brush)",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/kling/new_static_mask.png"
          ]
        },
        {
          "name": "dynamic_masks",
          "type": "array",
          "description": "List of dynamic masks",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1/pro/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1/pro/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1/pro/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1/pro/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/pro/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/pro/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV1ProImageToVideoInput": {
              "title": "V1ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Snowflakes fall as a car moves forward along the road."
                  ],
                  "description": "The prompt for the video",
                  "type": "string",
                  "title": "Prompt",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "tail_image_url": {
                  "description": "URL of the image to be used for the end of the video",
                  "type": "string",
                  "title": "Tail Image Url"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
                  ],
                  "description": "URL of the image to be used for the video",
                  "type": "string",
                  "title": "Image Url"
                },
                "static_mask_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/new_static_mask.png"
                  ],
                  "description": "URL of the image for Static Brush Application Area (Mask image created by users using the motion brush)",
                  "type": "string",
                  "title": "Static Mask Url"
                },
                "dynamic_masks": {
                  "description": "List of dynamic masks",
                  "type": "array",
                  "title": "Dynamic Masks",
                  "items": {
                    "$ref": "#/components/schemas/DynamicMask"
                  }
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "negative_prompt",
                "cfg_scale",
                "tail_image_url",
                "static_mask_url",
                "dynamic_masks"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV1ProImageToVideoOutput": {
              "title": "I2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_i2v_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "DynamicMask": {
              "title": "DynamicMask",
              "type": "object",
              "properties": {
                "trajectories": {
                  "examples": [
                    [
                      {
                        "y": 219,
                        "x": 279
                      },
                      {
                        "y": 65,
                        "x": 417
                      }
                    ]
                  ],
                  "description": "List of trajectories",
                  "type": "array",
                  "title": "Trajectories",
                  "items": {
                    "$ref": "#/components/schemas/Trajectory"
                  }
                },
                "mask_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/new_dynamic_mask.png"
                  ],
                  "description": "URL of the image for Dynamic Brush Application Area (Mask image created by users using the motion brush)",
                  "type": "string",
                  "title": "Mask Url"
                }
              },
              "x-fal-order-properties": [
                "mask_url",
                "trajectories"
              ],
              "required": [
                "mask_url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            },
            "Trajectory": {
              "title": "Trajectory",
              "type": "object",
              "properties": {
                "y": {
                  "examples": [
                    219
                  ],
                  "description": "Y coordinate of the motion trajectory",
                  "type": "integer",
                  "title": "Y"
                },
                "x": {
                  "examples": [
                    279
                  ],
                  "description": "X coordinate of the motion trajectory",
                  "type": "integer",
                  "title": "X"
                }
              },
              "x-fal-order-properties": [
                "x",
                "y"
              ],
              "required": [
                "x",
                "y"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1/pro/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/pro/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/pro/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV1ProImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/pro/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV1ProImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1/pro/text-to-video",
      "title": "fal-ai/kling-video/v1/pro/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1/pro/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/pro/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/pro/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1/pro/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1/pro/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1/pro/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1/pro/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/pro/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/pro/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV1ProTextToVideoInput": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "duration",
                "aspect_ratio",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt"
              ]
            },
            "KlingVideoV1ProTextToVideoOutput": {
              "title": "T2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v2.fal.media/files/fb33a862b94d4d7195e610e4cbc5d392_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1/pro/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/pro/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/pro/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV1ProTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/pro/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV1ProTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1/standard/effects",
      "title": "fal-ai/kling-video/v1/standard/effects",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1/standard/effects",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/effects/api",
      "inputs": [
        {
          "name": "input_image_urls",
          "type": "array",
          "description": "URL of images to be used for hug, kiss or heart_gesture video.",
          "required": false,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/juggernaut_examples/VHXMavzPyI27zi6JseyL4.png",
              "https://storage.googleapis.com/falserverless/juggernaut_examples/QEW5VrzccxGva7mPfEXjf.png"
            ]
          ]
        },
        {
          "name": "effect_scene",
          "type": "string",
          "description": "The effect scene to use for the video generation",
          "required": true,
          "default": "",
          "enum": [
            "hug",
            "kiss",
            "heart_gesture",
            "squish",
            "expansion",
            "fuzzyfuzzy",
            "bloombloom",
            "dizzydizzy",
            "jelly_press",
            "jelly_slice",
            "jelly_squish",
            "jelly_jiggle",
            "pixelpixel",
            "yearbook",
            "instant_film",
            "anime_figure",
            "rocketrocket"
          ],
          "examples": [
            "hug"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1/standard/effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1/standard/effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1/standard/effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1/standard/effects",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV1StandardEffectsInput": {
              "title": "VideoEffectsRequest",
              "type": "object",
              "properties": {
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "effect_scene": {
                  "enum": [
                    "hug",
                    "kiss",
                    "heart_gesture",
                    "squish",
                    "expansion",
                    "fuzzyfuzzy",
                    "bloombloom",
                    "dizzydizzy",
                    "jelly_press",
                    "jelly_slice",
                    "jelly_squish",
                    "jelly_jiggle",
                    "pixelpixel",
                    "yearbook",
                    "instant_film",
                    "anime_figure",
                    "rocketrocket"
                  ],
                  "description": "The effect scene to use for the video generation",
                  "type": "string",
                  "title": "Effect Scene",
                  "examples": [
                    "hug"
                  ]
                },
                "input_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/juggernaut_examples/VHXMavzPyI27zi6JseyL4.png",
                      "https://storage.googleapis.com/falserverless/juggernaut_examples/QEW5VrzccxGva7mPfEXjf.png"
                    ]
                  ],
                  "description": "URL of images to be used for hug, kiss or heart_gesture video.",
                  "type": "array",
                  "title": "Input Image Urls",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "input_image_urls",
                "effect_scene",
                "duration"
              ],
              "required": [
                "effect_scene"
              ]
            },
            "KlingVideoV1StandardEffectsOutput": {
              "title": "VideoEffectsOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_ex.mp4.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1/standard/effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV1StandardEffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV1StandardEffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1/standard/image-to-video",
      "title": "fal-ai/kling-video/v1/standard/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1/standard/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt for the video",
          "required": true,
          "default": "",
          "examples": [
            "Snowflakes fall as a car moves forward along the road."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to be used for the video",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        },
        {
          "name": "tail_image_url",
          "type": "string",
          "description": "URL of the image to be used for the end of the video",
          "required": false,
          "default": ""
        },
        {
          "name": "static_mask_url",
          "type": "string",
          "description": "URL of the image for Static Brush Application Area (Mask image created by users using the motion brush)",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/kling/new_static_mask.png"
          ]
        },
        {
          "name": "dynamic_masks",
          "type": "array",
          "description": "List of dynamic masks",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1/standard/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1/standard/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1/standard/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1/standard/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV1StandardImageToVideoInput": {
              "title": "V1ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Snowflakes fall as a car moves forward along the road."
                  ],
                  "description": "The prompt for the video",
                  "type": "string",
                  "title": "Prompt",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "tail_image_url": {
                  "description": "URL of the image to be used for the end of the video",
                  "type": "string",
                  "title": "Tail Image Url"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/kling_input.jpeg"
                  ],
                  "description": "URL of the image to be used for the video",
                  "type": "string",
                  "title": "Image Url"
                },
                "static_mask_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/new_static_mask.png"
                  ],
                  "description": "URL of the image for Static Brush Application Area (Mask image created by users using the motion brush)",
                  "type": "string",
                  "title": "Static Mask Url"
                },
                "dynamic_masks": {
                  "description": "List of dynamic masks",
                  "type": "array",
                  "title": "Dynamic Masks",
                  "items": {
                    "$ref": "#/components/schemas/DynamicMask"
                  }
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "negative_prompt",
                "cfg_scale",
                "tail_image_url",
                "static_mask_url",
                "dynamic_masks"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV1StandardImageToVideoOutput": {
              "title": "KlingV1I2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/kling/kling_i2v_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "DynamicMask": {
              "title": "DynamicMask",
              "type": "object",
              "properties": {
                "trajectories": {
                  "examples": [
                    [
                      {
                        "y": 219,
                        "x": 279
                      },
                      {
                        "y": 65,
                        "x": 417
                      }
                    ]
                  ],
                  "description": "List of trajectories",
                  "type": "array",
                  "title": "Trajectories",
                  "items": {
                    "$ref": "#/components/schemas/Trajectory"
                  }
                },
                "mask_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/kling/new_dynamic_mask.png"
                  ],
                  "description": "URL of the image for Dynamic Brush Application Area (Mask image created by users using the motion brush)",
                  "type": "string",
                  "title": "Mask Url"
                }
              },
              "x-fal-order-properties": [
                "mask_url",
                "trajectories"
              ],
              "required": [
                "mask_url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            },
            "Trajectory": {
              "title": "Trajectory",
              "type": "object",
              "properties": {
                "y": {
                  "examples": [
                    219
                  ],
                  "description": "Y coordinate of the motion trajectory",
                  "type": "integer",
                  "title": "Y"
                },
                "x": {
                  "examples": [
                    279
                  ],
                  "description": "X coordinate of the motion trajectory",
                  "type": "integer",
                  "title": "X"
                }
              },
              "x-fal-order-properties": [
                "x",
                "y"
              ],
              "required": [
                "x",
                "y"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1/standard/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV1StandardImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV1StandardImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v1/standard/text-to-video",
      "title": "fal-ai/kling-video/v1/standard/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v1/standard/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        },
        {
          "name": "camera_control",
          "type": "string",
          "description": "Camera control parameters",
          "required": false,
          "default": "",
          "enum": [
            "down_back",
            "forward_up",
            "right_turn_forward",
            "left_turn_forward"
          ]
        },
        {
          "name": "advanced_camera_control",
          "type": "string",
          "description": "Advanced Camera control parameters",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v1/standard/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v1/standard/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v1/standard/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v1/standard/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/GoSnDOnX0Tea08N7iI7oM.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v1/standard/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV1StandardTextToVideoInput": {
              "title": "V1TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "advanced_camera_control": {
                  "description": "Advanced Camera control parameters",
                  "title": "Advanced Camera Control",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CameraControl"
                    }
                  ]
                },
                "camera_control": {
                  "enum": [
                    "down_back",
                    "forward_up",
                    "right_turn_forward",
                    "left_turn_forward"
                  ],
                  "description": "Camera control parameters",
                  "type": "string",
                  "title": "Camera Control"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "duration",
                "aspect_ratio",
                "negative_prompt",
                "cfg_scale",
                "camera_control",
                "advanced_camera_control"
              ],
              "required": [
                "prompt"
              ]
            },
            "KlingVideoV1StandardTextToVideoOutput": {
              "title": "T2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v2.fal.media/files/fb33a862b94d4d7195e610e4cbc5d392_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "CameraControl": {
              "title": "CameraControl",
              "type": "object",
              "properties": {
                "movement_type": {
                  "enum": [
                    "horizontal",
                    "vertical",
                    "pan",
                    "tilt",
                    "roll",
                    "zoom"
                  ],
                  "description": "The type of camera movement",
                  "type": "string",
                  "title": "Movement Type",
                  "examples": [
                    "horizontal"
                  ]
                },
                "movement_value": {
                  "examples": [
                    10
                  ],
                  "maximum": 10,
                  "type": "integer",
                  "description": "The value of the camera movement",
                  "title": "Movement Value",
                  "minimum": -10
                }
              },
              "x-fal-order-properties": [
                "movement_type",
                "movement_value"
              ],
              "required": [
                "movement_type",
                "movement_value"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v1/standard/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV1StandardTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v1/standard/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV1StandardTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v2.1/master/image-to-video",
      "title": "fal-ai/kling-video/v2.1/master/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v2.1/master/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-5.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/master/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/master/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Sunlight dapples through budding branches, illuminating a vibrant tapestry of greens and browns as a pair of robins meticulously weave twigs and mud into a cradle of life, their tiny forms a whirlwind of activity against a backdrop of blossoming spring.  The scene unfolds with a gentle, observational pace, allowing the viewer to fully appreciate the intricate details of nest construction, the soft textures of downy feathers contrasted against the rough bark of the branches, the delicate balance of strength and fragility in their creation."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to be used for the video",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/9Nrm22YyLojSTPJbZYNhh_image.webp"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v2.1/master/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v2.1/master/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v2.1/master/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v2.1/master/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-5.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/master/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/master/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV21MasterImageToVideoInput": {
              "title": "ImageToVideoV21MasterRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Sunlight dapples through budding branches, illuminating a vibrant tapestry of greens and browns as a pair of robins meticulously weave twigs and mud into a cradle of life, their tiny forms a whirlwind of activity against a backdrop of blossoming spring.  The scene unfolds with a gentle, observational pace, allowing the viewer to fully appreciate the intricate details of nest construction, the soft textures of downy feathers contrasted against the rough bark of the branches, the delicate balance of strength and fragility in their creation."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/9Nrm22YyLojSTPJbZYNhh_image.webp"
                  ],
                  "description": "URL of the image to be used for the video",
                  "type": "string",
                  "title": "Image Url"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV21MasterImageToVideoOutput": {
              "title": "ImageToVideoV21MasterOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/rabbit/YuUWKFq508zzWIiQ0i2vt_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v2.1/master/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/master/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/master/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV21MasterImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/master/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV21MasterImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v2.1/master/text-to-video",
      "title": "fal-ai/kling-video/v2.1/master/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v2.1/master/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-5.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/master/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/master/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Warm, earthy tones bathe the scene as the potter's hands, rough and calloused, coax a shapeless lump of clay into a vessel of elegant curves, the slow, deliberate movements highlighted by the subtle shifting light; the clay’s cool, damp texture contrasts sharply with the warmth of the potter's touch, creating a captivating interplay between material and maker."
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v2.1/master/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v2.1/master/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v2.1/master/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v2.1/master/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-5.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/master/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/master/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV21MasterTextToVideoInput": {
              "title": "TextToVideoV21MasterRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Warm, earthy tones bathe the scene as the potter's hands, rough and calloused, coax a shapeless lump of clay into a vessel of elegant curves, the slow, deliberate movements highlighted by the subtle shifting light; the clay’s cool, damp texture contrasts sharply with the warmth of the potter's touch, creating a captivating interplay between material and maker."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "duration",
                "aspect_ratio",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt"
              ]
            },
            "KlingVideoV21MasterTextToVideoOutput": {
              "title": "TextToVideoV21MasterOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/lion/0wTlhR7GCXFI-_BZXGy99_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v2.1/master/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/master/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/master/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV21MasterTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/master/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV21MasterTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v2.1/pro/image-to-video",
      "title": "fal-ai/kling-video/v2.1/pro/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v2.1/pro/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/pro/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/pro/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Warm, incandescent streetlights paint the rain-slicked cobblestones in pools of amber light as a couple walks hand-in-hand, their silhouettes stark against the blurry backdrop of a city shrouded in a gentle downpour; the camera lingers on the subtle textures of their rain-soaked coats and the glistening reflections dancing on the wet pavement, creating a sense of intimate vulnerability and shared quietude."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to be used for the video",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/lion/_I_io6Gtk83c72d-afXf8_image.webp"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        },
        {
          "name": "tail_image_url",
          "type": "string",
          "description": "URL of the image to be used for the end of the video",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v2.1/pro/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v2.1/pro/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v2.1/pro/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v2.1/pro/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/pro/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/pro/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV21ProImageToVideoInput": {
              "title": "ImageToVideoV21ProRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Warm, incandescent streetlights paint the rain-slicked cobblestones in pools of amber light as a couple walks hand-in-hand, their silhouettes stark against the blurry backdrop of a city shrouded in a gentle downpour; the camera lingers on the subtle textures of their rain-soaked coats and the glistening reflections dancing on the wet pavement, creating a sense of intimate vulnerability and shared quietude."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "tail_image_url": {
                  "description": "URL of the image to be used for the end of the video",
                  "type": "string",
                  "title": "Tail Image Url"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/lion/_I_io6Gtk83c72d-afXf8_image.webp"
                  ],
                  "description": "URL of the image to be used for the video",
                  "type": "string",
                  "title": "Image Url"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "negative_prompt",
                "cfg_scale",
                "tail_image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV21ProImageToVideoOutput": {
              "title": "ImageToVideoV21ProOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/rabbit/Y5I8-7u3e7ogVSvPin1TS_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v2.1/pro/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/pro/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/pro/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV21ProImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/pro/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV21ProImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v2.1/standard/image-to-video",
      "title": "fal-ai/kling-video/v2.1/standard/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v2.1/standard/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://v3.fal.media/files/elephant/5Yt8D9tl-IaGQ-6czSXL1_HHQ_VCby6xP_DFLkQQLpV_3c8622214c4c4ac29b4b64e157746507.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/standard/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/standard/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "As the sun dips below the horizon, painting the sky in fiery hues of orange and purple, powerful waves relentlessly crash against jagged, dark rocks, their white foam a stark contrast to the deepening twilight; the textured surface of the rocks, wet and glistening, reflects the vibrant colors, creating a mesmerizing spectacle of nature's raw power and breathtaking beauty"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to be used for the video",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/tiger/2r5c2GU4HI7dvCrnzRiKK_output.png"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v2.1/standard/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v2.1/standard/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v2.1/standard/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v2.1/standard/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://v3.fal.media/files/elephant/5Yt8D9tl-IaGQ-6czSXL1_HHQ_VCby6xP_DFLkQQLpV_3c8622214c4c4ac29b4b64e157746507.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/standard/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2.1/standard/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV21StandardImageToVideoInput": {
              "title": "ImageToVideoV21StandardRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "As the sun dips below the horizon, painting the sky in fiery hues of orange and purple, powerful waves relentlessly crash against jagged, dark rocks, their white foam a stark contrast to the deepening twilight; the textured surface of the rocks, wet and glistening, reflects the vibrant colors, creating a mesmerizing spectacle of nature's raw power and breathtaking beauty"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/tiger/2r5c2GU4HI7dvCrnzRiKK_output.png"
                  ],
                  "description": "URL of the image to be used for the video",
                  "type": "string",
                  "title": "Image Url"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV21StandardImageToVideoOutput": {
              "title": "ImageToVideoV21StandardOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/koala/17e3xh08J4_PkHS_0cbwF_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v2.1/standard/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/standard/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/standard/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV21StandardImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2.1/standard/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV21StandardImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v2/master/image-to-video",
      "title": "fal-ai/kling-video/v2/master/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v2/master/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2/master/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2/master/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "slow-motion sequence captures the catastrophic implosion of a skyscraper, dust and debris billowing outwards in a chaotic ballet of destruction, while a haunting, orchestral score underscores the sheer power and finality of the event."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to be used for the video",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/elephant/rkH-9qoXtXu3rAYTsx9V5_image.webp"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v2/master/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v2/master/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v2/master/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v2/master/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2/master/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2/master/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV2MasterImageToVideoInput": {
              "title": "ImageToVideoV2MasterRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "slow-motion sequence captures the catastrophic implosion of a skyscraper, dust and debris billowing outwards in a chaotic ballet of destruction, while a haunting, orchestral score underscores the sheer power and finality of the event."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/elephant/rkH-9qoXtXu3rAYTsx9V5_image.webp"
                  ],
                  "description": "URL of the image to be used for the video",
                  "type": "string",
                  "title": "Image Url"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "KlingVideoV2MasterImageToVideoOutput": {
              "title": "ImageToVideoV2MasterOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/koala/VvGXP5xEhTR9ovGjpulJ7_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v2/master/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2/master/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2/master/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV2MasterImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2/master/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV2MasterImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/kling-video/v2/master/text-to-video",
      "title": "fal-ai/kling-video/v2/master/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/kling-video/v2/master/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-5.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2/master/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2/master/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A slow-motion drone shot descending from above a maze of neon-lit Tokyo alleyways at night during heavy rainfall. The camera gradually focuses on a lone figure in a luminescent white raincoat standing perfectly still amid the bustling crowd, all carrying black umbrellas. As the camera continues its downward journey, we see the raindrops creating rippling patterns on puddles that reflect the kaleidoscope of colors from the surrounding signs, creating a mirror world beneath the city."
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "10"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video frame",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative Prompt",
          "required": false,
          "default": "blur, distort, and low quality"
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/kling-video/v2/master/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/kling-video/v2/master/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/kling-video/v2/master/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/kling-video/v2/master/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-5.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/kling-video/v2/master/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/kling-video/v2/master/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "KlingVideoV2MasterTextToVideoInput": {
              "title": "TextToVideoV2MasterRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A slow-motion drone shot descending from above a maze of neon-lit Tokyo alleyways at night during heavy rainfall. The camera gradually focuses on a lone figure in a luminescent white raincoat standing perfectly still amid the bustling crowd, all carrying black umbrellas. As the camera continues its downward journey, we see the raindrops creating rippling patterns on puddles that reflect the kaleidoscope of colors from the surrounding signs, creating a mirror world beneath the city."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2500
                },
                "duration": {
                  "enum": [
                    "5",
                    "10"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "description": "The aspect ratio of the generated video frame",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "maxLength": 2500,
                  "default": "blur, distort, and low quality"
                },
                "cfg_scale": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt.\n        ",
                  "title": "Cfg Scale",
                  "default": 0.5
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "duration",
                "aspect_ratio",
                "negative_prompt",
                "cfg_scale"
              ],
              "required": [
                "prompt"
              ]
            },
            "KlingVideoV2MasterTextToVideoOutput": {
              "title": "TextToVideoV2MasterOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/rabbit/5fu6OSZdvV825r2s_c0S8_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/kling-video/v2/master/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2/master/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2/master/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/KlingVideoV2MasterTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/kling-video/v2/master/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/KlingVideoV2MasterTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/latentsync",
      "title": "fal-ai/latentsync",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/latentsync",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/latentsync/latentsync-3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/latentsync",
      "documentationUrl": "https://fal.ai/models/fal-ai/latentsync/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to generate the lip sync for.",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/koala/8teUPbRRMtAUTORDvqy0l.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "The URL of the audio to generate the lip sync for.",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/lion/vyFWygmZsIZlUO4s0nr2n.wav"
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for the model inference",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 2
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation. If None, a random seed will be used.",
          "required": false,
          "default": null
        },
        {
          "name": "loop_mode",
          "type": "string",
          "description": "Video loop mode when audio is longer than video. Options: pingpong, loop",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with the lip sync."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/latentsync",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/latentsync",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/latentsync queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/latentsync",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/latentsync/latentsync-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/latentsync",
            "documentationUrl": "https://fal.ai/models/fal-ai/latentsync/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LatentsyncInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://fal.media/files/koala/8teUPbRRMtAUTORDvqy0l.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to generate the lip sync for."
                },
                "audio_url": {
                  "examples": [
                    "https://fal.media/files/lion/vyFWygmZsIZlUO4s0nr2n.wav"
                  ],
                  "title": "Audio Url",
                  "type": "string",
                  "description": "The URL of the audio to generate the lip sync for."
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for generation. If None, a random seed will be used."
                },
                "guidance_scale": {
                  "description": "Guidance scale for the model inference",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 2,
                  "title": "Guidance Scale",
                  "step": 0.1,
                  "default": 1
                },
                "loop_mode": {
                  "anyOf": [
                    {
                      "enum": [
                        "pingpong",
                        "loop"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Loop Mode",
                  "description": "Video loop mode when audio is longer than video. Options: pingpong, loop"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "audio_url",
                "guidance_scale",
                "seed",
                "loop_mode"
              ],
              "required": [
                "video_url",
                "audio_url"
              ]
            },
            "LatentsyncOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "video": {
                  "description": "The generated video with the lip sync.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/latentsync/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/latentsync/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/latentsync": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LatentsyncInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/latentsync/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LatentsyncOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/live-portrait",
      "title": "fal-ai/live-portrait",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/live-portrait",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/live-portrait/XKEmk3mAzGHUjK3qqH-UL.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/live-portrait",
      "documentationUrl": "https://fal.ai/models/fal-ai/live-portrait/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the video to drive the lip syncing.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/live-portrait/liveportrait-example.mp4"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to be animated",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/live-portrait/XKEmk3mAzGHUjK3qqH-UL.jpeg"
          ]
        },
        {
          "name": "blink",
          "type": "number",
          "description": "Amount to blink the eyes",
          "required": false,
          "default": 0,
          "minimum": -30,
          "maximum": 30
        },
        {
          "name": "eyebrow",
          "type": "number",
          "description": "Amount to raise or lower eyebrows",
          "required": false,
          "default": 0,
          "minimum": -30,
          "maximum": 30
        },
        {
          "name": "wink",
          "type": "number",
          "description": "Amount to wink",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 25
        },
        {
          "name": "pupil_x",
          "type": "number",
          "description": "Amount to move pupils horizontally",
          "required": false,
          "default": 0,
          "minimum": -45,
          "maximum": 45
        },
        {
          "name": "pupil_y",
          "type": "number",
          "description": "Amount to move pupils vertically",
          "required": false,
          "default": 0,
          "minimum": -45,
          "maximum": 45
        },
        {
          "name": "aaa",
          "type": "number",
          "description": "Amount to open mouth in 'aaa' shape",
          "required": false,
          "default": 0,
          "minimum": -200,
          "maximum": 200
        },
        {
          "name": "eee",
          "type": "number",
          "description": "Amount to shape mouth in 'eee' position",
          "required": false,
          "default": 0,
          "minimum": -40,
          "maximum": 40
        },
        {
          "name": "woo",
          "type": "number",
          "description": "Amount to shape mouth in 'woo' position",
          "required": false,
          "default": 0,
          "minimum": -100,
          "maximum": 100
        },
        {
          "name": "smile",
          "type": "number",
          "description": "Amount to smile",
          "required": false,
          "default": 0,
          "minimum": -2,
          "maximum": 2
        },
        {
          "name": "flag_lip_zero",
          "type": "boolean",
          "description": "Whether to set the lip to closed state before animation. Only takes effect when flag_eye_retargeting and flag_lip_retargeting are False.",
          "required": false,
          "default": true
        },
        {
          "name": "rotate_pitch",
          "type": "number",
          "description": "Amount to rotate the face in pitch",
          "required": false,
          "default": 0,
          "minimum": -45,
          "maximum": 45
        },
        {
          "name": "rotate_yaw",
          "type": "number",
          "description": "Amount to rotate the face in yaw",
          "required": false,
          "default": 0,
          "minimum": -45,
          "maximum": 45
        },
        {
          "name": "rotate_roll",
          "type": "number",
          "description": "Amount to rotate the face in roll",
          "required": false,
          "default": 0,
          "minimum": -45,
          "maximum": 45
        },
        {
          "name": "flag_eye_retargeting",
          "type": "boolean",
          "description": "Whether to enable eye retargeting.",
          "required": false,
          "default": false
        },
        {
          "name": "flag_lip_retargeting",
          "type": "boolean",
          "description": "Whether to enable lip retargeting.",
          "required": false,
          "default": false
        },
        {
          "name": "flag_stitching",
          "type": "boolean",
          "description": "Whether to enable stitching. Recommended to set to True.",
          "required": false,
          "default": true
        },
        {
          "name": "flag_relative",
          "type": "boolean",
          "description": "Whether to use relative motion.",
          "required": false,
          "default": true
        },
        {
          "name": "flag_pasteback",
          "type": "boolean",
          "description": "Whether to paste-back/stitch the animated face cropping from the face-cropping space to the original image space.",
          "required": false,
          "default": true
        },
        {
          "name": "flag_do_crop",
          "type": "boolean",
          "description": "Whether to crop the source portrait to the face-cropping space.",
          "required": false,
          "default": true
        },
        {
          "name": "flag_do_rot",
          "type": "boolean",
          "description": "Whether to conduct the rotation when flag_do_crop is True.",
          "required": false,
          "default": true
        },
        {
          "name": "dsize",
          "type": "integer",
          "description": "Size of the output image.",
          "required": false,
          "default": 512
        },
        {
          "name": "scale",
          "type": "number",
          "description": "Scaling factor for the face crop.",
          "required": false,
          "default": 2.3
        },
        {
          "name": "vx_ratio",
          "type": "number",
          "description": "Horizontal offset ratio for face crop.",
          "required": false,
          "default": 0
        },
        {
          "name": "vy_ratio",
          "type": "number",
          "description": "Vertical offset ratio for face crop. Positive values move up, negative values move down.",
          "required": false,
          "default": -0.125
        },
        {
          "name": "batch_size",
          "type": "integer",
          "description": "Batch size for the model. The larger the batch size, the faster the model will run, but the more memory it will consume.",
          "required": false,
          "default": 32
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "\n        Whether to enable the safety checker. If enabled, the model will check if the input image contains a face before processing it.\n        The safety checker will process the input image\n        ",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/live-portrait",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/live-portrait",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/live-portrait queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/live-portrait",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/live-portrait/XKEmk3mAzGHUjK3qqH-UL.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/live-portrait",
            "documentationUrl": "https://fal.ai/models/fal-ai/live-portrait/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LivePortraitInput": {
              "title": "LivePortraitInput",
              "type": "object",
              "properties": {
                "smile": {
                  "minimum": -2,
                  "maximum": 2,
                  "type": "number",
                  "description": "Amount to smile",
                  "title": "Smile",
                  "default": 0
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/live-portrait/liveportrait-example.mp4"
                  ],
                  "description": "URL of the video to drive the lip syncing.",
                  "type": "string",
                  "title": "Video Url"
                },
                "eyebrow": {
                  "minimum": -30,
                  "maximum": 30,
                  "type": "number",
                  "description": "Amount to raise or lower eyebrows",
                  "title": "Eyebrow",
                  "default": 0
                },
                "flag_stitching": {
                  "description": "Whether to enable stitching. Recommended to set to True.",
                  "type": "boolean",
                  "title": "Flag Stitching",
                  "default": true
                },
                "blink": {
                  "minimum": -30,
                  "maximum": 30,
                  "type": "number",
                  "description": "Amount to blink the eyes",
                  "title": "Blink",
                  "default": 0
                },
                "rotate_pitch": {
                  "minimum": -45,
                  "maximum": 45,
                  "type": "number",
                  "description": "Amount to rotate the face in pitch",
                  "title": "Rotate Pitch",
                  "default": 0
                },
                "wink": {
                  "minimum": 0,
                  "maximum": 25,
                  "type": "number",
                  "description": "Amount to wink",
                  "title": "Wink",
                  "default": 0
                },
                "scale": {
                  "description": "Scaling factor for the face crop.",
                  "type": "number",
                  "title": "Scale",
                  "default": 2.3
                },
                "eee": {
                  "minimum": -40,
                  "maximum": 40,
                  "type": "number",
                  "description": "Amount to shape mouth in 'eee' position",
                  "title": "Eee",
                  "default": 0
                },
                "flag_pasteback": {
                  "description": "Whether to paste-back/stitch the animated face cropping from the face-cropping space to the original image space.",
                  "type": "boolean",
                  "title": "Flag Pasteback",
                  "default": true
                },
                "pupil_y": {
                  "minimum": -45,
                  "maximum": 45,
                  "type": "number",
                  "description": "Amount to move pupils vertically",
                  "title": "Pupil Y",
                  "default": 0
                },
                "rotate_yaw": {
                  "minimum": -45,
                  "maximum": 45,
                  "type": "number",
                  "description": "Amount to rotate the face in yaw",
                  "title": "Rotate Yaw",
                  "default": 0
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/live-portrait/XKEmk3mAzGHUjK3qqH-UL.jpeg"
                  ],
                  "description": "URL of the image to be animated",
                  "type": "string",
                  "title": "Image Url"
                },
                "woo": {
                  "minimum": -100,
                  "maximum": 100,
                  "type": "number",
                  "description": "Amount to shape mouth in 'woo' position",
                  "title": "Woo",
                  "default": 0
                },
                "aaa": {
                  "minimum": -200,
                  "maximum": 200,
                  "type": "number",
                  "description": "Amount to open mouth in 'aaa' shape",
                  "title": "Aaa",
                  "default": 0
                },
                "flag_do_rot": {
                  "description": "Whether to conduct the rotation when flag_do_crop is True.",
                  "type": "boolean",
                  "title": "Flag Do Rot",
                  "default": true
                },
                "flag_relative": {
                  "description": "Whether to use relative motion.",
                  "type": "boolean",
                  "title": "Flag Relative",
                  "default": true
                },
                "flag_eye_retargeting": {
                  "description": "Whether to enable eye retargeting.",
                  "type": "boolean",
                  "title": "Flag Eye Retargeting",
                  "default": false
                },
                "flag_lip_zero": {
                  "description": "Whether to set the lip to closed state before animation. Only takes effect when flag_eye_retargeting and flag_lip_retargeting are False.",
                  "type": "boolean",
                  "title": "Flag Lip Zero",
                  "default": true
                },
                "batch_size": {
                  "description": "Batch size for the model. The larger the batch size, the faster the model will run, but the more memory it will consume.",
                  "type": "integer",
                  "title": "Batch Size",
                  "default": 32
                },
                "rotate_roll": {
                  "minimum": -45,
                  "maximum": 45,
                  "type": "number",
                  "description": "Amount to rotate the face in roll",
                  "title": "Rotate Roll",
                  "default": 0
                },
                "pupil_x": {
                  "minimum": -45,
                  "maximum": 45,
                  "type": "number",
                  "description": "Amount to move pupils horizontally",
                  "title": "Pupil X",
                  "default": 0
                },
                "vy_ratio": {
                  "description": "Vertical offset ratio for face crop. Positive values move up, negative values move down.",
                  "type": "number",
                  "title": "Vy Ratio",
                  "default": -0.125
                },
                "dsize": {
                  "description": "Size of the output image.",
                  "type": "integer",
                  "title": "Dsize",
                  "default": 512
                },
                "enable_safety_checker": {
                  "description": "\n        Whether to enable the safety checker. If enabled, the model will check if the input image contains a face before processing it.\n        The safety checker will process the input image\n        ",
                  "type": "boolean",
                  "title": "Enable Safety Checker",
                  "default": false
                },
                "vx_ratio": {
                  "description": "Horizontal offset ratio for face crop.",
                  "type": "number",
                  "title": "Vx Ratio",
                  "default": 0
                },
                "flag_lip_retargeting": {
                  "description": "Whether to enable lip retargeting.",
                  "type": "boolean",
                  "title": "Flag Lip Retargeting",
                  "default": false
                },
                "flag_do_crop": {
                  "description": "Whether to crop the source portrait to the face-cropping space.",
                  "type": "boolean",
                  "title": "Flag Do Crop",
                  "default": true
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "image_url",
                "blink",
                "eyebrow",
                "wink",
                "pupil_x",
                "pupil_y",
                "aaa",
                "eee",
                "woo",
                "smile",
                "flag_lip_zero",
                "rotate_pitch",
                "rotate_yaw",
                "rotate_roll",
                "flag_eye_retargeting",
                "flag_lip_retargeting",
                "flag_stitching",
                "flag_relative",
                "flag_pasteback",
                "flag_do_crop",
                "flag_do_rot",
                "dsize",
                "scale",
                "vx_ratio",
                "vy_ratio",
                "batch_size",
                "enable_safety_checker"
              ],
              "required": [
                "video_url",
                "image_url"
              ]
            },
            "LivePortraitOutput": {
              "title": "LivePortraitOutput",
              "type": "object",
              "properties": {
                "video": {
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ],
                  "title": "File Size"
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name"
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/live-portrait/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/live-portrait/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/live-portrait": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LivePortraitInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/live-portrait/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LivePortraitOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video",
      "title": "fal-ai/ltx-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A man stands waist-deep in a crystal-clear mountain pool, his back turned to a massive, thundering waterfall that cascades down jagged cliffs behind him. He wears a dark blue swimming shorts and his muscular back glistens with water droplets. The camera moves in a dynamic circular motion around him, starting from his right side and sweeping left, maintaining a slightly low angle that emphasizes the towering height of the waterfall. As the camera moves, the man slowly turns his head to follow its movement, his expression one of awe as he gazes up at the natural wonder. The waterfall creates a misty atmosphere, with sunlight filtering through the spray to create rainbow refractions. The water churns and ripples around him, reflecting the dramatic landscape. The handheld camera movement adds a subtle shake that enhances the raw, untamed energy of the scene. The lighting is natural and bright, with the sun positioned behind the waterfall, creating a backlit effect that silhouettes the falling water and illuminates the mist."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to generate the video from.",
          "required": false,
          "default": "low quality, worst quality, deformed, distorted, disfigured, motion smear, motion artifacts, fused fingers, bad anatomy, weird hand, ugly"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for random number generation.",
          "required": false,
          "default": null
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to take.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "The guidance scale to use.",
          "required": false,
          "default": 3,
          "maximum": 10
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for random number generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideoInput": {
              "title": "TextToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A man stands waist-deep in a crystal-clear mountain pool, his back turned to a massive, thundering waterfall that cascades down jagged cliffs behind him. He wears a dark blue swimming shorts and his muscular back glistens with water droplets. The camera moves in a dynamic circular motion around him, starting from his right side and sweeping left, maintaining a slightly low angle that emphasizes the towering height of the waterfall. As the camera moves, the man slowly turns his head to follow its movement, his expression one of awe as he gazes up at the natural wonder. The waterfall creates a misty atmosphere, with sunlight filtering through the spray to create rainbow refractions. The water churns and ripples around him, reflecting the dramatic landscape. The handheld camera movement adds a subtle shake that enhances the raw, untamed energy of the scene. The lighting is natural and bright, with the sun positioned behind the waterfall, creating a backlit effect that silhouettes the falling water and illuminates the mist."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "guidance_scale": {
                  "maximum": 10,
                  "type": "number",
                  "title": "Guidance Scale",
                  "description": "The guidance scale to use.",
                  "exclusiveMinimum": 1,
                  "default": 3
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "The seed to use for random number generation."
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Number of Inference Steps",
                  "description": "The number of inference steps to take.",
                  "default": 30
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to generate the video from.",
                  "default": "low quality, worst quality, deformed, distorted, disfigured, motion smear, motion artifacts, fused fingers, bad anatomy, weird hand, ugly"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "seed",
                "num_inference_steps",
                "guidance_scale"
              ],
              "required": [
                "prompt"
              ]
            },
            "LtxVideoOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for random number generation."
                },
                "video": {
                  "title": "Video",
                  "description": "The generated video.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-13b-dev",
      "title": "fal-ai/ltx-video-13b-dev",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-13b-dev",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9, 1:1 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "1:1",
            "16:9"
          ],
          "examples": [
            "16:9"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "first_pass_skip_final_steps",
          "type": "integer",
          "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
          "required": false,
          "default": 3,
          "minimum": 0,
          "maximum": 50
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 17,
          "minimum": 1,
          "maximum": 50,
          "examples": [
            17
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            30
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-13b-dev",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-13b-dev",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-13b-dev queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-13b-dev",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideo13bDevInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "first_pass_skip_final_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker"
              ],
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 50,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    17
                  ],
                  "default": 17
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "First Pass Num Inference Steps",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Frame Rate",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "prompt": {
                  "examples": [
                    "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to use for generation",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "Second Pass Num Inference Steps",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "maximum": 161,
                  "title": "Num Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "16:9"
                  ],
                  "description": "Aspect ratio of the generated video (16:9, 1:1 or 9:16).",
                  "default": "16:9"
                },
                "first_pass_skip_final_steps": {
                  "minimum": 0,
                  "maximum": 50,
                  "type": "integer",
                  "title": "First Pass Skip Final Steps",
                  "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
                  "default": 3
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                }
              },
              "title": "TextToVideoInput",
              "required": [
                "prompt"
              ]
            },
            "LtxVideo13bDevOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-multiscale-text-to-video.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "TextToVideoOutput",
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "title": "Scale",
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "title": "LoRAWeight",
              "required": [
                "path"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-13b-dev/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideo13bDevInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideo13bDevOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-13b-dev/extend",
      "title": "fal-ai/ltx-video-13b-dev/extend",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-13b-dev/extend",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/extend",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/extend/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "Woman walking on a street in Tokyo"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "first_pass_skip_final_steps",
          "type": "integer",
          "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
          "required": false,
          "default": 3,
          "minimum": 0,
          "maximum": 50
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 17,
          "minimum": 1,
          "maximum": 50,
          "examples": [
            17
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            30
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 35,
          "minimum": 20,
          "maximum": 60,
          "examples": [
            35
          ]
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video to be extended.",
          "required": true,
          "default": "",
          "examples": [
            {
              "video_url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4",
              "start_frame_num": 24,
              "reverse_video": false,
              "limit_num_frames": false,
              "resample_fps": false,
              "strength": 1,
              "target_fps": 30,
              "max_num_frames": 121,
              "conditioning_type": "rgb",
              "preprocess": false
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-13b-dev/extend",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-13b-dev/extend",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-13b-dev/extend queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-13b-dev/extend",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/extend",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/extend/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideo13bDevExtendInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "first_pass_skip_final_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "constant_rate_factor",
                "video"
              ],
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 50,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    17
                  ],
                  "default": 17
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "First Pass Num Inference Steps",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Frame Rate",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "prompt": {
                  "examples": [
                    "Woman walking on a street in Tokyo"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to use for generation",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "Second Pass Num Inference Steps",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "maximum": 161,
                  "title": "Num Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "video": {
                  "examples": [
                    {
                      "video_url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4",
                      "start_frame_num": 24,
                      "reverse_video": false,
                      "limit_num_frames": false,
                      "resample_fps": false,
                      "strength": 1,
                      "target_fps": 30,
                      "max_num_frames": 121,
                      "conditioning_type": "rgb",
                      "preprocess": false
                    }
                  ],
                  "title": "Video",
                  "description": "Video to be extended.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VideoConditioningInput"
                    }
                  ]
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "auto"
                  ],
                  "description": "The aspect ratio of the video.",
                  "default": "auto"
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 20,
                  "maximum": 60,
                  "title": "Constant Rate Factor",
                  "examples": [
                    35
                  ],
                  "default": 35
                },
                "first_pass_skip_final_steps": {
                  "minimum": 0,
                  "maximum": 50,
                  "type": "integer",
                  "title": "First Pass Skip Final Steps",
                  "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
                  "default": 3
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                }
              },
              "title": "ExtendVideoInput",
              "required": [
                "prompt",
                "video"
              ]
            },
            "LtxVideo13bDevExtendOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Woman walking on a street in Tokyo"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltx-v095_extend.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "ExtendVideoOutput",
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "title": "Scale",
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "title": "LoRAWeight",
              "required": [
                "path"
              ]
            },
            "VideoConditioningInput": {
              "x-fal-order-properties": [
                "video_url",
                "conditioning_type",
                "preprocess",
                "start_frame_num",
                "strength",
                "limit_num_frames",
                "max_num_frames",
                "resample_fps",
                "target_fps",
                "reverse_video"
              ],
              "type": "object",
              "properties": {
                "video_url": {
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL of video to use as conditioning"
                },
                "start_frame_num": {
                  "description": "Frame number of the video from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 160,
                  "title": "Start Frame Number",
                  "multipleOf": 8,
                  "default": 0
                },
                "reverse_video": {
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video. This is useful for tasks where the video conditioning should be applied in reverse order.",
                  "default": false
                },
                "limit_num_frames": {
                  "title": "Limit Number of Frames",
                  "type": "boolean",
                  "description": "Whether to limit the number of frames used from the video. If True, the `max_num_frames` parameter will be used to limit the number of frames.",
                  "default": false
                },
                "resample_fps": {
                  "title": "Resample FPS",
                  "type": "boolean",
                  "description": "Whether to resample the video to a specific FPS. If True, the `target_fps` parameter will be used to resample the video.",
                  "default": false
                },
                "strength": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "title": "Strength",
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "default": 1
                },
                "target_fps": {
                  "description": "Target FPS to resample the video to. Only relevant if `resample_fps` is True.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Target FPS",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "max_num_frames": {
                  "description": "Maximum number of frames to use from the video. If None, all frames will be used.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 161,
                  "title": "Maximum Number of Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "conditioning_type": {
                  "enum": [
                    "rgb",
                    "depth",
                    "pose",
                    "canny"
                  ],
                  "title": "Conditioning Type",
                  "type": "string",
                  "examples": [
                    "rgb"
                  ],
                  "description": "Type of conditioning this video provides. This is relevant to ensure in-context LoRA weights are applied correctly, as well as selecting the correct preprocessing pipeline, when enabled.",
                  "default": "rgb"
                },
                "preprocess": {
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the video. If True, the video will be preprocessed to match the conditioning type. This is a no-op for RGB conditioning.",
                  "default": false
                }
              },
              "title": "VideoConditioningInput",
              "required": [
                "video_url"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-13b-dev/extend/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/extend/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/extend": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideo13bDevExtendInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/extend/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideo13bDevExtendOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-13b-dev/image-to-video",
      "title": "fal-ai/ltx-video-13b-dev/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-13b-dev/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-5.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "The astronaut gets up and walks away"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "first_pass_skip_final_steps",
          "type": "integer",
          "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
          "required": false,
          "default": 3,
          "minimum": 0,
          "maximum": 50
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 17,
          "minimum": 1,
          "maximum": 50,
          "examples": [
            17
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            30
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image URL for Image-to-Video task",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/ltxv-image-input.jpg"
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 35,
          "minimum": 20,
          "maximum": 60,
          "examples": [
            35
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-13b-dev/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-13b-dev/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-13b-dev/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-13b-dev/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-5.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideo13bDevImageToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "first_pass_skip_final_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "image_url",
                "constant_rate_factor"
              ],
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 50,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    17
                  ],
                  "default": 17
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "First Pass Num Inference Steps",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Frame Rate",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "prompt": {
                  "examples": [
                    "The astronaut gets up and walks away"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to use for generation",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "Second Pass Num Inference Steps",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "maximum": 161,
                  "title": "Num Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "auto"
                  ],
                  "description": "The aspect ratio of the video.",
                  "default": "auto"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/ltxv-image-input.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "Image URL for Image-to-Video task"
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 20,
                  "maximum": 60,
                  "title": "Constant Rate Factor",
                  "examples": [
                    35
                  ],
                  "default": 35
                },
                "first_pass_skip_final_steps": {
                  "minimum": 0,
                  "maximum": 50,
                  "type": "integer",
                  "title": "First Pass Skip Final Steps",
                  "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
                  "default": 3
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                }
              },
              "title": "ImageToVideoInput",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "LtxVideo13bDevImageToVideoOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The astronaut gets up and walks away"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-image-to-video-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "ImageToVideoOutput",
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "title": "Scale",
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "title": "LoRAWeight",
              "required": [
                "path"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-13b-dev/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideo13bDevImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideo13bDevImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-13b-dev/multiconditioning",
      "title": "fal-ai/ltx-video-13b-dev/multiconditioning",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-13b-dev/multiconditioning",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/multiconditioning",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/multiconditioning/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "first_pass_skip_final_steps",
          "type": "integer",
          "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
          "required": false,
          "default": 3,
          "minimum": 0,
          "maximum": 50
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 17,
          "minimum": 1,
          "maximum": 50,
          "examples": [
            17
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            30
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 35,
          "minimum": 20,
          "maximum": 60,
          "examples": [
            35
          ]
        },
        {
          "name": "images",
          "type": "array",
          "description": "URL of images to use as conditioning",
          "required": false,
          "default": [],
          "examples": [
            [
              {
                "strength": 1,
                "start_frame_num": 0,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
              },
              {
                "strength": 1,
                "start_frame_num": 88,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
              }
            ]
          ]
        },
        {
          "name": "videos",
          "type": "array",
          "description": "Videos to use as conditioning",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-13b-dev/multiconditioning",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-13b-dev/multiconditioning",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-13b-dev/multiconditioning queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-13b-dev/multiconditioning",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/multiconditioning",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-dev/multiconditioning/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideo13bDevMulticonditioningInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "first_pass_skip_final_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "constant_rate_factor",
                "images",
                "videos"
              ],
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 50,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    17
                  ],
                  "default": 17
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "First Pass Num Inference Steps",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Frame Rate",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "prompt": {
                  "examples": [
                    "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to use for generation",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "images": {
                  "description": "URL of images to use as conditioning",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageConditioningInput"
                  },
                  "examples": [
                    [
                      {
                        "strength": 1,
                        "start_frame_num": 0,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
                      },
                      {
                        "strength": 1,
                        "start_frame_num": 88,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
                      }
                    ]
                  ],
                  "title": "Images",
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "maximum": 161,
                  "title": "Num Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "Second Pass Num Inference Steps",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "auto"
                  ],
                  "description": "The aspect ratio of the video.",
                  "default": "auto"
                },
                "videos": {
                  "title": "Videos",
                  "type": "array",
                  "description": "Videos to use as conditioning",
                  "items": {
                    "$ref": "#/components/schemas/VideoConditioningInput"
                  },
                  "default": []
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 20,
                  "maximum": 60,
                  "title": "Constant Rate Factor",
                  "examples": [
                    35
                  ],
                  "default": 35
                },
                "first_pass_skip_final_steps": {
                  "minimum": 0,
                  "maximum": 50,
                  "type": "integer",
                  "title": "First Pass Skip Final Steps",
                  "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
                  "default": 3
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                }
              },
              "title": "MultiConditioningVideoInput",
              "required": [
                "prompt"
              ]
            },
            "LtxVideo13bDevMulticonditioningOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-multiconditioning-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "MultiConditioningVideoOutput",
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "title": "Scale",
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "title": "LoRAWeight",
              "required": [
                "path"
              ]
            },
            "ImageConditioningInput": {
              "x-fal-order-properties": [
                "image_url",
                "start_frame_num",
                "strength"
              ],
              "type": "object",
              "properties": {
                "strength": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "title": "Strength",
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "default": 1
                },
                "start_frame_num": {
                  "description": "Frame number of the image from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 160,
                  "title": "Start Frame Number",
                  "multipleOf": 8,
                  "default": 0
                },
                "image_url": {
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of image to use as conditioning"
                }
              },
              "title": "ImageConditioningInput",
              "required": [
                "image_url"
              ]
            },
            "VideoConditioningInput": {
              "x-fal-order-properties": [
                "video_url",
                "conditioning_type",
                "preprocess",
                "start_frame_num",
                "strength",
                "limit_num_frames",
                "max_num_frames",
                "resample_fps",
                "target_fps",
                "reverse_video"
              ],
              "type": "object",
              "properties": {
                "video_url": {
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL of video to use as conditioning"
                },
                "start_frame_num": {
                  "description": "Frame number of the video from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 160,
                  "title": "Start Frame Number",
                  "multipleOf": 8,
                  "default": 0
                },
                "reverse_video": {
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video. This is useful for tasks where the video conditioning should be applied in reverse order.",
                  "default": false
                },
                "limit_num_frames": {
                  "title": "Limit Number of Frames",
                  "type": "boolean",
                  "description": "Whether to limit the number of frames used from the video. If True, the `max_num_frames` parameter will be used to limit the number of frames.",
                  "default": false
                },
                "resample_fps": {
                  "title": "Resample FPS",
                  "type": "boolean",
                  "description": "Whether to resample the video to a specific FPS. If True, the `target_fps` parameter will be used to resample the video.",
                  "default": false
                },
                "strength": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "title": "Strength",
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "default": 1
                },
                "target_fps": {
                  "description": "Target FPS to resample the video to. Only relevant if `resample_fps` is True.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Target FPS",
                  "examples": [
                    30
                  ],
                  "default": 30
                },
                "max_num_frames": {
                  "description": "Maximum number of frames to use from the video. If None, all frames will be used.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 161,
                  "title": "Maximum Number of Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "conditioning_type": {
                  "enum": [
                    "rgb",
                    "depth",
                    "pose",
                    "canny"
                  ],
                  "title": "Conditioning Type",
                  "type": "string",
                  "examples": [
                    "rgb"
                  ],
                  "description": "Type of conditioning this video provides. This is relevant to ensure in-context LoRA weights are applied correctly, as well as selecting the correct preprocessing pipeline, when enabled.",
                  "default": "rgb"
                },
                "preprocess": {
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the video. If True, the video will be preprocessed to match the conditioning type. This is a no-op for RGB conditioning.",
                  "default": false
                }
              },
              "title": "VideoConditioningInput",
              "required": [
                "video_url"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-13b-dev/multiconditioning/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/multiconditioning/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/multiconditioning": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideo13bDevMulticonditioningInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-dev/multiconditioning/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideo13bDevMulticonditioningOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-13b-distilled",
      "title": "fal-ai/ltx-video-13b-distilled",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-13b-distilled",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9, 1:1 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "1:1",
            "16:9"
          ],
          "examples": [
            "16:9"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 20,
          "examples": [
            8
          ]
        },
        {
          "name": "first_pass_skip_final_steps",
          "type": "integer",
          "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 20,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "examples": [
            5
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            30
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-13b-distilled",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-13b-distilled",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-13b-distilled queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-13b-distilled",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideo13bDistilledInput": {
              "title": "DistilledTextToVideoInput",
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    5
                  ],
                  "maximum": 20,
                  "default": 5
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "title": "First Pass Num Inference Steps",
                  "examples": [
                    8
                  ],
                  "maximum": 20,
                  "default": 8
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Frame Rate",
                  "examples": [
                    30
                  ],
                  "maximum": 60,
                  "default": 30
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "prompt": {
                  "examples": [
                    "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to use for generation",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "title": "Num Frames",
                  "examples": [
                    121
                  ],
                  "maximum": 161,
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "title": "Second Pass Num Inference Steps",
                  "examples": [
                    8
                  ],
                  "maximum": 20,
                  "default": 8
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "16:9"
                  ],
                  "description": "Aspect ratio of the generated video (16:9, 1:1 or 9:16).",
                  "default": "16:9"
                },
                "first_pass_skip_final_steps": {
                  "minimum": 0,
                  "title": "First Pass Skip Final Steps",
                  "type": "integer",
                  "maximum": 20,
                  "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
                  "default": 1
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "first_pass_skip_final_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker"
              ],
              "description": "Distilled model input",
              "required": [
                "prompt"
              ]
            },
            "LtxVideo13bDistilledOutput": {
              "title": "TextToVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-multiscale-text-to-video.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "maximum": 4,
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-13b-distilled/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideo13bDistilledInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideo13bDistilledOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-13b-distilled/extend",
      "title": "fal-ai/ltx-video-13b-distilled/extend",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-13b-distilled/extend",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/extend",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/extend/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "Woman walking on a street in Tokyo"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 20,
          "examples": [
            8
          ]
        },
        {
          "name": "first_pass_skip_final_steps",
          "type": "integer",
          "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 20,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "examples": [
            5
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            30
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 35,
          "minimum": 20,
          "maximum": 60,
          "examples": [
            35
          ]
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video to be extended.",
          "required": true,
          "default": "",
          "examples": [
            {
              "video_url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4",
              "reverse_video": false,
              "start_frame_num": 24,
              "limit_num_frames": false,
              "resample_fps": false,
              "strength": 1,
              "target_fps": 30,
              "max_num_frames": 121,
              "conditioning_type": "rgb",
              "preprocess": false
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-13b-distilled/extend",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-13b-distilled/extend",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-13b-distilled/extend queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-13b-distilled/extend",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/extend",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/extend/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideo13bDistilledExtendInput": {
              "title": "DistilledExtendVideoInput",
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    5
                  ],
                  "maximum": 20,
                  "default": 5
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "title": "First Pass Num Inference Steps",
                  "examples": [
                    8
                  ],
                  "maximum": 20,
                  "default": 8
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Frame Rate",
                  "examples": [
                    30
                  ],
                  "maximum": 60,
                  "default": 30
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "prompt": {
                  "examples": [
                    "Woman walking on a street in Tokyo"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to use for generation",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "title": "Num Frames",
                  "examples": [
                    121
                  ],
                  "maximum": 161,
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "title": "Second Pass Num Inference Steps",
                  "examples": [
                    8
                  ],
                  "maximum": 20,
                  "default": 8
                },
                "video": {
                  "examples": [
                    {
                      "video_url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4",
                      "reverse_video": false,
                      "start_frame_num": 24,
                      "limit_num_frames": false,
                      "resample_fps": false,
                      "strength": 1,
                      "target_fps": 30,
                      "max_num_frames": 121,
                      "conditioning_type": "rgb",
                      "preprocess": false
                    }
                  ],
                  "title": "Video",
                  "description": "Video to be extended.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VideoConditioningInput"
                    }
                  ]
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "auto"
                  ],
                  "description": "The aspect ratio of the video.",
                  "default": "auto"
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 20,
                  "title": "Constant Rate Factor",
                  "examples": [
                    35
                  ],
                  "maximum": 60,
                  "default": 35
                },
                "first_pass_skip_final_steps": {
                  "minimum": 0,
                  "title": "First Pass Skip Final Steps",
                  "type": "integer",
                  "maximum": 20,
                  "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
                  "default": 1
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "first_pass_skip_final_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "constant_rate_factor",
                "video"
              ],
              "description": "Distilled model input",
              "required": [
                "prompt",
                "video"
              ]
            },
            "LtxVideo13bDistilledExtendOutput": {
              "title": "ExtendVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Woman walking on a street in Tokyo"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltx-v095_extend.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "maximum": 4,
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "VideoConditioningInput": {
              "title": "VideoConditioningInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL of video to use as conditioning"
                },
                "reverse_video": {
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video. This is useful for tasks where the video conditioning should be applied in reverse order.",
                  "default": false
                },
                "start_frame_num": {
                  "description": "Frame number of the video from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "title": "Start Frame Number",
                  "maximum": 160,
                  "multipleOf": 8,
                  "default": 0
                },
                "limit_num_frames": {
                  "title": "Limit Number of Frames",
                  "type": "boolean",
                  "description": "Whether to limit the number of frames used from the video. If True, the `max_num_frames` parameter will be used to limit the number of frames.",
                  "default": false
                },
                "resample_fps": {
                  "title": "Resample FPS",
                  "type": "boolean",
                  "description": "Whether to resample the video to a specific FPS. If True, the `target_fps` parameter will be used to resample the video.",
                  "default": false
                },
                "strength": {
                  "minimum": 0,
                  "title": "Strength",
                  "type": "number",
                  "maximum": 1,
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "default": 1
                },
                "target_fps": {
                  "description": "Target FPS to resample the video to. Only relevant if `resample_fps` is True.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Target FPS",
                  "examples": [
                    30
                  ],
                  "maximum": 60,
                  "default": 30
                },
                "max_num_frames": {
                  "description": "Maximum number of frames to use from the video. If None, all frames will be used.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Maximum Number of Frames",
                  "examples": [
                    121
                  ],
                  "maximum": 161,
                  "default": 121
                },
                "conditioning_type": {
                  "enum": [
                    "rgb",
                    "depth",
                    "pose",
                    "canny"
                  ],
                  "title": "Conditioning Type",
                  "type": "string",
                  "examples": [
                    "rgb"
                  ],
                  "description": "Type of conditioning this video provides. This is relevant to ensure in-context LoRA weights are applied correctly, as well as selecting the correct preprocessing pipeline, when enabled.",
                  "default": "rgb"
                },
                "preprocess": {
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the video. If True, the video will be preprocessed to match the conditioning type. This is a no-op for RGB conditioning.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "conditioning_type",
                "preprocess",
                "start_frame_num",
                "strength",
                "limit_num_frames",
                "max_num_frames",
                "resample_fps",
                "target_fps",
                "reverse_video"
              ],
              "required": [
                "video_url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-13b-distilled/extend/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/extend/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/extend": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideo13bDistilledExtendInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/extend/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideo13bDistilledExtendOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-13b-distilled/image-to-video",
      "title": "fal-ai/ltx-video-13b-distilled/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-13b-distilled/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-5.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "The astronaut gets up and walks away"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 20,
          "examples": [
            8
          ]
        },
        {
          "name": "first_pass_skip_final_steps",
          "type": "integer",
          "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 20,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "examples": [
            5
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            30
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 35,
          "minimum": 20,
          "maximum": 60,
          "examples": [
            35
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image URL for Image-to-Video task",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/ltxv-image-input.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-13b-distilled/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-13b-distilled/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-13b-distilled/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-13b-distilled/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-5.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideo13bDistilledImageToVideoInput": {
              "title": "DistilledImageToVideoInput",
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    5
                  ],
                  "maximum": 20,
                  "default": 5
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "title": "First Pass Num Inference Steps",
                  "examples": [
                    8
                  ],
                  "maximum": 20,
                  "default": 8
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Frame Rate",
                  "examples": [
                    30
                  ],
                  "maximum": 60,
                  "default": 30
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "prompt": {
                  "examples": [
                    "The astronaut gets up and walks away"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to use for generation",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "title": "Num Frames",
                  "examples": [
                    121
                  ],
                  "maximum": 161,
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "title": "Second Pass Num Inference Steps",
                  "examples": [
                    8
                  ],
                  "maximum": 20,
                  "default": 8
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "auto"
                  ],
                  "description": "The aspect ratio of the video.",
                  "default": "auto"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/ltxv-image-input.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "Image URL for Image-to-Video task"
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 20,
                  "title": "Constant Rate Factor",
                  "examples": [
                    35
                  ],
                  "maximum": 60,
                  "default": 35
                },
                "first_pass_skip_final_steps": {
                  "minimum": 0,
                  "title": "First Pass Skip Final Steps",
                  "type": "integer",
                  "maximum": 20,
                  "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
                  "default": 1
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "first_pass_skip_final_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "constant_rate_factor",
                "image_url"
              ],
              "description": "Distilled model input",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "LtxVideo13bDistilledImageToVideoOutput": {
              "title": "ImageToVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The astronaut gets up and walks away"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-image-to-video-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "maximum": 4,
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-13b-distilled/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideo13bDistilledImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideo13bDistilledImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-13b-distilled/multiconditioning",
      "title": "fal-ai/ltx-video-13b-distilled/multiconditioning",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-13b-distilled/multiconditioning",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/multiconditioning",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/multiconditioning/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 20,
          "examples": [
            8
          ]
        },
        {
          "name": "first_pass_skip_final_steps",
          "type": "integer",
          "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 20,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "examples": [
            5
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            30
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 35,
          "minimum": 20,
          "maximum": 60,
          "examples": [
            35
          ]
        },
        {
          "name": "images",
          "type": "array",
          "description": "URL of images to use as conditioning",
          "required": false,
          "default": [],
          "examples": [
            [
              {
                "strength": 1,
                "start_frame_num": 0,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
              },
              {
                "strength": 1,
                "start_frame_num": 120,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
              }
            ]
          ]
        },
        {
          "name": "videos",
          "type": "array",
          "description": "Videos to use as conditioning",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-13b-distilled/multiconditioning",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-13b-distilled/multiconditioning",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-13b-distilled/multiconditioning queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-13b-distilled/multiconditioning",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/multiconditioning",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-13b-distilled/multiconditioning/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideo13bDistilledMulticonditioningInput": {
              "title": "DistilledMultiConditioningVideoInput",
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    5
                  ],
                  "maximum": 20,
                  "default": 5
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "title": "First Pass Num Inference Steps",
                  "examples": [
                    8
                  ],
                  "maximum": 20,
                  "default": 8
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Frame Rate",
                  "examples": [
                    30
                  ],
                  "maximum": 60,
                  "default": 30
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "prompt": {
                  "examples": [
                    "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to use for generation",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "images": {
                  "description": "URL of images to use as conditioning",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageConditioningInput"
                  },
                  "examples": [
                    [
                      {
                        "strength": 1,
                        "start_frame_num": 0,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
                      },
                      {
                        "strength": 1,
                        "start_frame_num": 120,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
                      }
                    ]
                  ],
                  "title": "Images",
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "title": "Num Frames",
                  "examples": [
                    121
                  ],
                  "maximum": 161,
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "title": "Second Pass Num Inference Steps",
                  "examples": [
                    8
                  ],
                  "maximum": 20,
                  "default": 8
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "auto"
                  ],
                  "description": "The aspect ratio of the video.",
                  "default": "auto"
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 20,
                  "title": "Constant Rate Factor",
                  "examples": [
                    35
                  ],
                  "maximum": 60,
                  "default": 35
                },
                "videos": {
                  "title": "Videos",
                  "type": "array",
                  "description": "Videos to use as conditioning",
                  "items": {
                    "$ref": "#/components/schemas/VideoConditioningInput"
                  },
                  "default": []
                },
                "first_pass_skip_final_steps": {
                  "minimum": 0,
                  "title": "First Pass Skip Final Steps",
                  "type": "integer",
                  "maximum": 20,
                  "description": "Number of inference steps to skip in the final steps of the first pass. By skipping some steps at the end, the first pass can focus on larger changes instead of smaller details.",
                  "default": 1
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "first_pass_skip_final_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "constant_rate_factor",
                "images",
                "videos"
              ],
              "description": "Distilled model input",
              "required": [
                "prompt"
              ]
            },
            "LtxVideo13bDistilledMulticonditioningOutput": {
              "title": "MultiConditioningVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-multiconditioning-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "maximum": 4,
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "ImageConditioningInput": {
              "title": "ImageConditioningInput",
              "type": "object",
              "properties": {
                "strength": {
                  "minimum": 0,
                  "title": "Strength",
                  "type": "number",
                  "maximum": 1,
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "default": 1
                },
                "start_frame_num": {
                  "description": "Frame number of the image from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "title": "Start Frame Number",
                  "maximum": 160,
                  "multipleOf": 8,
                  "default": 0
                },
                "image_url": {
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of image to use as conditioning"
                }
              },
              "x-fal-order-properties": [
                "image_url",
                "start_frame_num",
                "strength"
              ],
              "required": [
                "image_url"
              ]
            },
            "VideoConditioningInput": {
              "title": "VideoConditioningInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL of video to use as conditioning"
                },
                "reverse_video": {
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video. This is useful for tasks where the video conditioning should be applied in reverse order.",
                  "default": false
                },
                "start_frame_num": {
                  "description": "Frame number of the video from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "title": "Start Frame Number",
                  "maximum": 160,
                  "multipleOf": 8,
                  "default": 0
                },
                "limit_num_frames": {
                  "title": "Limit Number of Frames",
                  "type": "boolean",
                  "description": "Whether to limit the number of frames used from the video. If True, the `max_num_frames` parameter will be used to limit the number of frames.",
                  "default": false
                },
                "resample_fps": {
                  "title": "Resample FPS",
                  "type": "boolean",
                  "description": "Whether to resample the video to a specific FPS. If True, the `target_fps` parameter will be used to resample the video.",
                  "default": false
                },
                "strength": {
                  "minimum": 0,
                  "title": "Strength",
                  "type": "number",
                  "maximum": 1,
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "default": 1
                },
                "target_fps": {
                  "description": "Target FPS to resample the video to. Only relevant if `resample_fps` is True.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Target FPS",
                  "examples": [
                    30
                  ],
                  "maximum": 60,
                  "default": 30
                },
                "max_num_frames": {
                  "description": "Maximum number of frames to use from the video. If None, all frames will be used.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Maximum Number of Frames",
                  "examples": [
                    121
                  ],
                  "maximum": 161,
                  "default": 121
                },
                "conditioning_type": {
                  "enum": [
                    "rgb",
                    "depth",
                    "pose",
                    "canny"
                  ],
                  "title": "Conditioning Type",
                  "type": "string",
                  "examples": [
                    "rgb"
                  ],
                  "description": "Type of conditioning this video provides. This is relevant to ensure in-context LoRA weights are applied correctly, as well as selecting the correct preprocessing pipeline, when enabled.",
                  "default": "rgb"
                },
                "preprocess": {
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the video. If True, the video will be preprocessed to match the conditioning type. This is a no-op for RGB conditioning.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "conditioning_type",
                "preprocess",
                "start_frame_num",
                "strength",
                "limit_num_frames",
                "max_num_frames",
                "resample_fps",
                "target_fps",
                "reverse_video"
              ],
              "required": [
                "video_url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-13b-distilled/multiconditioning/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/multiconditioning/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/multiconditioning": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideo13bDistilledMulticonditioningInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-13b-distilled/multiconditioning/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideo13bDistilledMulticonditioningOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-lora/image-to-video",
      "title": "fal-ai/ltx-video-lora/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-lora/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-5.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-lora/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-lora/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "The astronaut gets up and walks away"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to use.",
          "required": false,
          "default": "blurry, low quality, low resolution, inconsistent motion, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "The LoRA weights to use for generation.",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "16:9",
            "1:1",
            "9:16",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "number_of_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 89,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            89
          ]
        },
        {
          "name": "number_of_steps",
          "type": "integer",
          "description": "The number of inference steps to use.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 25,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            25
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generation.",
          "required": false,
          "default": null
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using the LLM.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image to use as input.",
          "required": true,
          "default": "",
          "examples": [
            "https://h2.inkwai.com/bs2/upload-ylab-stunt/se/ai_portal_queue_mmu_image_upscale_aiweb/3214b798-e1b4-4b00-b7af-72b5b0417420_raw_image_0.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-lora/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-lora/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-lora/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-lora/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-5.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-lora/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-lora/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideoLoraImageToVideoInput": {
              "title": "ImageToVideoInput",
              "type": "object",
              "properties": {
                "number_of_steps": {
                  "description": "The number of inference steps to use.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Number Of Steps",
                  "examples": [
                    30
                  ],
                  "maximum": 50,
                  "default": 30
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "The resolution of the video.",
                  "default": "720p"
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "1:1",
                    "9:16",
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "auto"
                  ],
                  "description": "The aspect ratio of the video.",
                  "default": "auto"
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Frame Rate",
                  "examples": [
                    25
                  ],
                  "maximum": 60,
                  "default": 25
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using the LLM.",
                  "default": false
                },
                "number_of_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "title": "Number Of Frames",
                  "examples": [
                    89
                  ],
                  "maximum": 161,
                  "default": 89
                },
                "image_url": {
                  "examples": [
                    "https://h2.inkwai.com/bs2/upload-ylab-stunt/se/ai_portal_queue_mmu_image_upscale_aiweb/3214b798-e1b4-4b00-b7af-72b5b0417420_raw_image_0.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the image to use as input."
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "The LoRA weights to use for generation.",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "prompt": {
                  "examples": [
                    "The astronaut gets up and walks away"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generation."
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to use.",
                  "default": "blurry, low quality, low resolution, inconsistent motion, jittery, distorted"
                }
              },
              "description": "Request model for image-to-video generation.",
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "number_of_frames",
                "number_of_steps",
                "frame_rate",
                "seed",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "LtxVideoLoraImageToVideoOutput": {
              "title": "ImageToVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The astronaut gets up and walks away"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltx_i2v_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "video"
              ],
              "required": [
                "prompt",
                "seed",
                "video"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "maximum": 4,
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "description": "LoRA weight to use for generation.",
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-lora/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-lora/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-lora/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideoLoraImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-lora/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideoLoraImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-lora/multiconditioning",
      "title": "fal-ai/ltx-video-lora/multiconditioning",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-lora/multiconditioning",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-lora/multiconditioning",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-lora/multiconditioning/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to use.",
          "required": false,
          "default": "blurry, low quality, low resolution, inconsistent motion, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "The LoRA weights to use for generation.",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the video.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "16:9",
            "1:1",
            "9:16",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "number_of_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 89,
          "minimum": 9,
          "maximum": 161,
          "examples": [
            89
          ]
        },
        {
          "name": "number_of_steps",
          "type": "integer",
          "description": "The number of inference steps to use.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 50,
          "examples": [
            30
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 25,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            25
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generation.",
          "required": false,
          "default": null
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using the LLM.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "images",
          "type": "array",
          "description": "The image conditions to use for generation.",
          "required": false,
          "default": [],
          "examples": [
            [
              {
                "strength": 1,
                "start_frame_number": 0,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
              },
              {
                "strength": 1,
                "start_frame_number": 80,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
              }
            ]
          ]
        },
        {
          "name": "videos",
          "type": "array",
          "description": "The video conditions to use for generation.",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-lora/multiconditioning",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-lora/multiconditioning",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-lora/multiconditioning queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-lora/multiconditioning",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-lora/multiconditioning",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-lora/multiconditioning/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideoLoraMulticonditioningInput": {
              "title": "MulticonditioningVideoInput",
              "type": "object",
              "properties": {
                "number_of_steps": {
                  "description": "The number of inference steps to use.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Number Of Steps",
                  "examples": [
                    30
                  ],
                  "maximum": 50,
                  "default": 30
                },
                "prompt": {
                  "examples": [
                    "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "title": "Frame Rate",
                  "examples": [
                    25
                  ],
                  "maximum": 60,
                  "default": 25
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using the LLM.",
                  "default": false
                },
                "number_of_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "title": "Number Of Frames",
                  "examples": [
                    89
                  ],
                  "maximum": 161,
                  "default": 89
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "The LoRA weights to use for generation.",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "images": {
                  "description": "The image conditions to use for generation.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageCondition"
                  },
                  "examples": [
                    [
                      {
                        "strength": 1,
                        "start_frame_number": 0,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
                      },
                      {
                        "strength": 1,
                        "start_frame_number": 80,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
                      }
                    ]
                  ],
                  "title": "Images",
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to use.",
                  "default": "blurry, low quality, low resolution, inconsistent motion, jittery, distorted"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "1:1",
                    "9:16",
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "auto"
                  ],
                  "description": "The aspect ratio of the video.",
                  "default": "auto"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "examples": [
                    "720p"
                  ],
                  "description": "The resolution of the video.",
                  "default": "720p"
                },
                "videos": {
                  "title": "Videos",
                  "type": "array",
                  "description": "The video conditions to use for generation.",
                  "items": {
                    "$ref": "#/components/schemas/VideoCondition"
                  },
                  "default": []
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generation."
                }
              },
              "description": "Request model for text-to-video generation with multiple conditions.",
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "number_of_frames",
                "number_of_steps",
                "frame_rate",
                "seed",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "images",
                "videos"
              ],
              "required": [
                "prompt"
              ]
            },
            "LtxVideoLoraMulticonditioningOutput": {
              "title": "MulticonditioningVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/gallery/ltx-multicondition.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "video"
              ],
              "required": [
                "prompt",
                "seed",
                "video"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "maximum": 4,
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights."
                }
              },
              "description": "LoRA weight to use for generation.",
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "ImageCondition": {
              "title": "ImageCondition",
              "type": "object",
              "properties": {
                "strength": {
                  "minimum": 0,
                  "title": "Strength",
                  "type": "number",
                  "maximum": 1,
                  "description": "The strength of the condition.",
                  "default": 1
                },
                "start_frame_number": {
                  "minimum": 0,
                  "title": "Start Frame Number",
                  "type": "integer",
                  "maximum": 160,
                  "description": "The frame number to start the condition on.",
                  "default": 0
                },
                "image_url": {
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the image to use as input."
                }
              },
              "description": "Image condition to use for generation.",
              "x-fal-order-properties": [
                "image_url",
                "start_frame_number",
                "strength"
              ],
              "required": [
                "image_url"
              ]
            },
            "VideoCondition": {
              "title": "VideoCondition",
              "type": "object",
              "properties": {
                "strength": {
                  "minimum": 0,
                  "title": "Strength",
                  "type": "number",
                  "maximum": 1,
                  "description": "The strength of the condition.",
                  "default": 1
                },
                "start_frame_number": {
                  "minimum": 0,
                  "title": "Start Frame Number",
                  "type": "integer",
                  "maximum": 160,
                  "description": "The frame number to start the condition on.",
                  "default": 0
                },
                "video_url": {
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to use as input."
                }
              },
              "description": "Video condition to use for generation.",
              "x-fal-order-properties": [
                "video_url",
                "start_frame_number",
                "strength"
              ],
              "required": [
                "video_url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-lora/multiconditioning/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-lora/multiconditioning/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-lora/multiconditioning": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideoLoraMulticonditioningInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-lora/multiconditioning/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideoLoraMulticonditioningOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-v095",
      "title": "fal-ai/ltx-video-v095",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-v095",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ltx-0.9.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-v095",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "A cute cat walking on a sidewalk"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "16:9"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps",
          "required": false,
          "default": 40,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using the model's own capabilities.",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-v095",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-v095",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-v095 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-v095",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ltx-0.9.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-v095",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideoV095Input": {
              "title": "TextToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A cute cat walking on a sidewalk"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "16:9"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "16:9"
                },
                "expand_prompt": {
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using the model's own capabilities.",
                  "default": true
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "Number of inference steps",
                  "default": 40
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_inference_steps",
                "expand_prompt"
              ],
              "required": [
                "prompt"
              ]
            },
            "LtxVideoV095Output": {
              "title": "TextToVideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltx-t2v_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-v095/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideoV095Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideoV095Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-v095/extend",
      "title": "fal-ai/ltx-video-v095/extend",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-v095/extend",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ltx-0.9.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/extend",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/extend/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "Woman walking on a street in Tokyo"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "16:9"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps",
          "required": false,
          "default": 40,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using the model's own capabilities.",
          "required": false,
          "default": true
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video to be extended.",
          "required": true,
          "default": "",
          "examples": [
            {
              "video_url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4",
              "start_frame_num": 24
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-v095/extend",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-v095/extend",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-v095/extend queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-v095/extend",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ltx-0.9.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/extend",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/extend/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideoV095ExtendInput": {
              "title": "ExtendVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Woman walking on a street in Tokyo"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "16:9"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "16:9"
                },
                "expand_prompt": {
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using the model's own capabilities.",
                  "default": true
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "Number of inference steps",
                  "default": 40
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "video": {
                  "examples": [
                    {
                      "video_url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4",
                      "start_frame_num": 24
                    }
                  ],
                  "title": "Video",
                  "description": "Video to be extended.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VideoConditioningInput"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_inference_steps",
                "expand_prompt",
                "video"
              ],
              "required": [
                "prompt",
                "video"
              ]
            },
            "LtxVideoV095ExtendOutput": {
              "title": "ExtendVideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltx-v095_extend.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "VideoConditioningInput": {
              "title": "VideoConditioningInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of video to be extended"
                },
                "start_frame_num": {
                  "minimum": 0,
                  "maximum": 120,
                  "type": "integer",
                  "title": "Start Frame Num",
                  "multipleOf": 8,
                  "description": "Frame number of the video from which the conditioning starts. Must be a multiple of 8."
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "start_frame_num"
              ],
              "required": [
                "video_url",
                "start_frame_num"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-v095/extend/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095/extend/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095/extend": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideoV095ExtendInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095/extend/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideoV095ExtendOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video-v095/multiconditioning",
      "title": "fal-ai/ltx-video-v095/multiconditioning",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video-v095/multiconditioning",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ltx-0.9.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/multiconditioning",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/multiconditioning/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "\n            A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. \n\nThe camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose\n        "
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "16:9"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps",
          "required": false,
          "default": 40,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using the model's own capabilities.",
          "required": false,
          "default": true
        },
        {
          "name": "images",
          "type": "array",
          "description": "URL of images to use as conditioning",
          "required": false,
          "default": [],
          "examples": [
            [
              {
                "start_frame_num": 0,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
              },
              {
                "start_frame_num": 120,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
              }
            ]
          ]
        },
        {
          "name": "videos",
          "type": "array",
          "description": "Videos to use as conditioning",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video-v095/multiconditioning",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video-v095/multiconditioning",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video-v095/multiconditioning queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video-v095/multiconditioning",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/ltx-0.9.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/multiconditioning",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video-v095/multiconditioning/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideoV095MulticonditioningInput": {
              "title": "MultiConditioningVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "\n            A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. \n\nThe camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose\n        "
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "16:9"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "16:9"
                },
                "expand_prompt": {
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using the model's own capabilities.",
                  "default": true
                },
                "images": {
                  "examples": [
                    [
                      {
                        "start_frame_num": 0,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
                      },
                      {
                        "start_frame_num": 120,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
                      }
                    ]
                  ],
                  "title": "Images",
                  "type": "array",
                  "description": "URL of images to use as conditioning",
                  "items": {
                    "$ref": "#/components/schemas/ImageConditioningInput"
                  },
                  "default": []
                },
                "videos": {
                  "title": "Videos",
                  "type": "array",
                  "description": "Videos to use as conditioning",
                  "items": {
                    "$ref": "#/components/schemas/VideoConditioningInput"
                  },
                  "default": []
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "Number of inference steps",
                  "default": 40
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for generation",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_inference_steps",
                "expand_prompt",
                "images",
                "videos"
              ],
              "required": [
                "prompt"
              ]
            },
            "LtxVideoV095MulticonditioningOutput": {
              "title": "MulticonditioningVideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/gallery/ltx-multicondition.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "ImageConditioningInput": {
              "title": "ImageConditioningInput",
              "type": "object",
              "properties": {
                "start_frame_num": {
                  "minimum": 0,
                  "maximum": 120,
                  "type": "integer",
                  "title": "Start Frame Num",
                  "multipleOf": 8,
                  "description": "Frame number of the image from which the conditioning starts. Must be a multiple of 8."
                },
                "image_url": {
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of image to use as conditioning"
                }
              },
              "x-fal-order-properties": [
                "image_url",
                "start_frame_num"
              ],
              "required": [
                "image_url",
                "start_frame_num"
              ]
            },
            "VideoConditioningInput": {
              "title": "VideoConditioningInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of video to be extended"
                },
                "start_frame_num": {
                  "minimum": 0,
                  "maximum": 120,
                  "type": "integer",
                  "title": "Start Frame Num",
                  "multipleOf": 8,
                  "description": "Frame number of the video from which the conditioning starts. Must be a multiple of 8."
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "start_frame_num"
              ],
              "required": [
                "video_url",
                "start_frame_num"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video-v095/multiconditioning/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095/multiconditioning/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095/multiconditioning": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideoV095MulticonditioningInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video-v095/multiconditioning/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideoV095MulticonditioningOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltx-video/image-to-video",
      "title": "fal-ai/ltx-video/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltx-video/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A lone astronaut in a white spacesuit with gold-tinted visor drifts weightlessly through a sleek, cylindrical corridor of a spaceship. Their movements are slow and graceful as they gently push off the metallic walls with their gloved hands, rotating slightly as they float from right to left across the frame. The corridor features brushed aluminum panels with blue LED strips running along the ceiling, casting a cool glow on the astronaut's suit. Various cables, pipes, and control panels line the walls. The camera follows the astronaut's movement in a handheld style, slightly swaying and adjusting focus, maintaining a medium shot that captures both the astronaut and the corridor's depth. Small particles of dust catch the light as they float in the zero-gravity environment. The scene appears cinematic, with lens flares occasionally reflecting off the metallic surfaces and the astronaut's visor."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to generate the video from.",
          "required": false,
          "default": "low quality, worst quality, deformed, distorted, disfigured, motion smear, motion artifacts, fused fingers, bad anatomy, weird hand, ugly"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for random number generation.",
          "required": false,
          "default": null
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to take.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "The guidance scale to use.",
          "required": false,
          "default": 3,
          "maximum": 10
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/kangaroo/4OePu2ifG7SKxTM__TQrQ_72929fec9fb74790bb8c8b760450c9b9.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for random number generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltx-video/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltx-video/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltx-video/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltx-video/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/model_tests/cogvideox/panda.gif.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltx-video/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltx-video/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LtxVideoImageToVideoInput": {
              "title": "ImageToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A lone astronaut in a white spacesuit with gold-tinted visor drifts weightlessly through a sleek, cylindrical corridor of a spaceship. Their movements are slow and graceful as they gently push off the metallic walls with their gloved hands, rotating slightly as they float from right to left across the frame. The corridor features brushed aluminum panels with blue LED strips running along the ceiling, casting a cool glow on the astronaut's suit. Various cables, pipes, and control panels line the walls. The camera follows the astronaut's movement in a handheld style, slightly swaying and adjusting focus, maintaining a medium shot that captures both the astronaut and the corridor's depth. Small particles of dust catch the light as they float in the zero-gravity environment. The scene appears cinematic, with lens flares occasionally reflecting off the metallic surfaces and the astronaut's visor."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "guidance_scale": {
                  "maximum": 10,
                  "type": "number",
                  "title": "Guidance Scale",
                  "description": "The guidance scale to use.",
                  "exclusiveMinimum": 1,
                  "default": 3
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "The seed to use for random number generation."
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Number of Inference Steps",
                  "description": "The number of inference steps to take.",
                  "default": 30
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to generate the video from.",
                  "default": "low quality, worst quality, deformed, distorted, disfigured, motion smear, motion artifacts, fused fingers, bad anatomy, weird hand, ugly"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/kangaroo/4OePu2ifG7SKxTM__TQrQ_72929fec9fb74790bb8c8b760450c9b9.jpg"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "The URL of the image to generate the video from."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "seed",
                "num_inference_steps",
                "guidance_scale",
                "image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "LtxVideoImageToVideoOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for random number generation."
                },
                "video": {
                  "title": "Video",
                  "description": "The generated video.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltx-video/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LtxVideoImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltx-video/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LtxVideoImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltxv-13b-098-distilled",
      "title": "fal-ai/ltxv-13b-098-distilled",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltxv-13b-098-distilled",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video.",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "1:1",
            "16:9"
          ],
          "examples": [
            "16:9"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 1441,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 12,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 12,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 11,
          "examples": [
            5
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 24,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            24
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_detail_pass",
          "type": "boolean",
          "description": "Whether to use a detail pass. If True, the model will perform a second pass to refine the video and enhance details. This incurs a 2.0x cost multiplier on the base price.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "temporal_adain_factor",
          "type": "number",
          "description": "The factor for adaptive instance normalization (AdaIN) applied to generated video chunks after the first. This can help deal with a gradual increase in saturation/contrast in the generated video by normalizing the color distribution across the video. A high value will ensure the color distribution is more consistent across the video, while a low value will allow for more variation in color distribution.",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0.5
          ]
        },
        {
          "name": "tone_map_compression_ratio",
          "type": "number",
          "description": "The compression ratio for tone mapping. This is used to compress the dynamic range of the video to improve visual quality. A value of 0.0 means no compression, while a value of 1.0 means maximum compression.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltxv-13b-098-distilled",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltxv-13b-098-distilled",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltxv-13b-098-distilled queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltxv-13b-098-distilled",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Ltxv13b098DistilledInput": {
              "description": "Distilled model input",
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 11,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 12,
                  "title": "Number of Inference Steps",
                  "examples": [
                    8
                  ],
                  "default": 8
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Frame Rate",
                  "examples": [
                    24
                  ],
                  "default": 24
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "prompt": {
                  "examples": [
                    "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "temporal_adain_factor": {
                  "description": "The factor for adaptive instance normalization (AdaIN) applied to generated video chunks after the first. This can help deal with a gradual increase in saturation/contrast in the generated video by normalizing the color distribution across the video. A high value will ensure the color distribution is more consistent across the video, while a low value will allow for more variation in color distribution.",
                  "type": "number",
                  "examples": [
                    0.5
                  ],
                  "maximum": 1,
                  "title": "Temporal AdaIN Factor",
                  "minimum": 0,
                  "multipleOf": 0.05,
                  "default": 0.5
                },
                "loras": {
                  "description": "LoRA weights to use for generation",
                  "type": "array",
                  "title": "Loras",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "maximum": 1441,
                  "title": "Number of Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 12,
                  "title": "Second Pass Number of Inference Steps",
                  "examples": [
                    8
                  ],
                  "default": 8
                },
                "negative_prompt": {
                  "description": "Negative prompt for generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "enable_detail_pass": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Detail Pass",
                  "type": "boolean",
                  "description": "Whether to use a detail pass. If True, the model will perform a second pass to refine the video and enhance details. This incurs a 2.0x cost multiplier on the base price.",
                  "default": false
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video.",
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "aspect_ratio": {
                  "examples": [
                    "16:9"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video.",
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9"
                  ],
                  "default": "16:9"
                },
                "tone_map_compression_ratio": {
                  "description": "The compression ratio for tone mapping. This is used to compress the dynamic range of the video to improve visual quality. A value of 0.0 means no compression, while a value of 1.0 means maximum compression.",
                  "type": "number",
                  "examples": [
                    0
                  ],
                  "maximum": 1,
                  "title": "Tone Map Compression Ratio",
                  "minimum": 0,
                  "multipleOf": 0.05,
                  "default": 0
                },
                "seed": {
                  "description": "Random seed for generation",
                  "type": "integer",
                  "title": "Seed"
                }
              },
              "title": "DistilledTextToVideoInput",
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "enable_detail_pass",
                "temporal_adain_factor",
                "tone_map_compression_ratio"
              ],
              "required": [
                "prompt"
              ]
            },
            "Ltxv13b098DistilledOutput": {
              "title": "TextToVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A cinematic fast-tracking shot follows a vintage, teal camper van as it descends a winding mountain trail. The van, slightly weathered but well-maintained, is the central focus, its retro design emphasized by the motion blur. Medium shot reveals the dusty, ochre trail, edged with vibrant green pine trees. Close-up on the van's tires shows the gravel spraying, highlighting the speed and rugged terrain. Sunlight filters through the trees, casting dappled shadows on the van and the trail. The background is a hazy, majestic mountain range bathed in warm, golden light. The overall mood is adventurous and exhilarating. High resolution 4k movie scene."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "description": "The seed used for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-multiscale-text-to-video.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "description": "URL or path to the LoRA weights.",
                  "type": "string",
                  "title": "Path"
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "title": "Scale",
                  "default": 1
                },
                "weight_name": {
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights.",
                  "type": "string",
                  "title": "Weight Name"
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltxv-13b-098-distilled/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Ltxv13b098DistilledInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Ltxv13b098DistilledOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltxv-13b-098-distilled/extend",
      "title": "fal-ai/ltxv-13b-098-distilled/extend",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltxv-13b-098-distilled/extend",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/extend",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/extend/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "Woman walking on a street in Tokyo"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 1441,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 12,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 12,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 11,
          "examples": [
            5
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 24,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            24
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_detail_pass",
          "type": "boolean",
          "description": "Whether to use a detail pass. If True, the model will perform a second pass to refine the video and enhance details. This incurs a 2.0x cost multiplier on the base price.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "temporal_adain_factor",
          "type": "number",
          "description": "The factor for adaptive instance normalization (AdaIN) applied to generated video chunks after the first. This can help deal with a gradual increase in saturation/contrast in the generated video by normalizing the color distribution across the video. A high value will ensure the color distribution is more consistent across the video, while a low value will allow for more variation in color distribution.",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0.5
          ]
        },
        {
          "name": "tone_map_compression_ratio",
          "type": "number",
          "description": "The compression ratio for tone mapping. This is used to compress the dynamic range of the video to improve visual quality. A value of 0.0 means no compression, while a value of 1.0 means maximum compression.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 29,
          "minimum": 0,
          "maximum": 51,
          "examples": [
            29
          ]
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video to be extended.",
          "required": true,
          "default": "",
          "examples": [
            {
              "video_url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4",
              "start_frame_num": 0,
              "reverse_video": false,
              "limit_num_frames": false,
              "resample_fps": false,
              "strength": 1,
              "target_fps": 24,
              "max_num_frames": 1441,
              "conditioning_type": "rgb",
              "preprocess": false
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltxv-13b-098-distilled/extend",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltxv-13b-098-distilled/extend",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltxv-13b-098-distilled/extend queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltxv-13b-098-distilled/extend",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/extend",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/extend/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Ltxv13b098DistilledExtendInput": {
              "description": "Distilled model input",
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 11,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 12,
                  "title": "Number of Inference Steps",
                  "examples": [
                    8
                  ],
                  "default": 8
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Frame Rate",
                  "examples": [
                    24
                  ],
                  "default": 24
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "prompt": {
                  "examples": [
                    "Woman walking on a street in Tokyo"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "temporal_adain_factor": {
                  "description": "The factor for adaptive instance normalization (AdaIN) applied to generated video chunks after the first. This can help deal with a gradual increase in saturation/contrast in the generated video by normalizing the color distribution across the video. A high value will ensure the color distribution is more consistent across the video, while a low value will allow for more variation in color distribution.",
                  "type": "number",
                  "examples": [
                    0.5
                  ],
                  "maximum": 1,
                  "title": "Temporal AdaIN Factor",
                  "minimum": 0,
                  "multipleOf": 0.05,
                  "default": 0.5
                },
                "loras": {
                  "description": "LoRA weights to use for generation",
                  "type": "array",
                  "title": "Loras",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "maximum": 1441,
                  "title": "Number of Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 12,
                  "title": "Second Pass Number of Inference Steps",
                  "examples": [
                    8
                  ],
                  "default": 8
                },
                "negative_prompt": {
                  "description": "Negative prompt for generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "video": {
                  "examples": [
                    {
                      "video_url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4",
                      "start_frame_num": 0,
                      "reverse_video": false,
                      "limit_num_frames": false,
                      "resample_fps": false,
                      "strength": 1,
                      "target_fps": 24,
                      "max_num_frames": 1441,
                      "conditioning_type": "rgb",
                      "preprocess": false
                    }
                  ],
                  "title": "Video",
                  "description": "Video to be extended.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ExtendVideoConditioningInput"
                    }
                  ]
                },
                "enable_detail_pass": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Detail Pass",
                  "type": "boolean",
                  "description": "Whether to use a detail pass. If True, the model will perform a second pass to refine the video and enhance details. This incurs a 2.0x cost multiplier on the base price.",
                  "default": false
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video.",
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "aspect_ratio": {
                  "examples": [
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the video.",
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "default": "auto"
                },
                "tone_map_compression_ratio": {
                  "description": "The compression ratio for tone mapping. This is used to compress the dynamic range of the video to improve visual quality. A value of 0.0 means no compression, while a value of 1.0 means maximum compression.",
                  "type": "number",
                  "examples": [
                    0
                  ],
                  "maximum": 1,
                  "title": "Tone Map Compression Ratio",
                  "minimum": 0,
                  "multipleOf": 0.05,
                  "default": 0
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 51,
                  "title": "Constant Rate Factor",
                  "examples": [
                    29
                  ],
                  "default": 29
                },
                "seed": {
                  "description": "Random seed for generation",
                  "type": "integer",
                  "title": "Seed"
                }
              },
              "title": "DistilledExtendVideoInput",
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "enable_detail_pass",
                "temporal_adain_factor",
                "tone_map_compression_ratio",
                "constant_rate_factor",
                "video"
              ],
              "required": [
                "prompt",
                "video"
              ]
            },
            "Ltxv13b098DistilledExtendOutput": {
              "title": "ExtendVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Woman walking on a street in Tokyo"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "description": "The seed used for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltx-v095_extend.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "description": "URL or path to the LoRA weights.",
                  "type": "string",
                  "title": "Path"
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "title": "Scale",
                  "default": 1
                },
                "weight_name": {
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights.",
                  "type": "string",
                  "title": "Weight Name"
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "ExtendVideoConditioningInput": {
              "title": "ExtendVideoConditioningInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "description": "URL of video to use as conditioning",
                  "type": "string",
                  "title": "Video URL"
                },
                "start_frame_num": {
                  "description": "Frame number of the video from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1440,
                  "title": "Start Frame Number",
                  "multipleOf": 8,
                  "default": 0
                },
                "reverse_video": {
                  "description": "Whether to reverse the video. This is useful for tasks where the video conditioning should be applied in reverse order.",
                  "type": "boolean",
                  "title": "Reverse Video",
                  "default": false
                },
                "limit_num_frames": {
                  "description": "Whether to limit the number of frames used from the video. If True, the `max_num_frames` parameter will be used to limit the number of frames.",
                  "type": "boolean",
                  "title": "Limit Number of Frames",
                  "default": false
                },
                "resample_fps": {
                  "description": "Whether to resample the video to a specific FPS. If True, the `target_fps` parameter will be used to resample the video.",
                  "type": "boolean",
                  "title": "Resample FPS",
                  "default": false
                },
                "strength": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "title": "Strength",
                  "default": 1
                },
                "target_fps": {
                  "description": "Target FPS to resample the video to. Only relevant if `resample_fps` is True.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Target FPS",
                  "examples": [
                    24
                  ],
                  "default": 24
                },
                "max_num_frames": {
                  "description": "Maximum number of frames to use from the video. If None, all frames will be used.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 1441,
                  "title": "Maximum Number of Frames",
                  "examples": [
                    1441
                  ],
                  "default": 1441
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "start_frame_num",
                "strength",
                "limit_num_frames",
                "max_num_frames",
                "resample_fps",
                "target_fps",
                "reverse_video"
              ],
              "required": [
                "video_url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltxv-13b-098-distilled/extend/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/extend/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/extend": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Ltxv13b098DistilledExtendInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/extend/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Ltxv13b098DistilledExtendOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltxv-13b-098-distilled/image-to-video",
      "title": "fal-ai/ltxv-13b-098-distilled/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltxv-13b-098-distilled/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-5.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "The astronaut gets up and walks away"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 1441,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 12,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 12,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 11,
          "examples": [
            5
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 24,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            24
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_detail_pass",
          "type": "boolean",
          "description": "Whether to use a detail pass. If True, the model will perform a second pass to refine the video and enhance details. This incurs a 2.0x cost multiplier on the base price.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "temporal_adain_factor",
          "type": "number",
          "description": "The factor for adaptive instance normalization (AdaIN) applied to generated video chunks after the first. This can help deal with a gradual increase in saturation/contrast in the generated video by normalizing the color distribution across the video. A high value will ensure the color distribution is more consistent across the video, while a low value will allow for more variation in color distribution.",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0.5
          ]
        },
        {
          "name": "tone_map_compression_ratio",
          "type": "number",
          "description": "The compression ratio for tone mapping. This is used to compress the dynamic range of the video to improve visual quality. A value of 0.0 means no compression, while a value of 1.0 means maximum compression.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 29,
          "minimum": 0,
          "maximum": 51,
          "examples": [
            29
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image URL for Image-to-Video task",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/ltxv-image-input.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltxv-13b-098-distilled/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltxv-13b-098-distilled/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltxv-13b-098-distilled/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltxv-13b-098-distilled/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-5.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Ltxv13b098DistilledImageToVideoInput": {
              "description": "Distilled model input",
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 11,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 12,
                  "title": "Number of Inference Steps",
                  "examples": [
                    8
                  ],
                  "default": 8
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Frame Rate",
                  "examples": [
                    24
                  ],
                  "default": 24
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "prompt": {
                  "examples": [
                    "The astronaut gets up and walks away"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "temporal_adain_factor": {
                  "description": "The factor for adaptive instance normalization (AdaIN) applied to generated video chunks after the first. This can help deal with a gradual increase in saturation/contrast in the generated video by normalizing the color distribution across the video. A high value will ensure the color distribution is more consistent across the video, while a low value will allow for more variation in color distribution.",
                  "type": "number",
                  "examples": [
                    0.5
                  ],
                  "maximum": 1,
                  "title": "Temporal AdaIN Factor",
                  "minimum": 0,
                  "multipleOf": 0.05,
                  "default": 0.5
                },
                "loras": {
                  "description": "LoRA weights to use for generation",
                  "type": "array",
                  "title": "Loras",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "maximum": 1441,
                  "title": "Number of Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 12,
                  "title": "Second Pass Number of Inference Steps",
                  "examples": [
                    8
                  ],
                  "default": 8
                },
                "negative_prompt": {
                  "description": "Negative prompt for generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "enable_detail_pass": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Detail Pass",
                  "type": "boolean",
                  "description": "Whether to use a detail pass. If True, the model will perform a second pass to refine the video and enhance details. This incurs a 2.0x cost multiplier on the base price.",
                  "default": false
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video.",
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "aspect_ratio": {
                  "examples": [
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the video.",
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "default": "auto"
                },
                "tone_map_compression_ratio": {
                  "description": "The compression ratio for tone mapping. This is used to compress the dynamic range of the video to improve visual quality. A value of 0.0 means no compression, while a value of 1.0 means maximum compression.",
                  "type": "number",
                  "examples": [
                    0
                  ],
                  "maximum": 1,
                  "title": "Tone Map Compression Ratio",
                  "minimum": 0,
                  "multipleOf": 0.05,
                  "default": 0
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/ltxv-image-input.jpg"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "Image URL for Image-to-Video task"
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 51,
                  "title": "Constant Rate Factor",
                  "examples": [
                    29
                  ],
                  "default": 29
                },
                "seed": {
                  "description": "Random seed for generation",
                  "type": "integer",
                  "title": "Seed"
                }
              },
              "title": "DistilledImageToVideoInput",
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "enable_detail_pass",
                "temporal_adain_factor",
                "tone_map_compression_ratio",
                "constant_rate_factor",
                "image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "Ltxv13b098DistilledImageToVideoOutput": {
              "title": "ImageToVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The astronaut gets up and walks away"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "description": "The seed used for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-image-to-video-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "description": "URL or path to the LoRA weights.",
                  "type": "string",
                  "title": "Path"
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "title": "Scale",
                  "default": 1
                },
                "weight_name": {
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights.",
                  "type": "string",
                  "title": "Weight Name"
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltxv-13b-098-distilled/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Ltxv13b098DistilledImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Ltxv13b098DistilledImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/ltxv-13b-098-distilled/multiconditioning",
      "title": "fal-ai/ltxv-13b-098-distilled/multiconditioning",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/ltxv-13b-098-distilled/multiconditioning",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/multiconditioning",
      "documentationUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/multiconditioning/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide generation",
          "required": true,
          "default": "",
          "examples": [
            "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for generation",
          "required": false,
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to use for generation",
          "required": false,
          "default": []
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the video.",
          "required": false,
          "default": "auto",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "examples": [
            "auto"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames in the video.",
          "required": false,
          "default": 121,
          "minimum": 9,
          "maximum": 1441,
          "examples": [
            121
          ]
        },
        {
          "name": "first_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the first pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 12,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps during the second pass.",
          "required": false,
          "default": 8,
          "minimum": 2,
          "maximum": 12,
          "examples": [
            8
          ]
        },
        {
          "name": "second_pass_skip_initial_steps",
          "type": "integer",
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 11,
          "examples": [
            5
          ]
        },
        {
          "name": "frame_rate",
          "type": "integer",
          "description": "The frame rate of the video.",
          "required": false,
          "default": 24,
          "minimum": 1,
          "maximum": 60,
          "examples": [
            24
          ]
        },
        {
          "name": "expand_prompt",
          "type": "boolean",
          "description": "Whether to expand the prompt using a language model.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "Whether to reverse the video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_detail_pass",
          "type": "boolean",
          "description": "Whether to use a detail pass. If True, the model will perform a second pass to refine the video and enhance details. This incurs a 2.0x cost multiplier on the base price.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "temporal_adain_factor",
          "type": "number",
          "description": "The factor for adaptive instance normalization (AdaIN) applied to generated video chunks after the first. This can help deal with a gradual increase in saturation/contrast in the generated video by normalizing the color distribution across the video. A high value will ensure the color distribution is more consistent across the video, while a low value will allow for more variation in color distribution.",
          "required": false,
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0.5
          ]
        },
        {
          "name": "tone_map_compression_ratio",
          "type": "number",
          "description": "The compression ratio for tone mapping. This is used to compress the dynamic range of the video to improve visual quality. A value of 0.0 means no compression, while a value of 1.0 means maximum compression.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0
          ]
        },
        {
          "name": "constant_rate_factor",
          "type": "integer",
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "required": false,
          "default": 29,
          "minimum": 0,
          "maximum": 51,
          "examples": [
            29
          ]
        },
        {
          "name": "images",
          "type": "array",
          "description": "URL of images to use as conditioning",
          "required": false,
          "default": [],
          "examples": [
            [
              {
                "strength": 1,
                "start_frame_num": 0,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
              },
              {
                "strength": 1,
                "start_frame_num": 120,
                "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
              }
            ]
          ]
        },
        {
          "name": "videos",
          "type": "array",
          "description": "Videos to use as conditioning",
          "required": false,
          "default": []
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/ltxv-13b-098-distilled/multiconditioning",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/ltxv-13b-098-distilled/multiconditioning",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/ltxv-13b-098-distilled/multiconditioning queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/ltxv-13b-098-distilled/multiconditioning",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/multiconditioning",
            "documentationUrl": "https://fal.ai/models/fal-ai/ltxv-13b-098-distilled/multiconditioning/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Ltxv13b098DistilledMulticonditioningInput": {
              "description": "Distilled model input",
              "type": "object",
              "properties": {
                "second_pass_skip_initial_steps": {
                  "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 11,
                  "title": "Second Pass Skip Initial Steps",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "first_pass_num_inference_steps": {
                  "description": "Number of inference steps during the first pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 12,
                  "title": "Number of Inference Steps",
                  "examples": [
                    8
                  ],
                  "default": 8
                },
                "frame_rate": {
                  "description": "The frame rate of the video.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Frame Rate",
                  "examples": [
                    24
                  ],
                  "default": 24
                },
                "reverse_video": {
                  "examples": [
                    false
                  ],
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "Whether to reverse the video.",
                  "default": false
                },
                "prompt": {
                  "examples": [
                    "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide generation"
                },
                "expand_prompt": {
                  "examples": [
                    false
                  ],
                  "title": "Expand Prompt",
                  "type": "boolean",
                  "description": "Whether to expand the prompt using a language model.",
                  "default": false
                },
                "temporal_adain_factor": {
                  "description": "The factor for adaptive instance normalization (AdaIN) applied to generated video chunks after the first. This can help deal with a gradual increase in saturation/contrast in the generated video by normalizing the color distribution across the video. A high value will ensure the color distribution is more consistent across the video, while a low value will allow for more variation in color distribution.",
                  "type": "number",
                  "examples": [
                    0.5
                  ],
                  "maximum": 1,
                  "title": "Temporal AdaIN Factor",
                  "minimum": 0,
                  "multipleOf": 0.05,
                  "default": 0.5
                },
                "loras": {
                  "description": "LoRA weights to use for generation",
                  "type": "array",
                  "title": "Loras",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "images": {
                  "description": "URL of images to use as conditioning",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageConditioningInput"
                  },
                  "examples": [
                    [
                      {
                        "strength": 1,
                        "start_frame_num": 0,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/NswO1P8sCLzrh1WefqQFK_9a6bdbfa54b944c9a770338159a113fd.jpg"
                      },
                      {
                        "strength": 1,
                        "start_frame_num": 120,
                        "image_url": "https://storage.googleapis.com/falserverless/model_tests/ltx/YAPOGvmS2tM_Krdp7q6-d_267c97e017c34f679844a4477dfcec38.jpg"
                      }
                    ]
                  ],
                  "title": "Images",
                  "default": []
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames in the video.",
                  "type": "integer",
                  "minimum": 9,
                  "maximum": 1441,
                  "title": "Number of Frames",
                  "examples": [
                    121
                  ],
                  "default": 121
                },
                "second_pass_num_inference_steps": {
                  "description": "Number of inference steps during the second pass.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 12,
                  "title": "Second Pass Number of Inference Steps",
                  "examples": [
                    8
                  ],
                  "default": 8
                },
                "negative_prompt": {
                  "description": "Negative prompt for generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
                },
                "enable_detail_pass": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Detail Pass",
                  "type": "boolean",
                  "description": "Whether to use a detail pass. If True, the model will perform a second pass to refine the video and enhance details. This incurs a 2.0x cost multiplier on the base price.",
                  "default": false
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video.",
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "aspect_ratio": {
                  "examples": [
                    "auto"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the video.",
                  "enum": [
                    "9:16",
                    "1:1",
                    "16:9",
                    "auto"
                  ],
                  "default": "auto"
                },
                "tone_map_compression_ratio": {
                  "description": "The compression ratio for tone mapping. This is used to compress the dynamic range of the video to improve visual quality. A value of 0.0 means no compression, while a value of 1.0 means maximum compression.",
                  "type": "number",
                  "examples": [
                    0
                  ],
                  "maximum": 1,
                  "title": "Tone Map Compression Ratio",
                  "minimum": 0,
                  "multipleOf": 0.05,
                  "default": 0
                },
                "videos": {
                  "description": "Videos to use as conditioning",
                  "type": "array",
                  "title": "Videos",
                  "items": {
                    "$ref": "#/components/schemas/VideoConditioningInput"
                  },
                  "default": []
                },
                "constant_rate_factor": {
                  "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 51,
                  "title": "Constant Rate Factor",
                  "examples": [
                    29
                  ],
                  "default": 29
                },
                "seed": {
                  "description": "Random seed for generation",
                  "type": "integer",
                  "title": "Seed"
                }
              },
              "title": "DistilledMultiConditioningVideoInput",
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "loras",
                "resolution",
                "aspect_ratio",
                "seed",
                "num_frames",
                "first_pass_num_inference_steps",
                "second_pass_num_inference_steps",
                "second_pass_skip_initial_steps",
                "frame_rate",
                "expand_prompt",
                "reverse_video",
                "enable_safety_checker",
                "enable_detail_pass",
                "temporal_adain_factor",
                "tone_map_compression_ratio",
                "constant_rate_factor",
                "images",
                "videos"
              ],
              "required": [
                "prompt"
              ]
            },
            "Ltxv13b098DistilledMulticonditioningOutput": {
              "title": "MultiConditioningVideoOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A vibrant, abstract composition featuring a person with outstretched arms, rendered in a kaleidoscope of colors against a deep, dark background. The figure is composed of intricate, swirling patterns reminiscent of a mosaic, with hues of orange, yellow, blue, and green that evoke the style of artists such as Wassily Kandinsky or Bridget Riley. The camera zooms into the face striking portrait of a man, reimagined through the lens of old-school video-game graphics. The subject's face is rendered in a kaleidoscope of colors, with bold blues and reds set against a vibrant yellow backdrop. His dark hair is pulled back, framing his profile in a dramatic pose."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "description": "The seed used for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/ltxv-multiconditioning-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "LoRAWeight": {
              "title": "LoRAWeight",
              "type": "object",
              "properties": {
                "path": {
                  "description": "URL or path to the LoRA weights.",
                  "type": "string",
                  "title": "Path"
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "description": "Scale of the LoRA weight. This is a multiplier applied to the LoRA weight when loading it.",
                  "title": "Scale",
                  "default": 1
                },
                "weight_name": {
                  "description": "Name of the LoRA weight. Only used if `path` is a HuggingFace repository, and is only required when the repository contains multiple LoRA weights.",
                  "type": "string",
                  "title": "Weight Name"
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "ImageConditioningInput": {
              "title": "ImageConditioningInput",
              "type": "object",
              "properties": {
                "strength": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "title": "Strength",
                  "default": 1
                },
                "start_frame_num": {
                  "description": "Frame number of the image from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1440,
                  "title": "Start Frame Number",
                  "multipleOf": 8,
                  "default": 0
                },
                "image_url": {
                  "description": "URL of image to use as conditioning",
                  "type": "string",
                  "title": "Image URL"
                }
              },
              "x-fal-order-properties": [
                "image_url",
                "start_frame_num",
                "strength"
              ],
              "required": [
                "image_url"
              ]
            },
            "VideoConditioningInput": {
              "title": "VideoConditioningInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "description": "URL of video to use as conditioning",
                  "type": "string",
                  "title": "Video URL"
                },
                "start_frame_num": {
                  "description": "Frame number of the video from which the conditioning starts. Must be a multiple of 8.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1440,
                  "title": "Start Frame Number",
                  "multipleOf": 8,
                  "default": 0
                },
                "reverse_video": {
                  "description": "Whether to reverse the video. This is useful for tasks where the video conditioning should be applied in reverse order.",
                  "type": "boolean",
                  "title": "Reverse Video",
                  "default": false
                },
                "limit_num_frames": {
                  "description": "Whether to limit the number of frames used from the video. If True, the `max_num_frames` parameter will be used to limit the number of frames.",
                  "type": "boolean",
                  "title": "Limit Number of Frames",
                  "default": false
                },
                "resample_fps": {
                  "description": "Whether to resample the video to a specific FPS. If True, the `target_fps` parameter will be used to resample the video.",
                  "type": "boolean",
                  "title": "Resample FPS",
                  "default": false
                },
                "strength": {
                  "minimum": 0,
                  "maximum": 1,
                  "type": "number",
                  "description": "Strength of the conditioning. 0.0 means no conditioning, 1.0 means full conditioning.",
                  "title": "Strength",
                  "default": 1
                },
                "target_fps": {
                  "description": "Target FPS to resample the video to. Only relevant if `resample_fps` is True.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 60,
                  "title": "Target FPS",
                  "examples": [
                    24
                  ],
                  "default": 24
                },
                "max_num_frames": {
                  "description": "Maximum number of frames to use from the video. If None, all frames will be used.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 1441,
                  "title": "Maximum Number of Frames",
                  "examples": [
                    1441
                  ],
                  "default": 1441
                },
                "conditioning_type": {
                  "examples": [
                    "rgb"
                  ],
                  "title": "Conditioning Type",
                  "type": "string",
                  "description": "Type of conditioning this video provides. This is relevant to ensure in-context LoRA weights are applied correctly, as well as selecting the correct preprocessing pipeline, when enabled.",
                  "enum": [
                    "rgb",
                    "depth",
                    "pose",
                    "canny"
                  ],
                  "default": "rgb"
                },
                "preprocess": {
                  "description": "Whether to preprocess the video. If True, the video will be preprocessed to match the conditioning type. This is a no-op for RGB conditioning.",
                  "type": "boolean",
                  "title": "Preprocess",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "conditioning_type",
                "preprocess",
                "start_frame_num",
                "strength",
                "limit_num_frames",
                "max_num_frames",
                "resample_fps",
                "target_fps",
                "reverse_video"
              ],
              "required": [
                "video_url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/ltxv-13b-098-distilled/multiconditioning/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/multiconditioning/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/multiconditioning": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Ltxv13b098DistilledMulticonditioningInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/ltxv-13b-098-distilled/multiconditioning/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Ltxv13b098DistilledMulticonditioningOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine",
      "title": "fal-ai/luma-dream-machine",
      "description": "Generate high-quality videos from text descriptions using Luma Dream Machine for cinematic video generation.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/JtiRw34MZ1GkgxRnH52Cs.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A teddy bear in sunglasses playing electric guitar and dancing"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ]
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/JtiRw34MZ1GkgxRnH52Cs.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineInput": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A teddy bear in sunglasses playing electric guitar and dancing"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "minLength": 3
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "4:3",
                    "3:4",
                    "21:9",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "loop": {
                  "title": "Loop",
                  "type": "boolean",
                  "description": "Whether the video should loop (end of video is blended with the beginning)",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "loop"
              ],
              "required": [
                "prompt"
              ]
            },
            "LumaDreamMachineOutput": {
              "title": "T2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v2.fal.media/files/807e842c734f4127a36de9262a2d292c_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/image-to-video",
      "title": "fal-ai/luma-dream-machine/image-to-video",
      "description": "Transform static images into dynamic videos with AI using Luma Dream Machine for cinematic video generation.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/JtiRw34MZ1GkgxRnH52Cs.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Low-angle shot of a majestic tiger prowling through a snowy landscape, leaving paw prints on the white blanket"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image Url",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/koala/1oLY4Bjp4XdGBBTSsrGlE.jpeg"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "An image to blend the end of the video with",
          "required": false,
          "default": ""
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ]
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/JtiRw34MZ1GkgxRnH52Cs.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineImageToVideoInput": {
              "title": "ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Low-angle shot of a majestic tiger prowling through a snowy landscape, leaving paw prints on the white blanket"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "minLength": 3
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "4:3",
                    "3:4",
                    "21:9",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "loop": {
                  "title": "Loop",
                  "type": "boolean",
                  "description": "Whether the video should loop (end of video is blended with the beginning)",
                  "default": false
                },
                "end_image_url": {
                  "title": "End Image Url",
                  "type": "string",
                  "description": "An image to blend the end of the video with"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/koala/1oLY4Bjp4XdGBBTSsrGlE.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "end_image_url",
                "aspect_ratio",
                "loop"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "LumaDreamMachineImageToVideoOutput": {
              "title": "I2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v2.fal.media/files/8c216fcbc4ed41cd8840bd48c1ec6dd6_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/ray-2",
      "title": "fal-ai/luma-dream-machine/ray-2",
      "description": "Generate high-quality videos from text descriptions using Luma Dream Machine for cinematic video generation.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/ray-2",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A herd of wild horses galloping across a dusty desert plain under a blazing midday sun, their manes flying in the wind; filmed in a wide tracking shot with dynamic motion, warm natural lighting, and an epic."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ]
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "required": false,
          "default": false
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
          "required": false,
          "default": "540p",
          "enum": [
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video (9s costs 2x more)",
          "required": false,
          "default": "5s",
          "enum": [
            "5s",
            "9s"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/ray-2",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/ray-2",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/ray-2 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/ray-2",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineRay2Input": {
              "title": "Ray2TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A herd of wild horses galloping across a dusty desert plain under a blazing midday sun, their manes flying in the wind; filmed in a wide tracking shot with dynamic motion, warm natural lighting, and an epic."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "minLength": 3
                },
                "duration": {
                  "enum": [
                    "5s",
                    "9s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video (9s costs 2x more)",
                  "default": "5s"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "4:3",
                    "3:4",
                    "21:9",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "loop": {
                  "title": "Loop",
                  "type": "boolean",
                  "description": "Whether the video should loop (end of video is blended with the beginning)",
                  "default": false
                },
                "resolution": {
                  "enum": [
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
                  "default": "540p"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "loop",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt"
              ]
            },
            "LumaDreamMachineRay2Output": {
              "title": "Ray2T2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/penguin/Om3xjcOwiSCJwrXs7DUi__output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/ray-2/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineRay2Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineRay2Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/ray-2-flash",
      "title": "fal-ai/luma-dream-machine/ray-2-flash",
      "description": "Generate high-quality videos from text descriptions using Luma Dream Machine for cinematic video generation.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/ray-2-flash",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A herd of wild horses galloping across a dusty desert plain under a blazing midday sun, their manes flying in the wind; filmed in a wide tracking shot with dynamic motion, warm natural lighting, and an epic."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ]
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "required": false,
          "default": false
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
          "required": false,
          "default": "540p",
          "enum": [
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video (9s costs 2x more)",
          "required": false,
          "default": "5s",
          "enum": [
            "5s",
            "9s"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/ray-2-flash",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/ray-2-flash",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/ray-2-flash queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/ray-2-flash",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineRay2FlashInput": {
              "title": "Ray2TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A herd of wild horses galloping across a dusty desert plain under a blazing midday sun, their manes flying in the wind; filmed in a wide tracking shot with dynamic motion, warm natural lighting, and an epic."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "minLength": 3
                },
                "duration": {
                  "enum": [
                    "5s",
                    "9s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video (9s costs 2x more)",
                  "default": "5s"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "4:3",
                    "3:4",
                    "21:9",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "loop": {
                  "title": "Loop",
                  "type": "boolean",
                  "description": "Whether the video should loop (end of video is blended with the beginning)",
                  "default": false
                },
                "resolution": {
                  "enum": [
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
                  "default": "540p"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "loop",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt"
              ]
            },
            "LumaDreamMachineRay2FlashOutput": {
              "title": "Ray2T2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/penguin/Om3xjcOwiSCJwrXs7DUi__output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/ray-2-flash/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineRay2FlashInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineRay2FlashOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/ray-2-flash/image-to-video",
      "title": "fal-ai/luma-dream-machine/ray-2-flash/image-to-video",
      "description": "Transform static images into dynamic videos with AI using Luma Dream Machine for cinematic video generation.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/ray-2-flash/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Initial image to start the video from. Can be used together with end_image_url.",
          "required": false,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "Final image to end the video with. Can be used together with image_url.",
          "required": false,
          "default": ""
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ]
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "required": false,
          "default": false
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
          "required": false,
          "default": "540p",
          "enum": [
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video",
          "required": false,
          "default": "5s",
          "enum": [
            "5s",
            "9s"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "URL of the generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/ray-2-flash/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/ray-2-flash/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/ray-2-flash/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/ray-2-flash/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineRay2FlashImageToVideoInput": {
              "title": "Ray2ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "minLength": 3
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "4:3",
                    "3:4",
                    "21:9",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
                  "default": "540p"
                },
                "loop": {
                  "title": "Loop",
                  "type": "boolean",
                  "description": "Whether the video should loop (end of video is blended with the beginning)",
                  "default": false
                },
                "duration": {
                  "enum": [
                    "5s",
                    "9s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video",
                  "default": "5s"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "Initial image to start the video from. Can be used together with end_image_url."
                },
                "end_image_url": {
                  "title": "End Image Url",
                  "type": "string",
                  "description": "Final image to end the video with. Can be used together with image_url."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "end_image_url",
                "aspect_ratio",
                "loop",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt"
              ]
            },
            "LumaDreamMachineRay2FlashImageToVideoOutput": {
              "title": "Ray2I2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "URL of the generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/ray-2-flash/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineRay2FlashImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineRay2FlashImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/ray-2-flash/modify",
      "title": "fal-ai/luma-dream-machine/ray-2-flash/modify",
      "description": "Transform and edit existing videos with AI using Luma Dream Machine for cinematic video generation.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/ray-2-flash/modify",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/koala/y1-LTiotjfV3d_9Hy1lMU_3db5709293314d53abe575e9327c0fe4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/modify",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/modify/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to modify",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Optional URL of the first frame image for modification",
          "required": false,
          "default": "",
          "examples": [
            "https://fal.media/files/koala/Kv2821G03ggpKK2AiZX71_d5fa7bacf06049cfaeb9588f6003b6d5.jpg"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Instruction for modifying the video",
          "required": false,
          "default": ""
        },
        {
          "name": "mode",
          "type": "string",
          "description": "Amount of modification to apply to the video, adhere_1 is the least amount of modification, reimagine_3 is the most",
          "required": false,
          "default": "flex_1",
          "enum": [
            "adhere_1",
            "adhere_2",
            "adhere_3",
            "flex_1",
            "flex_2",
            "flex_3",
            "reimagine_1",
            "reimagine_2",
            "reimagine_3"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "URL of the modified video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/ray-2-flash/modify",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/ray-2-flash/modify",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/ray-2-flash/modify queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/ray-2-flash/modify",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/koala/y1-LTiotjfV3d_9Hy1lMU_3db5709293314d53abe575e9327c0fe4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/modify",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/modify/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineRay2FlashModifyInput": {
              "title": "ModifyVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "description": "Instruction for modifying the video",
                  "minLength": 3
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video to modify"
                },
                "mode": {
                  "enum": [
                    "adhere_1",
                    "adhere_2",
                    "adhere_3",
                    "flex_1",
                    "flex_2",
                    "flex_3",
                    "reimagine_1",
                    "reimagine_2",
                    "reimagine_3"
                  ],
                  "title": "Mode",
                  "type": "string",
                  "description": "Amount of modification to apply to the video, adhere_1 is the least amount of modification, reimagine_3 is the most",
                  "default": "flex_1"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/koala/Kv2821G03ggpKK2AiZX71_d5fa7bacf06049cfaeb9588f6003b6d5.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "Optional URL of the first frame image for modification"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "image_url",
                "prompt",
                "mode"
              ],
              "required": [
                "video_url"
              ]
            },
            "LumaDreamMachineRay2FlashModifyOutput": {
              "title": "ModifyOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/lion/_2UO2QC26T_R8vKeVGAdX_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "URL of the modified video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/ray-2-flash/modify/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/modify/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/modify": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineRay2FlashModifyInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/modify/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineRay2FlashModifyOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/ray-2-flash/reframe",
      "title": "fal-ai/luma-dream-machine/ray-2-flash/reframe",
      "description": "Transform and edit existing videos with AI using Luma Dream Machine for cinematic video generation.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/ray-2-flash/reframe",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/reframe",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/reframe/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to reframe",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the reframed video",
          "required": true,
          "default": "",
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ],
          "examples": [
            "9:16"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Optional URL of the first frame image for reframing",
          "required": false,
          "default": ""
        },
        {
          "name": "grid_position_x",
          "type": "integer",
          "description": "X position of the grid for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "grid_position_y",
          "type": "integer",
          "description": "Y position of the grid for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Optional prompt for reframing",
          "required": false,
          "default": ""
        },
        {
          "name": "x_end",
          "type": "integer",
          "description": "End X coordinate for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "x_start",
          "type": "integer",
          "description": "Start X coordinate for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "y_end",
          "type": "integer",
          "description": "End Y coordinate for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "y_start",
          "type": "integer",
          "description": "Start Y coordinate for reframing",
          "required": false,
          "default": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "URL of the reframed video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/ray-2-flash/reframe",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/ray-2-flash/reframe",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/ray-2-flash/reframe queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/ray-2-flash/reframe",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/reframe",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2-flash/reframe/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineRay2FlashReframeInput": {
              "title": "ReframeVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "description": "Optional prompt for reframing",
                  "minLength": 1
                },
                "aspect_ratio": {
                  "enum": [
                    "1:1",
                    "16:9",
                    "9:16",
                    "4:3",
                    "3:4",
                    "21:9",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "9:16"
                  ],
                  "description": "The aspect ratio of the reframed video"
                },
                "y_start": {
                  "title": "Y Start",
                  "type": "integer",
                  "description": "Start Y coordinate for reframing"
                },
                "x_end": {
                  "title": "X End",
                  "type": "integer",
                  "description": "End X coordinate for reframing"
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video to reframe"
                },
                "y_end": {
                  "title": "Y End",
                  "type": "integer",
                  "description": "End Y coordinate for reframing"
                },
                "image_url": {
                  "title": "Image Url",
                  "type": "string",
                  "description": "Optional URL of the first frame image for reframing"
                },
                "grid_position_y": {
                  "title": "Grid Position Y",
                  "type": "integer",
                  "description": "Y position of the grid for reframing"
                },
                "grid_position_x": {
                  "title": "Grid Position X",
                  "type": "integer",
                  "description": "X position of the grid for reframing"
                },
                "x_start": {
                  "title": "X Start",
                  "type": "integer",
                  "description": "Start X coordinate for reframing"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "aspect_ratio",
                "image_url",
                "grid_position_x",
                "grid_position_y",
                "prompt",
                "x_end",
                "x_start",
                "y_end",
                "y_start"
              ],
              "required": [
                "video_url",
                "aspect_ratio"
              ]
            },
            "LumaDreamMachineRay2FlashReframeOutput": {
              "title": "ReframeOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/lion/L9nkXSW1MCj2oDimeJ4w5_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "URL of the reframed video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/ray-2-flash/reframe/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/reframe/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/reframe": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineRay2FlashReframeInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2-flash/reframe/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineRay2FlashReframeOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/ray-2/image-to-video",
      "title": "fal-ai/luma-dream-machine/ray-2/image-to-video",
      "description": "Transform static images into dynamic videos with AI using Luma Dream Machine for cinematic video generation.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/ray-2/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Initial image to start the video from. Can be used together with end_image_url.",
          "required": false,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "Final image to end the video with. Can be used together with image_url.",
          "required": false,
          "default": ""
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ]
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "required": false,
          "default": false
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
          "required": false,
          "default": "540p",
          "enum": [
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video",
          "required": false,
          "default": "5s",
          "enum": [
            "5s",
            "9s"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "URL of the generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/ray-2/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/ray-2/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/ray-2/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/ray-2/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineRay2ImageToVideoInput": {
              "title": "Ray2ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "minLength": 3
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "4:3",
                    "3:4",
                    "21:9",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
                  "default": "540p"
                },
                "loop": {
                  "title": "Loop",
                  "type": "boolean",
                  "description": "Whether the video should loop (end of video is blended with the beginning)",
                  "default": false
                },
                "duration": {
                  "enum": [
                    "5s",
                    "9s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video",
                  "default": "5s"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "Initial image to start the video from. Can be used together with end_image_url."
                },
                "end_image_url": {
                  "title": "End Image Url",
                  "type": "string",
                  "description": "Final image to end the video with. Can be used together with image_url."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "end_image_url",
                "aspect_ratio",
                "loop",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt"
              ]
            },
            "LumaDreamMachineRay2ImageToVideoOutput": {
              "title": "Ray2I2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "URL of the generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/ray-2/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineRay2ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineRay2ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/ray-2/modify",
      "title": "fal-ai/luma-dream-machine/ray-2/modify",
      "description": "Transform and edit existing videos with AI using Luma Dream Machine for cinematic video generation.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/ray-2/modify",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/modify",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/modify/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to modify",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Optional URL of the first frame image for modification",
          "required": false,
          "default": "",
          "examples": [
            "https://fal.media/files/koala/Kv2821G03ggpKK2AiZX71_d5fa7bacf06049cfaeb9588f6003b6d5.jpg"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Instruction for modifying the video",
          "required": false,
          "default": ""
        },
        {
          "name": "mode",
          "type": "string",
          "description": "Amount of modification to apply to the video, adhere_1 is the least amount of modification, reimagine_3 is the most",
          "required": false,
          "default": "flex_1",
          "enum": [
            "adhere_1",
            "adhere_2",
            "adhere_3",
            "flex_1",
            "flex_2",
            "flex_3",
            "reimagine_1",
            "reimagine_2",
            "reimagine_3"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "URL of the modified video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/ray-2/modify",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/ray-2/modify",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/ray-2/modify queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/ray-2/modify",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/modify",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/modify/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineRay2ModifyInput": {
              "title": "ModifyVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "description": "Instruction for modifying the video",
                  "minLength": 3
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video to modify"
                },
                "mode": {
                  "enum": [
                    "adhere_1",
                    "adhere_2",
                    "adhere_3",
                    "flex_1",
                    "flex_2",
                    "flex_3",
                    "reimagine_1",
                    "reimagine_2",
                    "reimagine_3"
                  ],
                  "title": "Mode",
                  "type": "string",
                  "description": "Amount of modification to apply to the video, adhere_1 is the least amount of modification, reimagine_3 is the most",
                  "default": "flex_1"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/koala/Kv2821G03ggpKK2AiZX71_d5fa7bacf06049cfaeb9588f6003b6d5.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "Optional URL of the first frame image for modification"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "image_url",
                "prompt",
                "mode"
              ],
              "required": [
                "video_url"
              ]
            },
            "LumaDreamMachineRay2ModifyOutput": {
              "title": "ModifyOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/lion/_2UO2QC26T_R8vKeVGAdX_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "URL of the modified video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/ray-2/modify/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/modify/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/modify": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineRay2ModifyInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/modify/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineRay2ModifyOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/luma-dream-machine/ray-2/reframe",
      "title": "fal-ai/luma-dream-machine/ray-2/reframe",
      "description": "Transform and edit existing videos with AI using Luma Dream Machine for cinematic video generation.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/luma-dream-machine/ray-2/reframe",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/reframe",
      "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/reframe/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to reframe",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the reframed video",
          "required": true,
          "default": "",
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ],
          "examples": [
            "9:16"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Optional URL of the first frame image for reframing",
          "required": false,
          "default": ""
        },
        {
          "name": "grid_position_x",
          "type": "integer",
          "description": "X position of the grid for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "grid_position_y",
          "type": "integer",
          "description": "Y position of the grid for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Optional prompt for reframing",
          "required": false,
          "default": ""
        },
        {
          "name": "x_end",
          "type": "integer",
          "description": "End X coordinate for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "x_start",
          "type": "integer",
          "description": "Start X coordinate for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "y_end",
          "type": "integer",
          "description": "End Y coordinate for reframing",
          "required": false,
          "default": 1
        },
        {
          "name": "y_start",
          "type": "integer",
          "description": "Start Y coordinate for reframing",
          "required": false,
          "default": 1
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "URL of the reframed video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/luma-dream-machine/ray-2/reframe",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/luma-dream-machine/ray-2/reframe",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/luma-dream-machine/ray-2/reframe queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/luma-dream-machine/ray-2/reframe",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/luma-dream-machine-ray-2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/reframe",
            "documentationUrl": "https://fal.ai/models/fal-ai/luma-dream-machine/ray-2/reframe/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LumaDreamMachineRay2ReframeInput": {
              "title": "ReframeVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 5000,
                  "description": "Optional prompt for reframing",
                  "minLength": 1
                },
                "aspect_ratio": {
                  "enum": [
                    "1:1",
                    "16:9",
                    "9:16",
                    "4:3",
                    "3:4",
                    "21:9",
                    "9:21"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "examples": [
                    "9:16"
                  ],
                  "description": "The aspect ratio of the reframed video"
                },
                "y_start": {
                  "title": "Y Start",
                  "type": "integer",
                  "description": "Start Y coordinate for reframing"
                },
                "x_end": {
                  "title": "X End",
                  "type": "integer",
                  "description": "End X coordinate for reframing"
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/9aDde3Te2kuJYHdR0Kz8R_output.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video to reframe"
                },
                "y_end": {
                  "title": "Y End",
                  "type": "integer",
                  "description": "End Y coordinate for reframing"
                },
                "image_url": {
                  "title": "Image Url",
                  "type": "string",
                  "description": "Optional URL of the first frame image for reframing"
                },
                "grid_position_y": {
                  "title": "Grid Position Y",
                  "type": "integer",
                  "description": "Y position of the grid for reframing"
                },
                "grid_position_x": {
                  "title": "Grid Position X",
                  "type": "integer",
                  "description": "X position of the grid for reframing"
                },
                "x_start": {
                  "title": "X Start",
                  "type": "integer",
                  "description": "Start X coordinate for reframing"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "aspect_ratio",
                "image_url",
                "grid_position_x",
                "grid_position_y",
                "prompt",
                "x_end",
                "x_start",
                "y_end",
                "y_start"
              ],
              "required": [
                "video_url",
                "aspect_ratio"
              ]
            },
            "LumaDreamMachineRay2ReframeOutput": {
              "title": "ReframeOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/lion/L9nkXSW1MCj2oDimeJ4w5_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "URL of the reframed video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/luma-dream-machine/ray-2/reframe/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/reframe/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/reframe": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LumaDreamMachineRay2ReframeInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/luma-dream-machine/ray-2/reframe/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LumaDreamMachineRay2ReframeOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/magi",
      "title": "fal-ai/magi",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/magi",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/magi",
      "documentationUrl": "https://fal.ai/models/fal-ai/magi/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Close-up shot: the old sea captain stares intently, pipe in mouth, wisps of smoke curling around his weathered face. The camera begins a slow clockwise orbit, pulling back. Finally, the camera rises high above, revealing the entire wooden sailing ship cutting through the waves, the captain unmoved, gazing toward the distant horizon."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
          "required": false,
          "default": 96,
          "minimum": 96,
          "maximum": 192
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 16,
          "enum": [
            4,
            8,
            16,
            32,
            64
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/magi",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/magi",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/magi queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/magi",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/magi",
            "documentationUrl": "https://fal.ai/models/fal-ai/magi/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MagiInput": {
              "title": "MagiTextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Close-up shot: the old sea captain stares intently, pipe in mouth, wisps of smoke curling around his weathered face. The camera begins a slow clockwise orbit, pulling back. Finally, the camera rises high above, revealing the entire wooden sailing ship cutting through the waves, the captain unmoved, gazing toward the distant horizon."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_inference_steps": {
                  "enum": [
                    4,
                    8,
                    16,
                    32,
                    64
                  ],
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 16
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_frames": {
                  "minimum": 96,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 192,
                  "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
                  "default": 96
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "num_frames",
                "seed",
                "resolution",
                "num_inference_steps",
                "enable_safety_checker",
                "aspect_ratio"
              ],
              "required": [
                "prompt"
              ]
            },
            "MagiOutput": {
              "title": "MagiResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/elephant/Foq1oFk7e5_dzujsITYfl_f7c4f24d-a68d-4b8b-8199-320002a99ac8.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/magi/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MagiInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MagiOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/magi-distilled",
      "title": "fal-ai/magi-distilled",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/magi-distilled",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/magi-distilled",
      "documentationUrl": "https://fal.ai/models/fal-ai/magi-distilled/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Close-up shot: the old sea captain stares intently, pipe in mouth, wisps of smoke curling around his weathered face. The camera begins a slow clockwise orbit, pulling back. Finally, the camera rises high above, revealing the entire wooden sailing ship cutting through the waves, the captain unmoved, gazing toward the distant horizon."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
          "required": false,
          "default": 96,
          "minimum": 96,
          "maximum": 192
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 16,
          "enum": [
            4,
            8,
            16,
            32
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/magi-distilled",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/magi-distilled",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/magi-distilled queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/magi-distilled",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/magi-distilled",
            "documentationUrl": "https://fal.ai/models/fal-ai/magi-distilled/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MagiDistilledInput": {
              "title": "MagiTextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Close-up shot: the old sea captain stares intently, pipe in mouth, wisps of smoke curling around his weathered face. The camera begins a slow clockwise orbit, pulling back. Finally, the camera rises high above, revealing the entire wooden sailing ship cutting through the waves, the captain unmoved, gazing toward the distant horizon."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_inference_steps": {
                  "enum": [
                    4,
                    8,
                    16,
                    32
                  ],
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 16
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_frames": {
                  "minimum": 96,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 192,
                  "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
                  "default": 96
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "num_frames",
                "seed",
                "resolution",
                "num_inference_steps",
                "enable_safety_checker",
                "aspect_ratio"
              ],
              "required": [
                "prompt"
              ]
            },
            "MagiDistilledOutput": {
              "title": "MagiResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/rabbit/lTH9PY_LQG0FjueBxMfDN_0395dec3-0c4a-4c25-8399-ebb198b73a30.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/magi-distilled/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MagiDistilledInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MagiDistilledOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/magi-distilled/extend-video",
      "title": "fal-ai/magi-distilled/extend-video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/magi-distilled/extend-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/magi-distilled/extend-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/magi-distilled/extend-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            ""
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to represent the beginning of the video. If the input video does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/rabbit/lTH9PY_LQG0FjueBxMfDN_0395dec3-0c4a-4c25-8399-ebb198b73a30.mp4"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
          "required": false,
          "default": 96,
          "minimum": 96,
          "maximum": 192
        },
        {
          "name": "start_frame",
          "type": "integer",
          "description": "The frame to begin the generation from, with the remaining frames will be treated as the prefix video. The final video will contain the frames up until this number unchanged, followed by the generated frames. The default start frame is 32 frames before the end of the video, which gives optimal results.",
          "required": false,
          "default": 1,
          "minimum": 0
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 16,
          "enum": [
            4,
            8,
            16,
            32
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/magi-distilled/extend-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/magi-distilled/extend-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/magi-distilled/extend-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/magi-distilled/extend-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/magi-distilled/extend-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/magi-distilled/extend-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MagiDistilledExtendVideoInput": {
              "title": "MagiVideoExtensionRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    ""
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/rabbit/lTH9PY_LQG0FjueBxMfDN_0395dec3-0c4a-4c25-8399-ebb198b73a30.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video to represent the beginning of the video. If the input video does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "start_frame": {
                  "minimum": 0,
                  "title": "Start Frame",
                  "type": "integer",
                  "description": "The frame to begin the generation from, with the remaining frames will be treated as the prefix video. The final video will contain the frames up until this number unchanged, followed by the generated frames. The default start frame is 32 frames before the end of the video, which gives optimal results."
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_inference_steps": {
                  "enum": [
                    4,
                    8,
                    16,
                    32
                  ],
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 16
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_frames": {
                  "minimum": 96,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 192,
                  "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
                  "default": 96
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "video_url",
                "num_frames",
                "start_frame",
                "seed",
                "resolution",
                "num_inference_steps",
                "enable_safety_checker",
                "aspect_ratio"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "MagiDistilledExtendVideoOutput": {
              "title": "MagiVideoExtensionResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/2UjT7u_8oF2gGfxBiT_gL_91a8f175-fd57-4ed6-aedc-1957aa558363.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/magi-distilled/extend-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled/extend-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled/extend-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MagiDistilledExtendVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled/extend-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MagiDistilledExtendVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/magi-distilled/image-to-video",
      "title": "fal-ai/magi-distilled/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/magi-distilled/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/magi-distilled/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/magi-distilled/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Close-up shot: the old sea captain stares intently, pipe in mouth, wisps of smoke curling around his weathered face. The camera begins to pull back out over the ocean. Finally, the camera sinks below the waves deeply, fading to dark blue and finally to black."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image to represent the first frame of the video. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://raw.githubusercontent.com/painebenjamin/pointy-seeds/refs/heads/main/captain-start.jpg"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
          "required": false,
          "default": 96,
          "minimum": 96,
          "maximum": 192
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 16,
          "enum": [
            4,
            8,
            16,
            32
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/magi-distilled/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/magi-distilled/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/magi-distilled/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/magi-distilled/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/magi-distilled/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/magi-distilled/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MagiDistilledImageToVideoInput": {
              "title": "MagiImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Close-up shot: the old sea captain stares intently, pipe in mouth, wisps of smoke curling around his weathered face. The camera begins to pull back out over the ocean. Finally, the camera sinks below the waves deeply, fading to dark blue and finally to black."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "image_url": {
                  "examples": [
                    "https://raw.githubusercontent.com/painebenjamin/pointy-seeds/refs/heads/main/captain-start.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the input image to represent the first frame of the video. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_inference_steps": {
                  "enum": [
                    4,
                    8,
                    16,
                    32
                  ],
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 16
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_frames": {
                  "minimum": 96,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 192,
                  "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
                  "default": 96
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "num_frames",
                "seed",
                "resolution",
                "num_inference_steps",
                "enable_safety_checker",
                "aspect_ratio"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MagiDistilledImageToVideoOutput": {
              "title": "MagiImageToVideoResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/3XmM6yIGZEWxwbbDyTkhw_391bee80-b756-425d-b74c-f9083c7eec4f.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/magi-distilled/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MagiDistilledImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi-distilled/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MagiDistilledImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/magi/extend-video",
      "title": "fal-ai/magi/extend-video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/magi/extend-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/magi/extend-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/magi/extend-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            ""
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to represent the beginning of the video. If the input video does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/w4T087gvzG5LMGipMpPCO_pour-2s.mp4"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
          "required": false,
          "default": 96,
          "minimum": 96,
          "maximum": 192
        },
        {
          "name": "start_frame",
          "type": "integer",
          "description": "The frame to begin the generation from, with the remaining frames will be treated as the prefix video. The final video will contain the frames up until this number unchanged, followed by the generated frames. The default start frame is 32 frames before the end of the video, which gives optimal results.",
          "required": false,
          "default": 1,
          "minimum": 0
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 16,
          "enum": [
            4,
            8,
            16,
            32,
            64
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/magi/extend-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/magi/extend-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/magi/extend-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/magi/extend-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/magi/extend-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/magi/extend-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MagiExtendVideoInput": {
              "title": "MagiVideoExtensionRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    ""
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/w4T087gvzG5LMGipMpPCO_pour-2s.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video to represent the beginning of the video. If the input video does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "start_frame": {
                  "minimum": 0,
                  "title": "Start Frame",
                  "type": "integer",
                  "description": "The frame to begin the generation from, with the remaining frames will be treated as the prefix video. The final video will contain the frames up until this number unchanged, followed by the generated frames. The default start frame is 32 frames before the end of the video, which gives optimal results."
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_inference_steps": {
                  "enum": [
                    4,
                    8,
                    16,
                    32,
                    64
                  ],
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 16
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_frames": {
                  "minimum": 96,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 192,
                  "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
                  "default": 96
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "video_url",
                "num_frames",
                "start_frame",
                "seed",
                "resolution",
                "num_inference_steps",
                "enable_safety_checker",
                "aspect_ratio"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "MagiExtendVideoOutput": {
              "title": "MagiVideoExtensionResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/yVrs367uHeCqrBGY-VICa_3b064421-fe96-4ccb-a3ea-4f37b54e682e.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/magi/extend-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi/extend-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi/extend-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MagiExtendVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi/extend-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MagiExtendVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/magi/image-to-video",
      "title": "fal-ai/magi/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/magi/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/magi/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/magi/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A crisp, wintery mountain landscape unfolds as a snowboarder, equipped with a selfie pole, gracefully navigates a snow-covered slope, the camera perspective offering an exhilarating attached-third-person view of the descent;  the vibrant, snowy scenery sweeps past, punctuated by moments of controlled spins and effortless glides, creating a dynamic visual rhythm that complements the exhilarating pace of the ride;  as the snowboarder carves through pristine powder, the camera captures fleeting moments of breathtaking views—towering pines dusted with snow, sunlit peaks piercing a cerulean sky—a symphony of nature’s grandeur displayed for the viewer to share;  a sense of freedom and exhilaration permeates the scene, punctuated by the subtle whoosh of wind and the satisfying crunch of snow, culminating in a breathtaking panorama as the snowboarder reaches the bottom, leaving the viewer with a lingering sense of wonder and the desire to experience the thrill firsthand."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image to represent the first frame of the video. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/kangaroo/sGqTf5scZcC5VNfOLbxwE_maxresdefault-2740110268.jpg"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
          "required": false,
          "default": 96,
          "minimum": 96,
          "maximum": 192
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 16,
          "enum": [
            4,
            8,
            16,
            32,
            64
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/magi/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/magi/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/magi/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/magi/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/magi/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/magi/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MagiImageToVideoInput": {
              "title": "MagiImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A crisp, wintery mountain landscape unfolds as a snowboarder, equipped with a selfie pole, gracefully navigates a snow-covered slope, the camera perspective offering an exhilarating attached-third-person view of the descent;  the vibrant, snowy scenery sweeps past, punctuated by moments of controlled spins and effortless glides, creating a dynamic visual rhythm that complements the exhilarating pace of the ride;  as the snowboarder carves through pristine powder, the camera captures fleeting moments of breathtaking views—towering pines dusted with snow, sunlit peaks piercing a cerulean sky—a symphony of nature’s grandeur displayed for the viewer to share;  a sense of freedom and exhilaration permeates the scene, punctuated by the subtle whoosh of wind and the satisfying crunch of snow, culminating in a breathtaking panorama as the snowboarder reaches the bottom, leaving the viewer with a lingering sense of wonder and the desire to experience the thrill firsthand."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/kangaroo/sGqTf5scZcC5VNfOLbxwE_maxresdefault-2740110268.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the input image to represent the first frame of the video. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": true
                },
                "num_inference_steps": {
                  "enum": [
                    4,
                    8,
                    16,
                    32,
                    64
                  ],
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 16
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_frames": {
                  "minimum": 96,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 192,
                  "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit.",
                  "default": 96
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "num_frames",
                "seed",
                "resolution",
                "num_inference_steps",
                "enable_safety_checker",
                "aspect_ratio"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MagiImageToVideoOutput": {
              "title": "MagiImageToVideoResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/penguin/sSJdxpy9oEBqZpGIh3SPq_3381fe86-9bab-4ce4-9c3a-5db66984618a.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/magi/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MagiImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/magi/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MagiImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/hailuo-02-fast/image-to-video",
      "title": "fal-ai/minimax/hailuo-02-fast/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/hailuo-02-fast/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/f_EeVaEkzmhhcRXL1Xruj_8fd7a6cbb43b460b8a6ff550a153f4af.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02-fast/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02-fast/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Extremely realistic movement An old samurai is breaking a stone in half"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image Url",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/tiger/U9HN_tm5-3Ls52SbD6CrW_image.webp"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
          "required": false,
          "default": "6",
          "enum": [
            "6",
            "10"
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/hailuo-02-fast/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/hailuo-02-fast/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/hailuo-02-fast/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/hailuo-02-fast/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/f_EeVaEkzmhhcRXL1Xruj_8fd7a6cbb43b460b8a6ff550a153f4af.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02-fast/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02-fast/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxHailuo02FastImageToVideoInput": {
              "title": "FastImageToVideoHailuo02Input",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "duration": {
                  "enum": [
                    "6",
                    "10"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
                  "default": "6"
                },
                "prompt": {
                  "examples": [
                    "Extremely realistic movement An old samurai is breaking a stone in half"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/tiger/U9HN_tm5-3Ls52SbD6CrW_image.webp"
                  ],
                  "title": "Image Url",
                  "type": "string"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "prompt_optimizer"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MinimaxHailuo02FastImageToVideoOutput": {
              "title": "ImageToVideoHailuo02FastOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/monkey/n3-YfNqnyYJPYlrJk-5rS_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/hailuo-02-fast/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02-fast/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02-fast/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxHailuo02FastImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02-fast/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxHailuo02FastImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/hailuo-02/pro/image-to-video",
      "title": "fal-ai/minimax/hailuo-02/pro/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/hailuo-02/pro/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/pro/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/pro/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Man walked into winter cave with polar bear"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image Url",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/minimax/1749891352437225630-389852416840474630_1749891352.png"
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "Optional URL of the image to use as the last frame of the video",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/hailuo-02/pro/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/hailuo-02/pro/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/hailuo-02/pro/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/hailuo-02/pro/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/pro/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/pro/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxHailuo02ProImageToVideoInput": {
              "title": "ProImageToVideoHailuo02Input",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "Man walked into winter cave with polar bear"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000
                },
                "end_image_url": {
                  "title": "End Image Url",
                  "type": "string",
                  "description": "Optional URL of the image to use as the last frame of the video"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/minimax/1749891352437225630-389852416840474630_1749891352.png"
                  ],
                  "title": "Image Url",
                  "type": "string"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "prompt_optimizer",
                "end_image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MinimaxHailuo02ProImageToVideoOutput": {
              "title": "ImageToVideoHailuo02Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/monkey/xF9OsLwGjjNURyAxD8RM1_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/hailuo-02/pro/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/pro/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/pro/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxHailuo02ProImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/pro/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxHailuo02ProImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/hailuo-02/pro/text-to-video",
      "title": "fal-ai/minimax/hailuo-02/pro/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/hailuo-02/pro/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/pro/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/pro/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A Galactic Smuggler is a rogue figure with a cybernetic arm and a well-worn coat that hints at many dangerous escapades across the galaxy. Their ship is filled with rare and exotic treasures from distant planets, concealed in hidden compartments, showing their expertise in illicit trade. Their belt is adorned with energy-based weapons, ready to be drawn at any moment to protect themselves or escape from tight situations. This character thrives in the shadows of space, navigating between the law and chaos with stealth and wit, always seeking the next big score while evading bounty hunters and law enforcement. The rogue's ship, rugged yet efficient, serves as both a home and a tool for their dangerous lifestyle. The treasures they collect reflect the diverse and intriguing worlds they've encountered—alien artifacts, rare minerals, and artifacts of unknown origin. Their reputation precedes them, with whispers of their dealings and the deadly encounters that often follow. A master of negotiation and deception, the Galactic Smuggler navigates the cosmos with an eye on the horizon, always one step ahead of those who pursue them."
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/hailuo-02/pro/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/hailuo-02/pro/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/hailuo-02/pro/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/hailuo-02/pro/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/pro/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/pro/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxHailuo02ProTextToVideoInput": {
              "title": "ProTextToVideoHailuo02Input",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "A Galactic Smuggler is a rogue figure with a cybernetic arm and a well-worn coat that hints at many dangerous escapades across the galaxy. Their ship is filled with rare and exotic treasures from distant planets, concealed in hidden compartments, showing their expertise in illicit trade. Their belt is adorned with energy-based weapons, ready to be drawn at any moment to protect themselves or escape from tight situations. This character thrives in the shadows of space, navigating between the law and chaos with stealth and wit, always seeking the next big score while evading bounty hunters and law enforcement. The rogue's ship, rugged yet efficient, serves as both a home and a tool for their dangerous lifestyle. The treasures they collect reflect the diverse and intriguing worlds they've encountered—alien artifacts, rare minerals, and artifacts of unknown origin. Their reputation precedes them, with whispers of their dealings and the deadly encounters that often follow. A master of negotiation and deception, the Galactic Smuggler navigates the cosmos with an eye on the horizon, always one step ahead of those who pursue them."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000,
                  "minLength": 1
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "prompt_optimizer"
              ],
              "required": [
                "prompt"
              ]
            },
            "MinimaxHailuo02ProTextToVideoOutput": {
              "title": "TextToVideoHailuo02Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/kangaroo/_qEOfY3iKHsc86kqHUUh2_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/hailuo-02/pro/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/pro/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/pro/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxHailuo02ProTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/pro/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxHailuo02ProTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/hailuo-02/standard/image-to-video",
      "title": "fal-ai/minimax/hailuo-02/standard/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/hailuo-02/standard/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/standard/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/standard/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Man walked into winter cave with polar bear"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Image Url",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/minimax/1749891352437225630-389852416840474630_1749891352.png"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
          "required": false,
          "default": "6",
          "enum": [
            "6",
            "10"
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video.",
          "required": false,
          "default": "768P",
          "enum": [
            "512P",
            "768P"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "Optional URL of the image to use as the last frame of the video",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/hailuo-02/standard/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/hailuo-02/standard/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/hailuo-02/standard/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/hailuo-02/standard/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/standard/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/standard/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxHailuo02StandardImageToVideoInput": {
              "title": "StandardImageToVideoHailuo02Input",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "duration": {
                  "enum": [
                    "6",
                    "10"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
                  "default": "6"
                },
                "prompt": {
                  "examples": [
                    "Man walked into winter cave with polar bear"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000
                },
                "resolution": {
                  "enum": [
                    "512P",
                    "768P"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video.",
                  "default": "768P"
                },
                "end_image_url": {
                  "title": "End Image Url",
                  "type": "string",
                  "description": "Optional URL of the image to use as the last frame of the video"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/minimax/1749891352437225630-389852416840474630_1749891352.png"
                  ],
                  "title": "Image Url",
                  "type": "string"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "prompt_optimizer",
                "resolution",
                "end_image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MinimaxHailuo02StandardImageToVideoOutput": {
              "title": "ImageToVideoHailuo02Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/monkey/xF9OsLwGjjNURyAxD8RM1_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/hailuo-02/standard/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/standard/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/standard/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxHailuo02StandardImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/standard/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxHailuo02StandardImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/hailuo-02/standard/text-to-video",
      "title": "fal-ai/minimax/hailuo-02/standard/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/hailuo-02/standard/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/standard/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/standard/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A Galactic Smuggler is a rogue figure with a cybernetic arm and a well-worn coat that hints at many dangerous escapades across the galaxy. Their ship is filled with rare and exotic treasures from distant planets, concealed in hidden compartments, showing their expertise in illicit trade. Their belt is adorned with energy-based weapons, ready to be drawn at any moment to protect themselves or escape from tight situations. This character thrives in the shadows of space, navigating between the law and chaos with stealth and wit, always seeking the next big score while evading bounty hunters and law enforcement. The rogue's ship, rugged yet efficient, serves as both a home and a tool for their dangerous lifestyle. The treasures they collect reflect the diverse and intriguing worlds they've encountered—alien artifacts, rare minerals, and artifacts of unknown origin. Their reputation precedes them, with whispers of their dealings and the deadly encounters that often follow. A master of negotiation and deception, the Galactic Smuggler navigates the cosmos with an eye on the horizon, always one step ahead of those who pursue them."
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
          "required": false,
          "default": "6",
          "enum": [
            "6",
            "10"
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/hailuo-02/standard/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/hailuo-02/standard/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/hailuo-02/standard/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/hailuo-02/standard/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/standard/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/hailuo-02/standard/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxHailuo02StandardTextToVideoInput": {
              "title": "StandardTextToVideoHailuo02Input",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "duration": {
                  "enum": [
                    "6",
                    "10"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
                  "default": "6"
                },
                "prompt": {
                  "examples": [
                    "A Galactic Smuggler is a rogue figure with a cybernetic arm and a well-worn coat that hints at many dangerous escapades across the galaxy. Their ship is filled with rare and exotic treasures from distant planets, concealed in hidden compartments, showing their expertise in illicit trade. Their belt is adorned with energy-based weapons, ready to be drawn at any moment to protect themselves or escape from tight situations. This character thrives in the shadows of space, navigating between the law and chaos with stealth and wit, always seeking the next big score while evading bounty hunters and law enforcement. The rogue's ship, rugged yet efficient, serves as both a home and a tool for their dangerous lifestyle. The treasures they collect reflect the diverse and intriguing worlds they've encountered—alien artifacts, rare minerals, and artifacts of unknown origin. Their reputation precedes them, with whispers of their dealings and the deadly encounters that often follow. A master of negotiation and deception, the Galactic Smuggler navigates the cosmos with an eye on the horizon, always one step ahead of those who pursue them."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000,
                  "minLength": 1
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "duration",
                "prompt_optimizer"
              ],
              "required": [
                "prompt"
              ]
            },
            "MinimaxHailuo02StandardTextToVideoOutput": {
              "title": "TextToVideoHailuo02Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/kangaroo/_qEOfY3iKHsc86kqHUUh2_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/hailuo-02/standard/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/standard/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/standard/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxHailuo02StandardTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/hailuo-02/standard/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxHailuo02StandardTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/video-01",
      "title": "fal-ai/minimax/video-01",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/video-01",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/red_clouds.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/video-01",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/video-01",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/video-01 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/video-01",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/red_clouds.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxVideo01Input": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "prompt_optimizer"
              ],
              "required": [
                "prompt"
              ]
            },
            "MinimaxVideo01Output": {
              "title": "VideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/monkey/vNZqQV_WgC9MhoidClLyw_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/video-01/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxVideo01Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxVideo01Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/video-01-director",
      "title": "fal-ai/minimax/video-01-director",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/video-01-director",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/red_clouds.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-director",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-director/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation. Camera movement instructions can be added using square brackets (e.g. [Pan left] or [Zoom in]). You can use up to 3 combined movements per prompt. Supported movements: Truck left/right, Pan left/right, Push in/Pull out, Pedestal up/down, Tilt up/down, Zoom in/out, Shake, Tracking shot, Static shot. For example: [Truck left, Pan right, Zoom in]. For a more detailed guide, refer https://sixth-switch-2ac.notion.site/T2V-01-Director-Model-Tutorial-with-camera-movement-1886c20a98eb80f395b8e05291ad8645",
          "required": true,
          "default": "",
          "examples": [
            "[Push in]Close up of a tense woman looks to the left, startled by a sound, in a darkened kitchen, Pots and pans hang ominously, the window in the kitchen is open and the wind softly blows the pans and creates an ominous mood. [Shake]the woman's shock turns to fear. Black-and-white film noir shot dimly lit, 1950s-style, with dramatic, high-contrast shadows. The overall atmosphere is reminiscent of Alfred Hitchcock's suspenseful storytelling, evoking a looming sense of dread with stark chiaroscuro lighting and a slight film-grain texture."
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/video-01-director",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/video-01-director",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/video-01-director queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/video-01-director",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/red_clouds.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-director",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-director/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxVideo01DirectorInput": {
              "title": "TextToVideoDirectorRequest",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "[Push in]Close up of a tense woman looks to the left, startled by a sound, in a darkened kitchen, Pots and pans hang ominously, the window in the kitchen is open and the wind softly blows the pans and creates an ominous mood. [Shake]the woman's shock turns to fear. Black-and-white film noir shot dimly lit, 1950s-style, with dramatic, high-contrast shadows. The overall atmosphere is reminiscent of Alfred Hitchcock's suspenseful storytelling, evoking a looming sense of dread with stark chiaroscuro lighting and a slight film-grain texture."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000,
                  "description": "Text prompt for video generation. Camera movement instructions can be added using square brackets (e.g. [Pan left] or [Zoom in]). You can use up to 3 combined movements per prompt. Supported movements: Truck left/right, Pan left/right, Push in/Pull out, Pedestal up/down, Tilt up/down, Zoom in/out, Shake, Tracking shot, Static shot. For example: [Truck left, Pan right, Zoom in]. For a more detailed guide, refer https://sixth-switch-2ac.notion.site/T2V-01-Director-Model-Tutorial-with-camera-movement-1886c20a98eb80f395b8e05291ad8645"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "prompt_optimizer"
              ],
              "required": [
                "prompt"
              ]
            },
            "MinimaxVideo01DirectorOutput": {
              "title": "T2VDirectorOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/panda/4Et1qL4cbedh-OACEw7OF_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/video-01-director/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-director/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-director": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxVideo01DirectorInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-director/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxVideo01DirectorOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/video-01-director/image-to-video",
      "title": "fal-ai/minimax/video-01-director/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/video-01-director/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/red_clouds.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-director/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-director/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation. Camera movement instructions can be added using square brackets (e.g. [Pan left] or [Zoom in]). You can use up to 3 combined movements per prompt. Supported movements: Truck left/right, Pan left/right, Push in/Pull out, Pedestal up/down, Tilt up/down, Zoom in/out, Shake, Tracking shot, Static shot. For example: [Truck left, Pan right, Zoom in]. For a more detailed guide, refer https://sixth-switch-2ac.notion.site/T2V-01-Director-Model-Tutorial-with-camera-movement-1886c20a98eb80f395b8e05291ad8645",
          "required": true,
          "default": "",
          "examples": [
            "[Push in, Follow]A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse.[Pan left] The street opens into a small plaza where street vendors sell steaming food under colorful awnings."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/video-01-director/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/video-01-director/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/video-01-director/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/video-01-director/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/red_clouds.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-director/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-director/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxVideo01DirectorImageToVideoInput": {
              "title": "ImageToVideoDirectorRequest",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "[Push in, Follow]A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse.[Pan left] The street opens into a small plaza where street vendors sell steaming food under colorful awnings."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000,
                  "description": "Text prompt for video generation. Camera movement instructions can be added using square brackets (e.g. [Pan left] or [Zoom in]). You can use up to 3 combined movements per prompt. Supported movements: Truck left/right, Pan left/right, Push in/Pull out, Pedestal up/down, Tilt up/down, Zoom in/out, Shake, Tracking shot, Static shot. For example: [Truck left, Pan right, Zoom in]. For a more detailed guide, refer https://sixth-switch-2ac.notion.site/T2V-01-Director-Model-Tutorial-with-camera-movement-1886c20a98eb80f395b8e05291ad8645"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "prompt_optimizer"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MinimaxVideo01DirectorImageToVideoOutput": {
              "title": "I2VDirectorOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/minimax/i2v-01.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/video-01-director/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-director/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-director/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxVideo01DirectorImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-director/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxVideo01DirectorImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/video-01-live",
      "title": "fal-ai/minimax/video-01-live",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/video-01-live",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_016.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-live",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-live/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A rugged middle-aged man with wheat-colored skin and a full beard streaked with gray stands in the harsh sunlight of a desert outpost. His curly hair is windswept, and sweat drips down the bridge of his slightly crooked nose. His faded utility jacket and weathered boots are caked in dust, while his sharp, watchful eyes scan the horizon."
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/video-01-live",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/video-01-live",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/video-01-live queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/video-01-live",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_016.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-live",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-live/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxVideo01LiveInput": {
              "title": "TextToVideoLiveRequest",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "A rugged middle-aged man with wheat-colored skin and a full beard streaked with gray stands in the harsh sunlight of a desert outpost. His curly hair is windswept, and sweat drips down the bridge of his slightly crooked nose. His faded utility jacket and weathered boots are caked in dust, while his sharp, watchful eyes scan the horizon."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "prompt_optimizer"
              ],
              "required": [
                "prompt"
              ]
            },
            "MinimaxVideo01LiveOutput": {
              "title": "T2VLiveOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/monkey/EbJRdZfaJbNiJBUvPta3c_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/video-01-live/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-live/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-live": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxVideo01LiveInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-live/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxVideo01LiveOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/video-01-live/image-to-video",
      "title": "fal-ai/minimax/video-01-live/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/video-01-live/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_016.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-live/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-live/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/video-01-live/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/video-01-live/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/video-01-live/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/video-01-live/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_016.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-live/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-live/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxVideo01LiveImageToVideoInput": {
              "title": "ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "prompt_optimizer"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MinimaxVideo01LiveImageToVideoOutput": {
              "title": "I2VLiveOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/monkey/bkT4T4uLOXr0jDsIMlNd5_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/video-01-live/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-live/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-live/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxVideo01LiveImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-live/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxVideo01LiveImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/video-01-subject-reference",
      "title": "fal-ai/minimax/video-01-subject-reference",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/video-01-subject-reference",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/minimax-video-01-subject-reference.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-subject-reference",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-subject-reference/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
          ]
        },
        {
          "name": "subject_reference_image_url",
          "type": "string",
          "description": "URL of the subject reference image to use for consistent subject appearance",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/tiger/s2xnjhLpjM6L8ISxlDCAw.png"
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/video-01-subject-reference",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/video-01-subject-reference",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/video-01-subject-reference queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/video-01-subject-reference",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/minimax-video-01-subject-reference.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01-subject-reference",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01-subject-reference/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxVideo01SubjectReferenceInput": {
              "title": "SubjectReferenceRequest",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000
                },
                "subject_reference_image_url": {
                  "examples": [
                    "https://fal.media/files/tiger/s2xnjhLpjM6L8ISxlDCAw.png"
                  ],
                  "title": "Subject Reference Image Url",
                  "type": "string",
                  "description": "URL of the subject reference image to use for consistent subject appearance"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "subject_reference_image_url",
                "prompt_optimizer"
              ],
              "required": [
                "prompt",
                "subject_reference_image_url"
              ]
            },
            "MinimaxVideo01SubjectReferenceOutput": {
              "title": "SubjectReferenceOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/rabbit/pONKqOnY7z6GlF6oDESvR_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/video-01-subject-reference/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-subject-reference/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-subject-reference": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxVideo01SubjectReferenceInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01-subject-reference/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxVideo01SubjectReferenceOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/minimax/video-01/image-to-video",
      "title": "fal-ai/minimax/video-01/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/minimax/video-01/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/minimax-video-01-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
          ]
        },
        {
          "name": "prompt_optimizer",
          "type": "boolean",
          "description": "Whether to use the model's prompt optimizer",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/minimax/video-01/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/minimax/video-01/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/minimax/video-01/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/minimax/video-01/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/minimax-video-01-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/minimax/video-01/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/minimax/video-01/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MinimaxVideo01ImageToVideoInput": {
              "title": "ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt_optimizer": {
                  "title": "Prompt Optimizer",
                  "type": "boolean",
                  "description": "Whether to use the model's prompt optimizer",
                  "default": true
                },
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 2000
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "prompt_optimizer"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MinimaxVideo01ImageToVideoOutput": {
              "title": "VideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/monkey/vNZqQV_WgC9MhoidClLyw_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/minimax/video-01/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MinimaxVideo01ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/minimax/video-01/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MinimaxVideo01ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/mmaudio-v2",
      "title": "fal-ai/mmaudio-v2",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/mmaudio-v2",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/mmaudio-v2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/mmaudio-v2",
      "documentationUrl": "https://fal.ai/models/fal-ai/mmaudio-v2/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to generate the audio for.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/video_models/mmaudio_input.mp4"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the audio for.",
          "required": true,
          "default": "",
          "examples": [
            "Indian holy music"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to generate the audio for.",
          "required": false,
          "default": ""
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null,
          "minimum": 0,
          "maximum": 65535
        },
        {
          "name": "num_steps",
          "type": "integer",
          "description": "The number of steps to generate the audio for.",
          "required": false,
          "default": 25,
          "minimum": 4,
          "maximum": 50
        },
        {
          "name": "duration",
          "type": "number",
          "description": "The duration of the audio to generate.",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 30
        },
        {
          "name": "cfg_strength",
          "type": "number",
          "description": "The strength of Classifier Free Guidance.",
          "required": false,
          "default": 4.5,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "mask_away_clip",
          "type": "boolean",
          "description": "Whether to mask away the clip.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with the lip sync."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/mmaudio-v2",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/mmaudio-v2",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/mmaudio-v2 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/mmaudio-v2",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/mmaudio-v2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/mmaudio-v2",
            "documentationUrl": "https://fal.ai/models/fal-ai/mmaudio-v2/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MmaudioV2Input": {
              "title": "BaseInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Indian holy music"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the audio for."
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/video_models/mmaudio_input.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to generate the audio for."
                },
                "num_steps": {
                  "minimum": 4,
                  "title": "Num Steps",
                  "type": "integer",
                  "maximum": 50,
                  "description": "The number of steps to generate the audio for.",
                  "default": 25
                },
                "duration": {
                  "minimum": 1,
                  "title": "Duration",
                  "type": "number",
                  "maximum": 30,
                  "description": "The duration of the audio to generate.",
                  "default": 8
                },
                "cfg_strength": {
                  "minimum": 0,
                  "title": "Cfg Strength",
                  "type": "number",
                  "maximum": 20,
                  "description": "The strength of Classifier Free Guidance.",
                  "default": 4.5
                },
                "seed": {
                  "minimum": 0,
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator",
                  "maximum": 65535
                },
                "mask_away_clip": {
                  "title": "Mask Away Clip",
                  "type": "boolean",
                  "description": "Whether to mask away the clip.",
                  "default": false
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to generate the audio for.",
                  "default": ""
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "prompt",
                "negative_prompt",
                "seed",
                "num_steps",
                "duration",
                "cfg_strength",
                "mask_away_clip"
              ],
              "required": [
                "video_url",
                "prompt"
              ]
            },
            "MmaudioV2Output": {
              "title": "Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 1001342,
                      "file_name": "mmaudio_input.mp4",
                      "content_type": "application/octet-stream",
                      "url": "https://storage.googleapis.com/falserverless/model_tests/video_models/mmaudio_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video with the lip sync.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/mmaudio-v2/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/mmaudio-v2/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/mmaudio-v2": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MmaudioV2Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/mmaudio-v2/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MmaudioV2Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/mochi-v1",
      "title": "fal-ai/mochi-v1",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/mochi-v1",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/mochi-v1.webp?v=1",
      "playgroundUrl": "https://fal.ai/models/fal-ai/mochi-v1",
      "documentationUrl": "https://fal.ai/models/fal-ai/mochi-v1/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate a video from.",
          "required": true,
          "default": "",
          "examples": [
            "A dog running in a field."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt for the video.",
          "required": false,
          "default": "",
          "examples": [
            "Blurry, shaky footage"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for generating the video.",
          "required": false,
          "default": null
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/mochi-v1",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/mochi-v1",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/mochi-v1 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/mochi-v1",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/mochi-v1.webp?v=1",
            "playgroundUrl": "https://fal.ai/models/fal-ai/mochi-v1",
            "documentationUrl": "https://fal.ai/models/fal-ai/mochi-v1/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MochiV1Input": {
              "title": "MochiT2VInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A dog running in a field."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate a video from."
                },
                "enable_prompt_expansion": {
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": true
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed to use for generating the video."
                },
                "negative_prompt": {
                  "examples": [
                    "Blurry, shaky footage"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt for the video.",
                  "default": ""
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "seed",
                "enable_prompt_expansion"
              ],
              "required": [
                "prompt"
              ]
            },
            "MochiV1Output": {
              "title": "MochiT2VOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/zebra/GScPi-7ma3Fn8r1O1on4z_output_1729631871.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/mochi-v1/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/mochi-v1/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/mochi-v1": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MochiV1Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/mochi-v1/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MochiV1Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/musetalk",
      "title": "fal-ai/musetalk",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/musetalk",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/wgGNp3M_u50xIisUZ_Wm8.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/musetalk",
      "documentationUrl": "https://fal.ai/models/fal-ai/musetalk/api",
      "inputs": [
        {
          "name": "source_video_url",
          "type": "string",
          "description": "URL of the source video",
          "required": true,
          "default": "",
          "examples": [
            "https://raw.githubusercontent.com/TMElyralab/MuseTalk/main/data/video/sun.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "URL of the audio",
          "required": true,
          "default": "",
          "examples": [
            "https://raw.githubusercontent.com/TMElyralab/MuseTalk/main/data/audio/sun.wav"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/musetalk",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/musetalk",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/musetalk queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/musetalk",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/wgGNp3M_u50xIisUZ_Wm8.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/musetalk",
            "documentationUrl": "https://fal.ai/models/fal-ai/musetalk/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MusetalkInput": {
              "title": "MuseTalkInput",
              "type": "object",
              "properties": {
                "source_video_url": {
                  "examples": [
                    "https://raw.githubusercontent.com/TMElyralab/MuseTalk/main/data/video/sun.mp4"
                  ],
                  "title": "Source Video Url",
                  "type": "string",
                  "description": "URL of the source video"
                },
                "audio_url": {
                  "examples": [
                    "https://raw.githubusercontent.com/TMElyralab/MuseTalk/main/data/audio/sun.wav"
                  ],
                  "title": "Audio Url",
                  "type": "string",
                  "description": "URL of the audio"
                }
              },
              "x-fal-order-properties": [
                "source_video_url",
                "audio_url"
              ],
              "required": [
                "source_video_url",
                "audio_url"
              ]
            },
            "MusetalkOutput": {
              "title": "MuseTalkOutput",
              "type": "object",
              "properties": {
                "video": {
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/musetalk/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/musetalk/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/musetalk": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MusetalkInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/musetalk/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MusetalkOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pika/v1.5/pikaffects",
      "title": "fal-ai/pika/v1.5/pikaffects",
      "description": "Transform static images into dynamic videos with AI using Pika Labs technology for creative video synthesis.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pika/v1.5/pikaffects",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v1.5/pikaffects",
      "documentationUrl": "https://fal.ai/models/fal-ai/pika/v1.5/pikaffects/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/zebra/2Ro7MtV3BGarwQXPtdK6B_148325d4459c4e34917e8eb5c25877d4.jpg"
          ]
        },
        {
          "name": "pikaffect",
          "type": "string",
          "description": "The Pikaffect to apply",
          "required": true,
          "default": "",
          "enum": [
            "Cake-ify",
            "Crumble",
            "Crush",
            "Decapitate",
            "Deflate",
            "Dissolve",
            "Explode",
            "Eye-pop",
            "Inflate",
            "Levitate",
            "Melt",
            "Peel",
            "Poke",
            "Squish",
            "Ta-da",
            "Tear"
          ],
          "examples": [
            "Crush"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt to guide the effect",
          "required": false,
          "default": "",
          "examples": [
            "A duck getting crushed"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to guide the model",
          "required": false,
          "default": ""
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with applied effect"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pika/v1.5/pikaffects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pika/v1.5/pikaffects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pika/v1.5/pikaffects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pika/v1.5/pikaffects",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v1.5/pikaffects",
            "documentationUrl": "https://fal.ai/models/fal-ai/pika/v1.5/pikaffects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PikaV15PikaffectsInput": {
              "title": "PikaffectsRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A duck getting crushed"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "Text prompt to guide the effect"
                },
                "pikaffect": {
                  "enum": [
                    "Cake-ify",
                    "Crumble",
                    "Crush",
                    "Decapitate",
                    "Deflate",
                    "Dissolve",
                    "Explode",
                    "Eye-pop",
                    "Inflate",
                    "Levitate",
                    "Melt",
                    "Peel",
                    "Poke",
                    "Squish",
                    "Ta-da",
                    "Tear"
                  ],
                  "title": "Pikaffect",
                  "type": "string",
                  "examples": [
                    "Crush"
                  ],
                  "description": "The Pikaffect to apply"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt to guide the model"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/zebra/2Ro7MtV3BGarwQXPtdK6B_148325d4459c4e34917e8eb5c25877d4.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the input image"
                }
              },
              "description": "Request model for Pikaffects endpoint",
              "x-fal-order-properties": [
                "image_url",
                "pikaffect",
                "prompt",
                "negative_prompt",
                "seed"
              ],
              "required": [
                "image_url",
                "pikaffect"
              ]
            },
            "PikaV15PikaffectsOutput": {
              "title": "PikaffectsOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/panda/9_LHZlRfLunxkX1ENiiBM_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video with applied effect",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "description": "Output from Pikaffects generation",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pika/v1.5/pikaffects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v1.5/pikaffects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v1.5/pikaffects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PikaV15PikaffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v1.5/pikaffects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PikaV15PikaffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pika/v2.1/image-to-video",
      "title": "fal-ai/pika/v2.1/image-to-video",
      "description": "Transform static images into dynamic videos with AI using Pika Labs technology for creative video synthesis.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pika/v2.1/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.1/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.1/image-to-video/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/elephant/dJjBQXNHRbGJn4aUv4-g9_hearth.jpg"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A pink heart exploding."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the model",
          "required": false,
          "default": ""
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "integer",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": 5
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pika/v2.1/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pika/v2.1/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pika/v2.1/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pika/v2.1/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.1/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.1/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PikaV21ImageToVideoInput": {
              "title": "ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A pink heart exploding."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "title": "Duration",
                  "type": "integer",
                  "description": "The duration of the generated video in seconds",
                  "default": 5
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the model",
                  "default": ""
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/elephant/dJjBQXNHRbGJn4aUv4-g9_hearth.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                }
              },
              "description": "Base request for image-to-video generation",
              "x-fal-order-properties": [
                "image_url",
                "prompt",
                "seed",
                "negative_prompt",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PikaV21ImageToVideoOutput": {
              "title": "ImageToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/nQRJbbJ_p_a9zCnyJaTbg_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "description": "Output from image-to-video generation",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pika/v2.1/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.1/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.1/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PikaV21ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.1/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PikaV21ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pika/v2.1/text-to-video",
      "title": "fal-ai/pika/v2.1/text-to-video",
      "description": "Generate high-quality videos from text descriptions using Pika Labs technology for creative video synthesis.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pika/v2.1/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.1/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.1/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A young woman in a pale blue corset and denim, her vibrant blue bob framed against a dusky desert landscape, walks slowly, her gaze unwavering and enigmatic as the camera remains fixed on her deliberate pace.  The warm glow of a stucco house contrasts with the cool desert air, hinting at both refuge and isolation, while a blurred figure retreating inside adds a layer of unspoken narrative to her solitary journey."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the model",
          "required": false,
          "default": ""
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1",
            "4:5",
            "5:4",
            "3:2",
            "2:3"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "integer",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": 5
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pika/v2.1/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pika/v2.1/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pika/v2.1/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pika/v2.1/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.1/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.1/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PikaV21TextToVideoInput": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A young woman in a pale blue corset and denim, her vibrant blue bob framed against a dusky desert landscape, walks slowly, her gaze unwavering and enigmatic as the camera remains fixed on her deliberate pace.  The warm glow of a stucco house contrasts with the cool desert air, hinting at both refuge and isolation, while a blurred figure retreating inside adds a layer of unspoken narrative to her solitary journey."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "title": "Duration",
                  "type": "integer",
                  "description": "The duration of the generated video in seconds",
                  "default": 5
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1",
                    "4:5",
                    "5:4",
                    "3:2",
                    "2:3"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the model",
                  "default": ""
                }
              },
              "description": "Base request for text-to-video generation",
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "negative_prompt",
                "aspect_ratio",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt"
              ]
            },
            "PikaV21TextToVideoOutput": {
              "title": "TextToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/panda/eLhWXM2p3aJzXg7t_0F0D_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "description": "Output from text-to-video generation",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pika/v2.1/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.1/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.1/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PikaV21TextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.1/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PikaV21TextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pika/v2.2/image-to-video",
      "title": "fal-ai/pika/v2.2/image-to-video",
      "description": "Transform static images into dynamic videos with AI using Pika Labs technology for creative video synthesis.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pika/v2.2/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.2/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.2/image-to-video/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/pika/pika%202.2/pika_input.png"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "a woman looking into camera slowly smiling"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the model",
          "required": false,
          "default": ""
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "integer",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": 5
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pika/v2.2/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pika/v2.2/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pika/v2.2/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pika/v2.2/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.2/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.2/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PikaV22ImageToVideoInput": {
              "title": "Pika22ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "a woman looking into camera slowly smiling"
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "title": "Duration",
                  "type": "integer",
                  "description": "The duration of the generated video in seconds",
                  "default": 5
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the model",
                  "default": ""
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/pika/pika%202.2/pika_input.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                }
              },
              "description": "Request model for Pika 2.2 image-to-video generation",
              "x-fal-order-properties": [
                "image_url",
                "prompt",
                "seed",
                "negative_prompt",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PikaV22ImageToVideoOutput": {
              "title": "Pika22ImageToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/pika/pika%202.2/pika22_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "description": "Output model for Pika 2.2 image-to-video generation",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pika/v2.2/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PikaV22ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PikaV22ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pika/v2.2/pikascenes",
      "title": "fal-ai/pika/v2.2/pikascenes",
      "description": "Transform static images into dynamic videos with AI using Pika Labs technology for creative video synthesis.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pika/v2.2/pikascenes",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.2/pikascenes",
      "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.2/pikascenes/api",
      "inputs": [
        {
          "name": "images",
          "type": "array",
          "description": "List of images to use for video generation",
          "required": true,
          "default": [],
          "examples": [
            [
              {
                "image_url": "https://fal.media/files/panda/dfbC7oH6IASN3LFOfZ9VV.jpeg"
              }
            ]
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "An old man and his duck swimming in the pool."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the model",
          "required": false,
          "default": ""
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1",
            "4:5",
            "5:4",
            "3:2",
            "2:3"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "integer",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": 5
        },
        {
          "name": "ingredients_mode",
          "type": "string",
          "description": "Mode for integrating multiple images",
          "required": false,
          "default": "creative",
          "enum": [
            "creative",
            "precise"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pika/v2.2/pikascenes",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pika/v2.2/pikascenes",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pika/v2.2/pikascenes queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pika/v2.2/pikascenes",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.2/pikascenes",
            "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.2/pikascenes/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PikaV22PikascenesInput": {
              "title": "CollectionToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "An old man and his duck swimming in the pool."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1",
                    "4:5",
                    "5:4",
                    "3:2",
                    "2:3"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "duration": {
                  "title": "Duration",
                  "type": "integer",
                  "description": "The duration of the generated video in seconds",
                  "default": 5
                },
                "ingredients_mode": {
                  "enum": [
                    "creative",
                    "precise"
                  ],
                  "title": "Ingredients Mode",
                  "type": "string",
                  "description": "Mode for integrating multiple images",
                  "default": "creative"
                },
                "images": {
                  "examples": [
                    [
                      {
                        "image_url": "https://fal.media/files/panda/dfbC7oH6IASN3LFOfZ9VV.jpeg"
                      }
                    ]
                  ],
                  "title": "Images",
                  "type": "array",
                  "description": "List of images to use for video generation",
                  "items": {
                    "$ref": "#/components/schemas/PikaImage"
                  }
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the model",
                  "default": ""
                }
              },
              "description": "Base request for collection-to-video generation",
              "x-fal-order-properties": [
                "images",
                "prompt",
                "seed",
                "negative_prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "ingredients_mode"
              ],
              "required": [
                "prompt",
                "images"
              ]
            },
            "PikaV22PikascenesOutput": {
              "title": "CollectionToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/z5PDhXAkkIaiRlXARpOeY_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "description": "Output from collection-to-video generation",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "PikaImage": {
              "title": "PikaImage",
              "type": "object",
              "properties": {
                "image_url": {
                  "examples": [
                    "https://fal.media/files/panda/dfbC7oH6IASN3LFOfZ9VV.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string"
                }
              },
              "description": "Base model for image inputs to Pika API",
              "x-fal-order-properties": [
                "image_url"
              ],
              "required": [
                "image_url"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pika/v2.2/pikascenes/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/pikascenes/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/pikascenes": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PikaV22PikascenesInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/pikascenes/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PikaV22PikascenesOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pika/v2.2/text-to-video",
      "title": "fal-ai/pika/v2.2/text-to-video",
      "description": "Generate high-quality videos from text descriptions using Pika Labs technology for creative video synthesis.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pika/v2.2/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.2/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.2/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Sunlight streams down on a woman with flowing auburn hair as she runs effortlessly along a tree-lined street, her joyous expression reflecting the freedom of the moment; the simple, steady camerawork emphasizes her grace and the beauty of the everyday."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the model",
          "required": false,
          "default": ""
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1",
            "4:5",
            "5:4",
            "3:2",
            "2:3"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "integer",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": 5
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pika/v2.2/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pika/v2.2/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pika/v2.2/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pika/v2.2/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2.2/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2.2/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PikaV22TextToVideoInput": {
              "title": "Pika22TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Sunlight streams down on a woman with flowing auburn hair as she runs effortlessly along a tree-lined street, her joyous expression reflecting the freedom of the moment; the simple, steady camerawork emphasizes her grace and the beauty of the everyday."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "title": "Duration",
                  "type": "integer",
                  "description": "The duration of the generated video in seconds",
                  "default": 5
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1",
                    "4:5",
                    "5:4",
                    "3:2",
                    "2:3"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the model",
                  "default": ""
                }
              },
              "description": "Request model for Pika 2.2 text-to-video generation",
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "negative_prompt",
                "aspect_ratio",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt"
              ]
            },
            "PikaV22TextToVideoOutput": {
              "title": "Pika22TextToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/pika/pika%202.2/text-to-video-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "description": "Output model for Pika 2.2 text-to-video generation",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pika/v2.2/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PikaV22TextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2.2/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PikaV22TextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pika/v2/turbo/image-to-video",
      "title": "fal-ai/pika/v2/turbo/image-to-video",
      "description": "Transform static images into dynamic videos with AI using Pika Labs technology for creative video synthesis.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pika/v2/turbo/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2/turbo/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2/turbo/image-to-video/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/elephant/dJjBQXNHRbGJn4aUv4-g9_hearth.jpg"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A pink heart exploding."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the model",
          "required": false,
          "default": ""
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "integer",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": 5
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pika/v2/turbo/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pika/v2/turbo/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pika/v2/turbo/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pika/v2/turbo/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2/turbo/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2/turbo/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PikaV2TurboImageToVideoInput": {
              "title": "ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A pink heart exploding."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "title": "Duration",
                  "type": "integer",
                  "description": "The duration of the generated video in seconds",
                  "default": 5
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the model",
                  "default": ""
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/elephant/dJjBQXNHRbGJn4aUv4-g9_hearth.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                }
              },
              "description": "Base request for image-to-video generation",
              "x-fal-order-properties": [
                "image_url",
                "prompt",
                "seed",
                "negative_prompt",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PikaV2TurboImageToVideoOutput": {
              "title": "VideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/nQRJbbJ_p_a9zCnyJaTbg_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "description": "Output model for all video generation endpoints",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pika/v2/turbo/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2/turbo/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2/turbo/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PikaV2TurboImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2/turbo/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PikaV2TurboImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pika/v2/turbo/text-to-video",
      "title": "fal-ai/pika/v2/turbo/text-to-video",
      "description": "Generate high-quality videos from text descriptions using Pika Labs technology for creative video synthesis.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pika/v2/turbo/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2/turbo/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2/turbo/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A young woman in a pale blue corset and denim, her vibrant blue bob framed against a dusky desert landscape, walks slowly, her gaze unwavering and enigmatic as the camera remains fixed on her deliberate pace.  The warm glow of a stucco house contrasts with the cool desert air, hinting at both refuge and isolation, while a blurred figure retreating inside adds a layer of unspoken narrative to her solitary journey."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the model",
          "required": false,
          "default": ""
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1",
            "4:5",
            "5:4",
            "3:2",
            "2:3"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "integer",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": 5
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pika/v2/turbo/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pika/v2/turbo/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pika/v2/turbo/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pika/v2/turbo/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/1wavesunset.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pika/v2/turbo/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pika/v2/turbo/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PikaV2TurboTextToVideoInput": {
              "title": "TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A young woman in a pale blue corset and denim, her vibrant blue bob framed against a dusky desert landscape, walks slowly, her gaze unwavering and enigmatic as the camera remains fixed on her deliberate pace.  The warm glow of a stucco house contrasts with the cool desert air, hinting at both refuge and isolation, while a blurred figure retreating inside adds a layer of unspoken narrative to her solitary journey."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "title": "Duration",
                  "type": "integer",
                  "description": "The duration of the generated video in seconds",
                  "default": 5
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1",
                    "4:5",
                    "5:4",
                    "3:2",
                    "2:3"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the model",
                  "default": ""
                }
              },
              "description": "Base request for text-to-video generation",
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "negative_prompt",
                "aspect_ratio",
                "resolution",
                "duration"
              ],
              "required": [
                "prompt"
              ]
            },
            "PikaV2TurboTextToVideoOutput": {
              "title": "VideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/zebra/nQRJbbJ_p_a9zCnyJaTbg_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "description": "Output model for all video generation endpoints",
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pika/v2/turbo/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2/turbo/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2/turbo/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PikaV2TurboTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pika/v2/turbo/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PikaV2TurboTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/extend",
      "title": "fal-ai/pixverse/extend",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/extend",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/extend",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/extend/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to extend",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/rabbit/88-jI3VWXU4Q8kSNrWo3c_output.mp4"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt describing how to extend the video",
          "required": true,
          "default": "",
          "examples": [
            "A kid is talking into camera"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": ""
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the extended video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "day",
            "cyberpunk",
            "comic"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "model",
          "type": "string",
          "description": "The model version to use for generation",
          "required": false,
          "default": "v4.5",
          "enum": [
            "v3.5",
            "v4",
            "v4.5",
            "v5"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The extended video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/extend",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/extend",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/extend queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/extend",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/extend",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/extend/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseExtendInput": {
              "x-fal-order-properties": [
                "video_url",
                "prompt",
                "negative_prompt",
                "style",
                "resolution",
                "duration",
                "model",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A kid is talking into camera"
                  ],
                  "description": "Prompt describing how to extend the video",
                  "type": "string",
                  "title": "Prompt"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "day",
                    "cyberpunk",
                    "comic"
                  ],
                  "description": "The style of the extended video",
                  "type": "string",
                  "title": "Style"
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/rabbit/88-jI3VWXU4Q8kSNrWo3c_output.mp4"
                  ],
                  "description": "URL of the input video to extend",
                  "type": "string",
                  "title": "Video Url"
                },
                "model": {
                  "enum": [
                    "v3.5",
                    "v4",
                    "v4.5",
                    "v5"
                  ],
                  "description": "The model version to use for generation",
                  "type": "string",
                  "title": "Model",
                  "default": "v4.5"
                },
                "seed": {
                  "description": "Random seed for generation",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "ExtendRequest",
              "required": [
                "video_url",
                "prompt"
              ]
            },
            "PixverseExtendOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 1163040,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/rabbit/88-jI3VWXU4Q8kSNrWo3c_output.mp4"
                    }
                  ],
                  "description": "The extended video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "ExtendOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/extend/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/extend/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/extend": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseExtendInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/extend/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseExtendOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/extend/fast",
      "title": "fal-ai/pixverse/extend/fast",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/extend/fast",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/extend/fast",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/extend/fast/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to extend",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/rabbit/88-jI3VWXU4Q8kSNrWo3c_output.mp4"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt describing how to extend the video",
          "required": true,
          "default": "",
          "examples": [
            "A kid is talking into camera"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": ""
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the extended video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "day",
            "cyberpunk",
            "comic"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video. Fast mode doesn't support 1080p",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ]
        },
        {
          "name": "model",
          "type": "string",
          "description": "The model version to use for generation",
          "required": false,
          "default": "v4.5",
          "enum": [
            "v3.5",
            "v4",
            "v4.5",
            "v5"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The extended video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/extend/fast",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/extend/fast",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/extend/fast queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/extend/fast",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/extend/fast",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/extend/fast/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseExtendFastInput": {
              "x-fal-order-properties": [
                "video_url",
                "prompt",
                "negative_prompt",
                "style",
                "resolution",
                "model",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A kid is talking into camera"
                  ],
                  "description": "Prompt describing how to extend the video",
                  "type": "string",
                  "title": "Prompt"
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/rabbit/88-jI3VWXU4Q8kSNrWo3c_output.mp4"
                  ],
                  "description": "URL of the input video to extend",
                  "type": "string",
                  "title": "Video Url"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p"
                  ],
                  "description": "The resolution of the generated video. Fast mode doesn't support 1080p",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "day",
                    "cyberpunk",
                    "comic"
                  ],
                  "description": "The style of the extended video",
                  "type": "string",
                  "title": "Style"
                },
                "model": {
                  "enum": [
                    "v3.5",
                    "v4",
                    "v4.5",
                    "v5"
                  ],
                  "description": "The model version to use for generation",
                  "type": "string",
                  "title": "Model",
                  "default": "v4.5"
                },
                "seed": {
                  "description": "Random seed for generation",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "FastExtendRequest",
              "required": [
                "video_url",
                "prompt"
              ]
            },
            "PixverseExtendFastOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 1163040,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/rabbit/88-jI3VWXU4Q8kSNrWo3c_output.mp4"
                    }
                  ],
                  "description": "The extended video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "ExtendOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/extend/fast/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/extend/fast/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/extend/fast": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseExtendFastInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/extend/fast/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseExtendFastOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/lipsync",
      "title": "fal-ai/pixverse/lipsync",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/lipsync",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/rabbit/dSjrqmujPFztMyFSqTtny_c6457768d98c4537aa1516df53388e79.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/lipsync",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/lipsync/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/penguin/T-ONORYMYLoEOB9lXryA2_IKEy3yAyi1evJGBAkXGZx_output.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "URL of the input audio. If not provided, TTS will be used.",
          "required": false,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/monkey/k4iyN8bJZWwJXMKH-pO9r_speech.mp3"
          ]
        },
        {
          "name": "voice_id",
          "type": "string",
          "description": "Voice to use for TTS when audio_url is not provided",
          "required": false,
          "default": "Auto",
          "enum": [
            "Emily",
            "James",
            "Isabella",
            "Liam",
            "Chloe",
            "Adrian",
            "Harper",
            "Ava",
            "Sophia",
            "Julia",
            "Mason",
            "Jack",
            "Oliver",
            "Ethan",
            "Auto"
          ]
        },
        {
          "name": "text",
          "type": "string",
          "description": "Text content for TTS when audio_url is not provided",
          "required": false,
          "default": "",
          "examples": [
            "Hello, this is a test message."
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/lipsync",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/lipsync",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/lipsync queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/lipsync",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/rabbit/dSjrqmujPFztMyFSqTtny_c6457768d98c4537aa1516df53388e79.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/lipsync",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/lipsync/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseLipsyncInput": {
              "x-fal-order-properties": [
                "video_url",
                "audio_url",
                "voice_id",
                "text"
              ],
              "type": "object",
              "properties": {
                "text": {
                  "examples": [
                    "Hello, this is a test message."
                  ],
                  "description": "Text content for TTS when audio_url is not provided",
                  "type": "string",
                  "title": "Text"
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/penguin/T-ONORYMYLoEOB9lXryA2_IKEy3yAyi1evJGBAkXGZx_output.mp4"
                  ],
                  "description": "URL of the input video",
                  "type": "string",
                  "title": "Video Url"
                },
                "voice_id": {
                  "enum": [
                    "Emily",
                    "James",
                    "Isabella",
                    "Liam",
                    "Chloe",
                    "Adrian",
                    "Harper",
                    "Ava",
                    "Sophia",
                    "Julia",
                    "Mason",
                    "Jack",
                    "Oliver",
                    "Ethan",
                    "Auto"
                  ],
                  "description": "Voice to use for TTS when audio_url is not provided",
                  "type": "string",
                  "title": "Voice Id",
                  "default": "Auto"
                },
                "audio_url": {
                  "examples": [
                    "https://v3.fal.media/files/monkey/k4iyN8bJZWwJXMKH-pO9r_speech.mp3"
                  ],
                  "description": "URL of the input audio. If not provided, TTS will be used.",
                  "type": "string",
                  "title": "Audio Url"
                }
              },
              "title": "LipsyncRequest",
              "required": [
                "video_url"
              ]
            },
            "PixverseLipsyncOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 1732359,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/penguin/hsR_KXBJjuF3IIVYIIDA2_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "LipsyncOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/lipsync/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/lipsync/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/lipsync": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseLipsyncInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/lipsync/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseLipsyncOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/sound-effects",
      "title": "fal-ai/pixverse/sound-effects",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/sound-effects",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/sound-effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/sound-effects/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video to add sound effects to",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/tiger/QfpJmEBkR75KpB6yfNLDM_video.mp4"
          ]
        },
        {
          "name": "original_sound_switch",
          "type": "boolean",
          "description": "Whether to keep the original audio from the video",
          "required": false,
          "default": false
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "Description of the sound effect to generate. If empty, a random sound effect will be generated",
          "required": false,
          "default": "",
          "examples": [
            "sea waves",
            "thunder storm",
            "birds chirping"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The video with added sound effects"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/sound-effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/sound-effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/sound-effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/sound-effects",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/sound-effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/sound-effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseSoundEffectsInput": {
              "x-fal-order-properties": [
                "video_url",
                "original_sound_switch",
                "prompt"
              ],
              "type": "object",
              "properties": {
                "original_sound_switch": {
                  "description": "Whether to keep the original audio from the video",
                  "type": "boolean",
                  "title": "Original Sound Switch",
                  "default": false
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/tiger/QfpJmEBkR75KpB6yfNLDM_video.mp4"
                  ],
                  "description": "URL of the input video to add sound effects to",
                  "type": "string",
                  "title": "Video Url"
                },
                "prompt": {
                  "examples": [
                    "sea waves",
                    "thunder storm",
                    "birds chirping"
                  ],
                  "description": "Description of the sound effect to generate. If empty, a random sound effect will be generated",
                  "type": "string",
                  "title": "Prompt",
                  "default": ""
                }
              },
              "title": "SoundEffectRequest",
              "required": [
                "video_url"
              ]
            },
            "PixverseSoundEffectsOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 1534052,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/kangaroo/bBQr_DUeICo6_Ty_b_Y0I_output.mp4"
                    }
                  ],
                  "description": "The video with added sound effects",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "SoundEffectOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/sound-effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/sound-effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/sound-effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseSoundEffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/sound-effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseSoundEffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v3.5/effects",
      "title": "fal-ai/pixverse/v3.5/effects",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v3.5/effects",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/effects/api",
      "inputs": [
        {
          "name": "effect",
          "type": "string",
          "description": "The effect to apply to the video",
          "required": true,
          "default": "",
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything, Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text",
          "required": false,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/koala/q5ahL3KS7ikt3MvpNUG8l_image%20(72).webp"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video.",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v3.5/effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v3.5/effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v3.5/effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v3.5/effects",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV35EffectsInput": {
              "x-fal-order-properties": [
                "effect",
                "image_url",
                "resolution",
                "duration",
                "negative_prompt"
              ],
              "type": "object",
              "properties": {
                "effect": {
                  "enum": [
                    "Kiss Me AI",
                    "Kiss",
                    "Muscle Surge",
                    "Warmth of Jesus",
                    "Anything, Robot",
                    "The Tiger Touch",
                    "Hug",
                    "Holy Wings",
                    "Hulk",
                    "Venom",
                    "Microwave",
                    "Zombie Mode",
                    "Squid Game",
                    "Baby Face",
                    "Black Myth: Wukong",
                    "Long Hair Magic",
                    "Leggy Run",
                    "Fin-tastic Mermaid",
                    "Punch Face",
                    "Creepy Devil Smile",
                    "Thunder God",
                    "Eye Zoom Challenge",
                    "Who's Arrested?",
                    "Baby Arrived",
                    "Werewolf Rage",
                    "Bald Swipe",
                    "BOOM DROP",
                    "Huge Cutie",
                    "Liquid Metal",
                    "Sharksnap!",
                    "Dust Me Away"
                  ],
                  "description": "The effect to apply to the video",
                  "type": "string",
                  "title": "Effect"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video.",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "negative_prompt": {
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/koala/q5ahL3KS7ikt3MvpNUG8l_image%20(72).webp"
                  ],
                  "description": "Optional URL of the image to use as the first frame. If not provided, generates from text",
                  "type": "string",
                  "title": "Image Url"
                }
              },
              "title": "EffectInput",
              "required": [
                "effect"
              ]
            },
            "PixverseV35EffectsOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 3232402,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/koala/awGY1lJd7lVsqQeSqjWqn_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "EffectOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v3.5/effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV35EffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV35EffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v3.5/image-to-video",
      "title": "fal-ai/pixverse/v3.5/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v3.5/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v3.5/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v3.5/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v3.5/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v3.5/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV35ImageToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed",
                "image_url"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "Image Url"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "ImageToVideoRequest",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PixverseV35ImageToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 4060052,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/tiger/8V9H8RLyFiWjmJDOxGbcG_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "I2VOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v3.5/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV35ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV35ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v3.5/image-to-video/fast",
      "title": "fal-ai/pixverse/v3.5/image-to-video/fast",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v3.5/image-to-video/fast",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/image-to-video/fast",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/image-to-video/fast/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v3.5/image-to-video/fast",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v3.5/image-to-video/fast",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v3.5/image-to-video/fast queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v3.5/image-to-video/fast",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/image-to-video/fast",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/image-to-video/fast/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV35ImageToVideoFastInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "negative_prompt",
                "style",
                "seed",
                "image_url"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "Image Url"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "FastImageToVideoRequest",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PixverseV35ImageToVideoFastOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 4060052,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/tiger/8V9H8RLyFiWjmJDOxGbcG_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "I2VOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v3.5/image-to-video/fast/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/image-to-video/fast/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/image-to-video/fast": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV35ImageToVideoFastInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/image-to-video/fast/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV35ImageToVideoFastOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v3.5/text-to-video",
      "title": "fal-ai/pixverse/v3.5/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v3.5/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v3.5/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v3.5/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v3.5/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v3.5/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV35TextToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "TextToVideoRequest",
              "required": [
                "prompt"
              ]
            },
            "PixverseV35TextToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 2995630,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/zebra/11UahivZ3XZ1tRlcEcgPq_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "VideoOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v3.5/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV35TextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV35TextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v3.5/text-to-video/fast",
      "title": "fal-ai/pixverse/v3.5/text-to-video/fast",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v3.5/text-to-video/fast",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/text-to-video/fast",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/text-to-video/fast/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v3.5/text-to-video/fast",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v3.5/text-to-video/fast",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v3.5/text-to-video/fast queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v3.5/text-to-video/fast",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/text-to-video/fast",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/text-to-video/fast/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV35TextToVideoFastInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "negative_prompt",
                "style",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "FastTextToVideoRequest",
              "required": [
                "prompt"
              ]
            },
            "PixverseV35TextToVideoFastOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 2995630,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/zebra/11UahivZ3XZ1tRlcEcgPq_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "VideoOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v3.5/text-to-video/fast/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/text-to-video/fast/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/text-to-video/fast": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV35TextToVideoFastInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/text-to-video/fast/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV35TextToVideoFastOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v3.5/transition",
      "title": "fal-ai/pixverse/v3.5/transition",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v3.5/transition",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/transition",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/transition/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt for the transition",
          "required": true,
          "default": "",
          "examples": [
            "Scene slowly transition into cat swimming under water"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "first_image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/owQh2DAzk8UU7J02nr5RY_Co2P4boLv6meIZ5t9gKvL_8685da151df343ab8bf82165c928e2a5.jpg"
          ]
        },
        {
          "name": "last_image_url",
          "type": "string",
          "description": "URL of the image to use as the last frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/kangaroo/RgedFs_WSnq5BgER7qDx1_ONrbTJ1YAGXz-9JnSsBoB_bdc8750387734bfe940319f469f7b0b2.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v3.5/transition",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v3.5/transition",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v3.5/transition queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v3.5/transition",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/transition",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v3.5/transition/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV35TransitionInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed",
                "first_image_url",
                "last_image_url"
              ],
              "type": "object",
              "properties": {
                "first_image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/owQh2DAzk8UU7J02nr5RY_Co2P4boLv6meIZ5t9gKvL_8685da151df343ab8bf82165c928e2a5.jpg"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "First Image Url"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "prompt": {
                  "examples": [
                    "Scene slowly transition into cat swimming under water"
                  ],
                  "description": "The prompt for the transition",
                  "type": "string",
                  "title": "Prompt"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                },
                "last_image_url": {
                  "examples": [
                    "https://v3.fal.media/files/kangaroo/RgedFs_WSnq5BgER7qDx1_ONrbTJ1YAGXz-9JnSsBoB_bdc8750387734bfe940319f469f7b0b2.jpg"
                  ],
                  "description": "URL of the image to use as the last frame",
                  "type": "string",
                  "title": "Last Image Url"
                }
              },
              "title": "TransitionRequest",
              "required": [
                "prompt",
                "first_image_url",
                "last_image_url"
              ]
            },
            "PixverseV35TransitionOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 3890360,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/panda/5KmKS-mh1vO-htbqE5oex_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "TransitionOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v3.5/transition/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/transition/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/transition": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV35TransitionInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v3.5/transition/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV35TransitionOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4.5/effects",
      "title": "fal-ai/pixverse/v4.5/effects",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4.5/effects",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/effects/api",
      "inputs": [
        {
          "name": "effect",
          "type": "string",
          "description": "The effect to apply to the video",
          "required": true,
          "default": "",
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything, Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text",
          "required": false,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/koala/q5ahL3KS7ikt3MvpNUG8l_image%20(72).webp"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video.",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4.5/effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4.5/effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4.5/effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4.5/effects",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV45EffectsInput": {
              "x-fal-order-properties": [
                "effect",
                "image_url",
                "resolution",
                "duration",
                "negative_prompt"
              ],
              "type": "object",
              "properties": {
                "effect": {
                  "enum": [
                    "Kiss Me AI",
                    "Kiss",
                    "Muscle Surge",
                    "Warmth of Jesus",
                    "Anything, Robot",
                    "The Tiger Touch",
                    "Hug",
                    "Holy Wings",
                    "Hulk",
                    "Venom",
                    "Microwave",
                    "Zombie Mode",
                    "Squid Game",
                    "Baby Face",
                    "Black Myth: Wukong",
                    "Long Hair Magic",
                    "Leggy Run",
                    "Fin-tastic Mermaid",
                    "Punch Face",
                    "Creepy Devil Smile",
                    "Thunder God",
                    "Eye Zoom Challenge",
                    "Who's Arrested?",
                    "Baby Arrived",
                    "Werewolf Rage",
                    "Bald Swipe",
                    "BOOM DROP",
                    "Huge Cutie",
                    "Liquid Metal",
                    "Sharksnap!",
                    "Dust Me Away"
                  ],
                  "description": "The effect to apply to the video",
                  "type": "string",
                  "title": "Effect"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video.",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "negative_prompt": {
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/koala/q5ahL3KS7ikt3MvpNUG8l_image%20(72).webp"
                  ],
                  "description": "Optional URL of the image to use as the first frame. If not provided, generates from text",
                  "type": "string",
                  "title": "Image Url"
                }
              },
              "title": "EffectInput",
              "required": [
                "effect"
              ]
            },
            "PixverseV45EffectsOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 3232402,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/koala/awGY1lJd7lVsqQeSqjWqn_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "EffectOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4.5/effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV45EffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV45EffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4.5/image-to-video",
      "title": "fal-ai/pixverse/v4.5/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4.5/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A woman warrior with her hammer walking with his glacier wolf."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
          ]
        },
        {
          "name": "camera_movement",
          "type": "string",
          "description": "The type of camera movement to apply to the video",
          "required": false,
          "default": "",
          "enum": [
            "horizontal_left",
            "horizontal_right",
            "vertical_up",
            "vertical_down",
            "zoom_in",
            "zoom_out",
            "crane_up",
            "quickly_zoom_in",
            "quickly_zoom_out",
            "smooth_zoom_in",
            "camera_rotation",
            "robo_arm",
            "super_dolly_out",
            "whip_pan",
            "hitchcock",
            "left_follow",
            "right_follow",
            "pan_left",
            "pan_right",
            "fix_bg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4.5/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4.5/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4.5/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4.5/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV45ImageToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed",
                "image_url",
                "camera_movement"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman warrior with her hammer walking with his glacier wolf."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "camera_movement": {
                  "enum": [
                    "horizontal_left",
                    "horizontal_right",
                    "vertical_up",
                    "vertical_down",
                    "zoom_in",
                    "zoom_out",
                    "crane_up",
                    "quickly_zoom_in",
                    "quickly_zoom_out",
                    "smooth_zoom_in",
                    "camera_rotation",
                    "robo_arm",
                    "super_dolly_out",
                    "whip_pan",
                    "hitchcock",
                    "left_follow",
                    "right_follow",
                    "pan_left",
                    "pan_right",
                    "fix_bg"
                  ],
                  "description": "The type of camera movement to apply to the video",
                  "type": "string",
                  "title": "Camera Movement"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "Image Url"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "ImageToVideoRequestV4",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PixverseV45ImageToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 6420765,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/koala/HEWK7BBwqWrz7F5nAZzp7_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "I2VOutputV4",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4.5/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV45ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV45ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4.5/image-to-video/fast",
      "title": "fal-ai/pixverse/v4.5/image-to-video/fast",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4.5/image-to-video/fast",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/image-to-video/fast",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/image-to-video/fast/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A woman warrior with her hammer walking with his glacier wolf."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
          ]
        },
        {
          "name": "camera_movement",
          "type": "string",
          "description": "The type of camera movement to apply to the video",
          "required": false,
          "default": "",
          "enum": [
            "horizontal_left",
            "horizontal_right",
            "vertical_up",
            "vertical_down",
            "zoom_in",
            "zoom_out",
            "crane_up",
            "quickly_zoom_in",
            "quickly_zoom_out",
            "smooth_zoom_in",
            "camera_rotation",
            "robo_arm",
            "super_dolly_out",
            "whip_pan",
            "hitchcock",
            "left_follow",
            "right_follow",
            "pan_left",
            "pan_right",
            "fix_bg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4.5/image-to-video/fast",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4.5/image-to-video/fast",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4.5/image-to-video/fast queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4.5/image-to-video/fast",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/image-to-video/fast",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/image-to-video/fast/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV45ImageToVideoFastInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "negative_prompt",
                "style",
                "seed",
                "image_url",
                "camera_movement"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman warrior with her hammer walking with his glacier wolf."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "camera_movement": {
                  "enum": [
                    "horizontal_left",
                    "horizontal_right",
                    "vertical_up",
                    "vertical_down",
                    "zoom_in",
                    "zoom_out",
                    "crane_up",
                    "quickly_zoom_in",
                    "quickly_zoom_out",
                    "smooth_zoom_in",
                    "camera_rotation",
                    "robo_arm",
                    "super_dolly_out",
                    "whip_pan",
                    "hitchcock",
                    "left_follow",
                    "right_follow",
                    "pan_left",
                    "pan_right",
                    "fix_bg"
                  ],
                  "description": "The type of camera movement to apply to the video",
                  "type": "string",
                  "title": "Camera Movement"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "Image Url"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "FastImageToVideoRequestV4",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PixverseV45ImageToVideoFastOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 6420765,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/koala/HEWK7BBwqWrz7F5nAZzp7_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "I2VOutputV4",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4.5/image-to-video/fast/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/image-to-video/fast/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/image-to-video/fast": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV45ImageToVideoFastInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/image-to-video/fast/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV45ImageToVideoFastOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4.5/text-to-video",
      "title": "fal-ai/pixverse/v4.5/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4.5/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4.5/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4.5/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4.5/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4.5/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV45TextToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "TextToVideoRequest",
              "required": [
                "prompt"
              ]
            },
            "PixverseV45TextToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 5485412,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/lion/_fVEU5nzHND_fHGQUhXEm_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "VideoOutputV4",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4.5/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV45TextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV45TextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4.5/text-to-video/fast",
      "title": "fal-ai/pixverse/v4.5/text-to-video/fast",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4.5/text-to-video/fast",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/text-to-video/fast",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/text-to-video/fast/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4.5/text-to-video/fast",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4.5/text-to-video/fast",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4.5/text-to-video/fast queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4.5/text-to-video/fast",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/text-to-video/fast",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/text-to-video/fast/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV45TextToVideoFastInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "negative_prompt",
                "style",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "FastTextToVideoRequest",
              "required": [
                "prompt"
              ]
            },
            "PixverseV45TextToVideoFastOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 5485412,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/lion/_fVEU5nzHND_fHGQUhXEm_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "VideoOutputV4",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4.5/text-to-video/fast/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/text-to-video/fast/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/text-to-video/fast": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV45TextToVideoFastInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/text-to-video/fast/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV45TextToVideoFastOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4.5/transition",
      "title": "fal-ai/pixverse/v4.5/transition",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4.5/transition",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/transition",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/transition/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt for the transition",
          "required": true,
          "default": "",
          "examples": [
            "Scene slowly transition into cat swimming under water"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "first_image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/owQh2DAzk8UU7J02nr5RY_Co2P4boLv6meIZ5t9gKvL_8685da151df343ab8bf82165c928e2a5.jpg"
          ]
        },
        {
          "name": "last_image_url",
          "type": "string",
          "description": "URL of the image to use as the last frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/kangaroo/RgedFs_WSnq5BgER7qDx1_ONrbTJ1YAGXz-9JnSsBoB_bdc8750387734bfe940319f469f7b0b2.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4.5/transition",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4.5/transition",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4.5/transition queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4.5/transition",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/transition",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4.5/transition/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV45TransitionInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed",
                "first_image_url",
                "last_image_url"
              ],
              "type": "object",
              "properties": {
                "first_image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/owQh2DAzk8UU7J02nr5RY_Co2P4boLv6meIZ5t9gKvL_8685da151df343ab8bf82165c928e2a5.jpg"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "First Image Url"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "prompt": {
                  "examples": [
                    "Scene slowly transition into cat swimming under water"
                  ],
                  "description": "The prompt for the transition",
                  "type": "string",
                  "title": "Prompt"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                },
                "last_image_url": {
                  "examples": [
                    "https://v3.fal.media/files/kangaroo/RgedFs_WSnq5BgER7qDx1_ONrbTJ1YAGXz-9JnSsBoB_bdc8750387734bfe940319f469f7b0b2.jpg"
                  ],
                  "description": "URL of the image to use as the last frame",
                  "type": "string",
                  "title": "Last Image Url"
                }
              },
              "title": "TransitionRequest",
              "required": [
                "prompt",
                "first_image_url",
                "last_image_url"
              ]
            },
            "PixverseV45TransitionOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 3890360,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/panda/5KmKS-mh1vO-htbqE5oex_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "TransitionOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4.5/transition/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/transition/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/transition": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV45TransitionInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4.5/transition/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV45TransitionOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4/effects",
      "title": "fal-ai/pixverse/v4/effects",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4/effects",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/effects/api",
      "inputs": [
        {
          "name": "effect",
          "type": "string",
          "description": "The effect to apply to the video",
          "required": true,
          "default": "",
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything, Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text",
          "required": false,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/koala/q5ahL3KS7ikt3MvpNUG8l_image%20(72).webp"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video.",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4/effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4/effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4/effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4/effects",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV4EffectsInput": {
              "x-fal-order-properties": [
                "effect",
                "image_url",
                "resolution",
                "duration",
                "negative_prompt"
              ],
              "type": "object",
              "properties": {
                "effect": {
                  "enum": [
                    "Kiss Me AI",
                    "Kiss",
                    "Muscle Surge",
                    "Warmth of Jesus",
                    "Anything, Robot",
                    "The Tiger Touch",
                    "Hug",
                    "Holy Wings",
                    "Hulk",
                    "Venom",
                    "Microwave",
                    "Zombie Mode",
                    "Squid Game",
                    "Baby Face",
                    "Black Myth: Wukong",
                    "Long Hair Magic",
                    "Leggy Run",
                    "Fin-tastic Mermaid",
                    "Punch Face",
                    "Creepy Devil Smile",
                    "Thunder God",
                    "Eye Zoom Challenge",
                    "Who's Arrested?",
                    "Baby Arrived",
                    "Werewolf Rage",
                    "Bald Swipe",
                    "BOOM DROP",
                    "Huge Cutie",
                    "Liquid Metal",
                    "Sharksnap!",
                    "Dust Me Away"
                  ],
                  "description": "The effect to apply to the video",
                  "type": "string",
                  "title": "Effect"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video.",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "negative_prompt": {
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/koala/q5ahL3KS7ikt3MvpNUG8l_image%20(72).webp"
                  ],
                  "description": "Optional URL of the image to use as the first frame. If not provided, generates from text",
                  "type": "string",
                  "title": "Image Url"
                }
              },
              "title": "EffectInput",
              "required": [
                "effect"
              ]
            },
            "PixverseV4EffectsOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 3232402,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/koala/awGY1lJd7lVsqQeSqjWqn_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "EffectOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4/effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV4EffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV4EffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4/image-to-video",
      "title": "fal-ai/pixverse/v4/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A woman warrior with her hammer walking with his glacier wolf."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
          ]
        },
        {
          "name": "camera_movement",
          "type": "string",
          "description": "The type of camera movement to apply to the video",
          "required": false,
          "default": "",
          "enum": [
            "horizontal_left",
            "horizontal_right",
            "vertical_up",
            "vertical_down",
            "zoom_in",
            "zoom_out",
            "crane_up",
            "quickly_zoom_in",
            "quickly_zoom_out",
            "smooth_zoom_in",
            "camera_rotation",
            "robo_arm",
            "super_dolly_out",
            "whip_pan",
            "hitchcock",
            "left_follow",
            "right_follow",
            "pan_left",
            "pan_right",
            "fix_bg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV4ImageToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed",
                "image_url",
                "camera_movement"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman warrior with her hammer walking with his glacier wolf."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "camera_movement": {
                  "enum": [
                    "horizontal_left",
                    "horizontal_right",
                    "vertical_up",
                    "vertical_down",
                    "zoom_in",
                    "zoom_out",
                    "crane_up",
                    "quickly_zoom_in",
                    "quickly_zoom_out",
                    "smooth_zoom_in",
                    "camera_rotation",
                    "robo_arm",
                    "super_dolly_out",
                    "whip_pan",
                    "hitchcock",
                    "left_follow",
                    "right_follow",
                    "pan_left",
                    "pan_right",
                    "fix_bg"
                  ],
                  "description": "The type of camera movement to apply to the video",
                  "type": "string",
                  "title": "Camera Movement"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "Image Url"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "ImageToVideoRequestV4",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PixverseV4ImageToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 6420765,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/koala/HEWK7BBwqWrz7F5nAZzp7_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "I2VOutputV4",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV4ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV4ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4/image-to-video/fast",
      "title": "fal-ai/pixverse/v4/image-to-video/fast",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4/image-to-video/fast",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/image-to-video/fast",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/image-to-video/fast/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A woman warrior with her hammer walking with his glacier wolf."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
          ]
        },
        {
          "name": "camera_movement",
          "type": "string",
          "description": "The type of camera movement to apply to the video",
          "required": false,
          "default": "",
          "enum": [
            "horizontal_left",
            "horizontal_right",
            "vertical_up",
            "vertical_down",
            "zoom_in",
            "zoom_out",
            "crane_up",
            "quickly_zoom_in",
            "quickly_zoom_out",
            "smooth_zoom_in",
            "camera_rotation",
            "robo_arm",
            "super_dolly_out",
            "whip_pan",
            "hitchcock",
            "left_follow",
            "right_follow",
            "pan_left",
            "pan_right",
            "fix_bg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4/image-to-video/fast",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4/image-to-video/fast",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4/image-to-video/fast queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4/image-to-video/fast",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/image-to-video/fast",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/image-to-video/fast/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV4ImageToVideoFastInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "negative_prompt",
                "style",
                "seed",
                "image_url",
                "camera_movement"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman warrior with her hammer walking with his glacier wolf."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "camera_movement": {
                  "enum": [
                    "horizontal_left",
                    "horizontal_right",
                    "vertical_up",
                    "vertical_down",
                    "zoom_in",
                    "zoom_out",
                    "crane_up",
                    "quickly_zoom_in",
                    "quickly_zoom_out",
                    "smooth_zoom_in",
                    "camera_rotation",
                    "robo_arm",
                    "super_dolly_out",
                    "whip_pan",
                    "hitchcock",
                    "left_follow",
                    "right_follow",
                    "pan_left",
                    "pan_right",
                    "fix_bg"
                  ],
                  "description": "The type of camera movement to apply to the video",
                  "type": "string",
                  "title": "Camera Movement"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "Image Url"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "FastImageToVideoRequestV4",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PixverseV4ImageToVideoFastOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 6420765,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/koala/HEWK7BBwqWrz7F5nAZzp7_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "I2VOutputV4",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4/image-to-video/fast/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/image-to-video/fast/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/image-to-video/fast": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV4ImageToVideoFastInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/image-to-video/fast/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV4ImageToVideoFastOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4/text-to-video",
      "title": "fal-ai/pixverse/v4/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV4TextToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "TextToVideoRequest",
              "required": [
                "prompt"
              ]
            },
            "PixverseV4TextToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 5485412,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/lion/_fVEU5nzHND_fHGQUhXEm_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "VideoOutputV4",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV4TextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV4TextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v4/text-to-video/fast",
      "title": "fal-ai/pixverse/v4/text-to-video/fast",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v4/text-to-video/fast",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/text-to-video/fast",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/text-to-video/fast/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v4/text-to-video/fast",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v4/text-to-video/fast",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v4/text-to-video/fast queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v4/text-to-video/fast",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v4/text-to-video/fast",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v4/text-to-video/fast/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV4TextToVideoFastInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "negative_prompt",
                "style",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "FastTextToVideoRequest",
              "required": [
                "prompt"
              ]
            },
            "PixverseV4TextToVideoFastOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 5485412,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://fal.media/files/lion/_fVEU5nzHND_fHGQUhXEm_output.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "VideoOutputV4",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v4/text-to-video/fast/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/text-to-video/fast/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/text-to-video/fast": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV4TextToVideoFastInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v4/text-to-video/fast/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV4TextToVideoFastOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v5/image-to-video",
      "title": "fal-ai/pixverse/v5/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v5/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/panda/eTq_2p2OlIBu7MyDFdtWz_6290f4acd92c4382b04ed302b2aa5a3a.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v5/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v5/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "A woman warrior with her hammer walking with his glacier wolf."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
          ]
        },
        {
          "name": "camera_movement",
          "type": "string",
          "description": "The type of camera movement to apply to the video",
          "required": false,
          "default": "",
          "enum": [
            "horizontal_left",
            "horizontal_right",
            "vertical_up",
            "vertical_down",
            "zoom_in",
            "zoom_out",
            "crane_up",
            "quickly_zoom_in",
            "quickly_zoom_out",
            "smooth_zoom_in",
            "camera_rotation",
            "robo_arm",
            "super_dolly_out",
            "whip_pan",
            "hitchcock",
            "left_follow",
            "right_follow",
            "pan_left",
            "pan_right",
            "fix_bg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v5/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v5/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v5/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v5/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/panda/eTq_2p2OlIBu7MyDFdtWz_6290f4acd92c4382b04ed302b2aa5a3a.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v5/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v5/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV5ImageToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed",
                "image_url",
                "camera_movement"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman warrior with her hammer walking with his glacier wolf."
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "camera_movement": {
                  "enum": [
                    "horizontal_left",
                    "horizontal_right",
                    "vertical_up",
                    "vertical_down",
                    "zoom_in",
                    "zoom_out",
                    "crane_up",
                    "quickly_zoom_in",
                    "quickly_zoom_out",
                    "smooth_zoom_in",
                    "camera_rotation",
                    "robo_arm",
                    "super_dolly_out",
                    "whip_pan",
                    "hitchcock",
                    "left_follow",
                    "right_follow",
                    "pan_left",
                    "pan_right",
                    "fix_bg"
                  ],
                  "description": "The type of camera movement to apply to the video",
                  "type": "string",
                  "title": "Camera Movement"
                },
                "image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/qL93Je8ezvzQgDOEzTjKF_KhGKZTEebZcDw6T5rwQPK_output.png"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "Image Url"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "ImageToVideoRequestV4",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "PixverseV5ImageToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 6420765,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/model_tests/video_models/output-3.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "I2VOutputV5",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v5/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV5ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV5ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v5/text-to-video",
      "title": "fal-ai/pixverse/v5/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v5/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v5/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v5/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Prompt",
          "required": true,
          "default": "",
          "examples": [
            "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v5/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v5/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v5/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v5/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v5/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v5/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV5TextToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Epic low-cut camera capture of a girl clad in ultraviolet threads, Peter Max art style depiction, luminous diamond skin glistening under a vast moon's radiance, embodied in a superhuman flight among mystical ruins, symbolizing a deity's ritual ascent, hyper-detailed"
                  ],
                  "title": "Prompt",
                  "type": "string"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                }
              },
              "title": "TextToVideoRequest",
              "required": [
                "prompt"
              ]
            },
            "PixverseV5TextToVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 5485412,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/model_tests/video_models/output-4.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "VideoOutputV5",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v5/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV5TextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV5TextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/pixverse/v5/transition",
      "title": "fal-ai/pixverse/v5/transition",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/pixverse/v5/transition",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v5/transition",
      "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v5/transition/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt for the transition",
          "required": true,
          "default": "",
          "examples": [
            "Scene slowly transition into cat swimming under water"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ]
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5",
          "enum": [
            "5",
            "8"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to be used for the generation",
          "required": false,
          "default": "",
          "examples": [
            "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of the generated video",
          "required": false,
          "default": "",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "first_image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/owQh2DAzk8UU7J02nr5RY_Co2P4boLv6meIZ5t9gKvL_8685da151df343ab8bf82165c928e2a5.jpg"
          ]
        },
        {
          "name": "last_image_url",
          "type": "string",
          "description": "URL of the image to use as the last frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/kangaroo/RgedFs_WSnq5BgER7qDx1_ONrbTJ1YAGXz-9JnSsBoB_bdc8750387734bfe940319f469f7b0b2.jpg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/pixverse/v5/transition",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/pixverse/v5/transition",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/pixverse/v5/transition queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/pixverse/v5/transition",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/pixverse-v3.5.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/pixverse/v5/transition",
            "documentationUrl": "https://fal.ai/models/fal-ai/pixverse/v5/transition/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "PixverseV5TransitionInput": {
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "resolution",
                "duration",
                "negative_prompt",
                "style",
                "seed",
                "first_image_url",
                "last_image_url"
              ],
              "type": "object",
              "properties": {
                "first_image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/owQh2DAzk8UU7J02nr5RY_Co2P4boLv6meIZ5t9gKvL_8685da151df343ab8bf82165c928e2a5.jpg"
                  ],
                  "description": "URL of the image to use as the first frame",
                  "type": "string",
                  "title": "First Image Url"
                },
                "duration": {
                  "enum": [
                    "5",
                    "8"
                  ],
                  "description": "The duration of the generated video in seconds",
                  "type": "string",
                  "title": "Duration",
                  "default": "5"
                },
                "resolution": {
                  "enum": [
                    "360p",
                    "540p",
                    "720p",
                    "1080p"
                  ],
                  "description": "The resolution of the generated video",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "style": {
                  "enum": [
                    "anime",
                    "3d_animation",
                    "clay",
                    "comic",
                    "cyberpunk"
                  ],
                  "description": "The style of the generated video",
                  "type": "string",
                  "title": "Style"
                },
                "prompt": {
                  "examples": [
                    "Scene slowly transition into cat swimming under water"
                  ],
                  "description": "The prompt for the transition",
                  "type": "string",
                  "title": "Prompt"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "4:3",
                    "1:1",
                    "3:4",
                    "9:16"
                  ],
                  "description": "The aspect ratio of the generated video",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "seed": {
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
                  "type": "integer",
                  "title": "Seed"
                },
                "negative_prompt": {
                  "examples": [
                    "blurry, low quality, low resolution, pixelated, noisy, grainy, out of focus, poorly lit, poorly exposed, poorly composed, poorly framed, poorly cropped, poorly color corrected, poorly color graded"
                  ],
                  "description": "Negative prompt to be used for the generation",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": ""
                },
                "last_image_url": {
                  "examples": [
                    "https://v3.fal.media/files/kangaroo/RgedFs_WSnq5BgER7qDx1_ONrbTJ1YAGXz-9JnSsBoB_bdc8750387734bfe940319f469f7b0b2.jpg"
                  ],
                  "description": "URL of the image to use as the last frame",
                  "type": "string",
                  "title": "Last Image Url"
                }
              },
              "title": "TransitionRequest",
              "required": [
                "prompt",
                "first_image_url",
                "last_image_url"
              ]
            },
            "PixverseV5TransitionOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "file_size": 3890360,
                      "file_name": "output.mp4",
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/model_tests/video_models/output-2.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "TransitionOutputV5",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/pixverse/v5/transition/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/transition/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/transition": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PixverseV5TransitionInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/pixverse/v5/transition/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PixverseV5TransitionOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/rife/video",
      "title": "fal-ai/rife/video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/rife/video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-5.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/rife/video",
      "documentationUrl": "https://fal.ai/models/fal-ai/rife/video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to use for interpolation.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/interpolation-video-input.mp4"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate between the input video frames.",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 4
        },
        {
          "name": "use_scene_detection",
          "type": "boolean",
          "description": "If True, the input video will be split into scenes before interpolation. This removes smear frames between scenes, but can result in false positives if the scene detection is not accurate. If False, the entire video will be treated as a single scene.",
          "required": false,
          "default": false
        },
        {
          "name": "use_calculated_fps",
          "type": "boolean",
          "description": "If True, the function will use the calculated FPS of the input video multiplied by the number of frames to determine the output FPS. If False, the passed FPS will be used.",
          "required": false,
          "default": true
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "Frames per second for the output video. Only applicable if use_calculated_fps is False.",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 60
        },
        {
          "name": "loop",
          "type": "boolean",
          "description": "If True, the final frame will be looped back to the first frame to create a seamless loop. If False, the final frame will not loop back.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file with interpolated frames."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/rife/video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/rife/video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/rife/video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/rife/video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-5.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/rife/video",
            "documentationUrl": "https://fal.ai/models/fal-ai/rife/video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "RifeVideoInput": {
              "x-fal-order-properties": [
                "video_url",
                "num_frames",
                "use_scene_detection",
                "use_calculated_fps",
                "fps",
                "loop"
              ],
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/interpolation-video-input.mp4"
                  ],
                  "title": "Video URL",
                  "type": "string",
                  "description": "The URL of the video to use for interpolation."
                },
                "use_scene_detection": {
                  "title": "Use Scene Detection",
                  "type": "boolean",
                  "description": "If True, the input video will be split into scenes before interpolation. This removes smear frames between scenes, but can result in false positives if the scene detection is not accurate. If False, the entire video will be treated as a single scene.",
                  "default": false
                },
                "use_calculated_fps": {
                  "title": "Use Calculated FPS",
                  "type": "boolean",
                  "description": "If True, the function will use the calculated FPS of the input video multiplied by the number of frames to determine the output FPS. If False, the passed FPS will be used.",
                  "default": true
                },
                "num_frames": {
                  "description": "The number of frames to generate between the input video frames.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 4,
                  "title": "Number of Frames",
                  "default": 1
                },
                "loop": {
                  "title": "Loop",
                  "type": "boolean",
                  "description": "If True, the final frame will be looped back to the first frame to create a seamless loop. If False, the final frame will not loop back.",
                  "default": false
                },
                "fps": {
                  "minimum": 1,
                  "maximum": 60,
                  "type": "integer",
                  "title": "Frames Per Second",
                  "description": "Frames per second for the output video. Only applicable if use_calculated_fps is False.",
                  "default": 8
                }
              },
              "title": "RIFEVideoInput",
              "required": [
                "video_url"
              ]
            },
            "RifeVideoOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/rife-video-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file with interpolated frames.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "RIFEVideoOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/rife/video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/rife/video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/rife/video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/RifeVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/rife/video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/RifeVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/sadtalker",
      "title": "fal-ai/sadtalker",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/sadtalker",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/sadtalker.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/sadtalker",
      "documentationUrl": "https://fal.ai/models/fal-ai/sadtalker/api",
      "inputs": [
        {
          "name": "source_image_url",
          "type": "string",
          "description": "URL of the source image",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/sadtalker/anime_girl.png"
          ]
        },
        {
          "name": "driven_audio_url",
          "type": "string",
          "description": "URL of the driven audio",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/sadtalker/deyu.wav"
          ]
        },
        {
          "name": "pose_style",
          "type": "integer",
          "description": "The style of the pose",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 45
        },
        {
          "name": "face_model_resolution",
          "type": "string",
          "description": "The resolution of the face model",
          "required": false,
          "default": "256",
          "enum": [
            "256",
            "512"
          ]
        },
        {
          "name": "expression_scale",
          "type": "number",
          "description": "The scale of the expression",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 3
        },
        {
          "name": "face_enhancer",
          "type": "string",
          "description": "The type of face enhancer to use",
          "required": false,
          "default": "",
          "enum": [
            "gfpgan"
          ],
          "examples": [
            null
          ]
        },
        {
          "name": "still_mode",
          "type": "boolean",
          "description": "Whether to use still mode. Fewer head motion, works with preprocess `full`.",
          "required": false,
          "default": false
        },
        {
          "name": "preprocess",
          "type": "string",
          "description": "The type of preprocessing to use",
          "required": false,
          "default": "crop",
          "enum": [
            "crop",
            "extcrop",
            "resize",
            "full",
            "extfull"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "URL of the generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/sadtalker",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/sadtalker",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/sadtalker queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/sadtalker",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/sadtalker.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/sadtalker",
            "documentationUrl": "https://fal.ai/models/fal-ai/sadtalker/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "SadtalkerInput": {
              "title": "SadTalkerInput",
              "type": "object",
              "properties": {
                "pose_style": {
                  "minimum": 0,
                  "maximum": 45,
                  "type": "integer",
                  "title": "Pose Style",
                  "description": "The style of the pose",
                  "default": 0
                },
                "source_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/sadtalker/anime_girl.png"
                  ],
                  "title": "Source Image Url",
                  "type": "string",
                  "description": "URL of the source image"
                },
                "driven_audio_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/sadtalker/deyu.wav"
                  ],
                  "title": "Driven Audio Url",
                  "type": "string",
                  "description": "URL of the driven audio"
                },
                "face_enhancer": {
                  "enum": [
                    "gfpgan"
                  ],
                  "title": "Face Enhancer",
                  "type": "string",
                  "description": "The type of face enhancer to use",
                  "examples": [
                    null
                  ]
                },
                "face_model_resolution": {
                  "enum": [
                    "256",
                    "512"
                  ],
                  "title": "Face Model Resolution",
                  "type": "string",
                  "description": "The resolution of the face model",
                  "default": "256"
                },
                "expression_scale": {
                  "description": "The scale of the expression",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 3,
                  "title": "Expression Scale",
                  "multipleOf": 0.1,
                  "default": 1
                },
                "still_mode": {
                  "title": "Still Mode",
                  "type": "boolean",
                  "description": "Whether to use still mode. Fewer head motion, works with preprocess `full`.",
                  "default": false
                },
                "preprocess": {
                  "enum": [
                    "crop",
                    "extcrop",
                    "resize",
                    "full",
                    "extfull"
                  ],
                  "title": "Preprocess",
                  "type": "string",
                  "description": "The type of preprocessing to use",
                  "default": "crop"
                }
              },
              "x-fal-order-properties": [
                "source_image_url",
                "driven_audio_url",
                "pose_style",
                "face_model_resolution",
                "expression_scale",
                "face_enhancer",
                "still_mode",
                "preprocess"
              ],
              "required": [
                "source_image_url",
                "driven_audio_url"
              ]
            },
            "SadtalkerOutput": {
              "title": "SadTalkerOutput",
              "type": "object",
              "properties": {
                "video": {
                  "title": "Video",
                  "description": "URL of the generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/sadtalker/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sadtalker/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sadtalker": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SadtalkerInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sadtalker/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SadtalkerOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/sadtalker/reference",
      "title": "fal-ai/sadtalker/reference",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/sadtalker/reference",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/sadtalker.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/sadtalker/reference",
      "documentationUrl": "https://fal.ai/models/fal-ai/sadtalker/reference/api",
      "inputs": [
        {
          "name": "source_image_url",
          "type": "string",
          "description": "URL of the source image",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/sadtalker/anime_girl.png"
          ]
        },
        {
          "name": "driven_audio_url",
          "type": "string",
          "description": "URL of the driven audio",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/sadtalker/deyu.wav"
          ]
        },
        {
          "name": "reference_pose_video_url",
          "type": "string",
          "description": "URL of the reference video",
          "required": true,
          "default": "",
          "examples": [
            "https://github.com/OpenTalker/SadTalker/raw/main/examples/ref_video/WDA_AlexandriaOcasioCortez_000.mp4"
          ]
        },
        {
          "name": "pose_style",
          "type": "integer",
          "description": "The style of the pose",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 45
        },
        {
          "name": "face_model_resolution",
          "type": "string",
          "description": "The resolution of the face model",
          "required": false,
          "default": "256",
          "enum": [
            "256",
            "512"
          ]
        },
        {
          "name": "expression_scale",
          "type": "number",
          "description": "The scale of the expression",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 3
        },
        {
          "name": "face_enhancer",
          "type": "string",
          "description": "The type of face enhancer to use",
          "required": false,
          "default": "",
          "enum": [
            "gfpgan"
          ],
          "examples": [
            null
          ]
        },
        {
          "name": "still_mode",
          "type": "boolean",
          "description": "Whether to use still mode. Fewer head motion, works with preprocess `full`.",
          "required": false,
          "default": false
        },
        {
          "name": "preprocess",
          "type": "string",
          "description": "The type of preprocessing to use",
          "required": false,
          "default": "crop",
          "enum": [
            "crop",
            "extcrop",
            "resize",
            "full",
            "extfull"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "URL of the generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/sadtalker/reference",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/sadtalker/reference",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/sadtalker/reference queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/sadtalker/reference",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/sadtalker.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/sadtalker/reference",
            "documentationUrl": "https://fal.ai/models/fal-ai/sadtalker/reference/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "SadtalkerReferenceInput": {
              "title": "SadTalkerRefVideoInput",
              "type": "object",
              "properties": {
                "pose_style": {
                  "minimum": 0,
                  "maximum": 45,
                  "type": "integer",
                  "title": "Pose Style",
                  "description": "The style of the pose",
                  "default": 0
                },
                "source_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/sadtalker/anime_girl.png"
                  ],
                  "title": "Source Image Url",
                  "type": "string",
                  "description": "URL of the source image"
                },
                "driven_audio_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/sadtalker/deyu.wav"
                  ],
                  "title": "Driven Audio Url",
                  "type": "string",
                  "description": "URL of the driven audio"
                },
                "reference_pose_video_url": {
                  "examples": [
                    "https://github.com/OpenTalker/SadTalker/raw/main/examples/ref_video/WDA_AlexandriaOcasioCortez_000.mp4"
                  ],
                  "title": "Reference Pose Video Url",
                  "type": "string",
                  "description": "URL of the reference video"
                },
                "face_enhancer": {
                  "enum": [
                    "gfpgan"
                  ],
                  "title": "Face Enhancer",
                  "type": "string",
                  "description": "The type of face enhancer to use",
                  "examples": [
                    null
                  ]
                },
                "face_model_resolution": {
                  "enum": [
                    "256",
                    "512"
                  ],
                  "title": "Face Model Resolution",
                  "type": "string",
                  "description": "The resolution of the face model",
                  "default": "256"
                },
                "expression_scale": {
                  "description": "The scale of the expression",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 3,
                  "title": "Expression Scale",
                  "multipleOf": 0.1,
                  "default": 1
                },
                "still_mode": {
                  "title": "Still Mode",
                  "type": "boolean",
                  "description": "Whether to use still mode. Fewer head motion, works with preprocess `full`.",
                  "default": false
                },
                "preprocess": {
                  "enum": [
                    "crop",
                    "extcrop",
                    "resize",
                    "full",
                    "extfull"
                  ],
                  "title": "Preprocess",
                  "type": "string",
                  "description": "The type of preprocessing to use",
                  "default": "crop"
                }
              },
              "x-fal-order-properties": [
                "source_image_url",
                "driven_audio_url",
                "reference_pose_video_url",
                "pose_style",
                "face_model_resolution",
                "expression_scale",
                "face_enhancer",
                "still_mode",
                "preprocess"
              ],
              "required": [
                "source_image_url",
                "driven_audio_url",
                "reference_pose_video_url"
              ]
            },
            "SadtalkerReferenceOutput": {
              "title": "SadTalkerOutput",
              "type": "object",
              "properties": {
                "video": {
                  "title": "Video",
                  "description": "URL of the generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/sadtalker/reference/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sadtalker/reference/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sadtalker/reference": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SadtalkerReferenceInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sadtalker/reference/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SadtalkerReferenceOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/sam2/video",
      "title": "fal-ai/sam2/video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/sam2/video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/sam2.gif",
      "playgroundUrl": "https://fal.ai/models/fal-ai/sam2/video",
      "documentationUrl": "https://fal.ai/models/fal-ai/sam2/video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to be segmented.",
          "required": true,
          "default": "",
          "examples": [
            "https://drive.google.com/uc?id=1iOFYbNITYwrebBBp9kaEGhBndFSRLz8k"
          ]
        },
        {
          "name": "mask_url",
          "type": "string",
          "description": "The URL of the mask to be applied initially.",
          "required": false,
          "default": ""
        },
        {
          "name": "prompts",
          "type": "array",
          "description": "List of prompts to segment the video",
          "required": false,
          "default": [],
          "examples": [
            [
              {
                "y": 350,
                "label": 1,
                "frame_index": 0,
                "x": 210
              },
              {
                "y": 220,
                "label": 1,
                "frame_index": 0,
                "x": 250
              }
            ]
          ]
        },
        {
          "name": "box_prompts",
          "type": "array",
          "description": "Coordinates for boxes",
          "required": false,
          "default": [],
          "examples": [
            [
              {
                "y_min": 0,
                "frame_index": 0,
                "x_max": 500,
                "x_min": 300,
                "y_max": 400
              }
            ]
          ]
        },
        {
          "name": "apply_mask",
          "type": "boolean",
          "description": "Apply the mask on the video.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The segmented video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/sam2/video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/sam2/video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/sam2/video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/sam2/video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/sam2.gif",
            "playgroundUrl": "https://fal.ai/models/fal-ai/sam2/video",
            "documentationUrl": "https://fal.ai/models/fal-ai/sam2/video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Sam2VideoInput": {
              "title": "SAM2VideoRLEInput",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://drive.google.com/uc?id=1iOFYbNITYwrebBBp9kaEGhBndFSRLz8k"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to be segmented."
                },
                "prompts": {
                  "examples": [
                    [
                      {
                        "y": 350,
                        "label": 1,
                        "frame_index": 0,
                        "x": 210
                      },
                      {
                        "y": 220,
                        "label": 1,
                        "frame_index": 0,
                        "x": 250
                      }
                    ]
                  ],
                  "title": "Prompts",
                  "type": "array",
                  "description": "List of prompts to segment the video",
                  "items": {
                    "$ref": "#/components/schemas/PointPrompt"
                  },
                  "default": []
                },
                "box_prompts": {
                  "examples": [
                    [
                      {
                        "y_min": 0,
                        "frame_index": 0,
                        "x_max": 500,
                        "x_min": 300,
                        "y_max": 400
                      }
                    ]
                  ],
                  "title": "Box Prompts",
                  "type": "array",
                  "description": "Coordinates for boxes",
                  "items": {
                    "$ref": "#/components/schemas/BoxPrompt"
                  },
                  "default": []
                },
                "apply_mask": {
                  "title": "Apply Mask",
                  "type": "boolean",
                  "description": "Apply the mask on the video.",
                  "default": false
                },
                "mask_url": {
                  "title": "Mask Url",
                  "type": "string",
                  "description": "The URL of the mask to be applied initially."
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "mask_url",
                "prompts",
                "box_prompts",
                "apply_mask"
              ],
              "required": [
                "video_url"
              ]
            },
            "Sam2VideoOutput": {
              "title": "SAM2VideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "title": "Video",
                  "description": "The segmented video.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "PointPrompt": {
              "title": "PointPrompt",
              "type": "object",
              "properties": {
                "y": {
                  "title": "Y",
                  "type": "integer",
                  "description": "Y Coordinate of the prompt",
                  "default": 350
                },
                "label": {
                  "enum": [
                    0,
                    1
                  ],
                  "title": "Label",
                  "type": "integer",
                  "description": "Label of the prompt. 1 for foreground, 0 for background",
                  "default": 1
                },
                "frame_index": {
                  "title": "Frame Index",
                  "type": "integer",
                  "description": "The frame index to interact with.",
                  "default": 0
                },
                "x": {
                  "title": "X",
                  "type": "integer",
                  "description": "X Coordinate of the prompt",
                  "default": 305
                }
              },
              "x-fal-order-properties": [
                "x",
                "y",
                "label",
                "frame_index"
              ]
            },
            "BoxPrompt": {
              "title": "BoxPrompt",
              "type": "object",
              "properties": {
                "y_min": {
                  "title": "Y Min",
                  "type": "integer",
                  "description": "Y Min Coordinate of the box",
                  "default": 0
                },
                "frame_index": {
                  "title": "Frame Index",
                  "type": "integer",
                  "description": "The frame index to interact with.",
                  "default": 0
                },
                "x_max": {
                  "title": "X Max",
                  "type": "integer",
                  "description": "X Max Coordinate of the prompt",
                  "default": 0
                },
                "x_min": {
                  "title": "X Min",
                  "type": "integer",
                  "description": "X Min Coordinate of the box",
                  "default": 0
                },
                "y_max": {
                  "title": "Y Max",
                  "type": "integer",
                  "description": "Y Max Coordinate of the prompt",
                  "default": 0
                }
              },
              "x-fal-order-properties": [
                "x_min",
                "y_min",
                "x_max",
                "y_max",
                "frame_index"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/sam2/video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sam2/video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sam2/video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Sam2VideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sam2/video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Sam2VideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/skyreels-i2v",
      "title": "fal-ai/skyreels-i2v",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/skyreels-i2v",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/skyreels-i2v.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/skyreels-i2v",
      "documentationUrl": "https://fal.ai/models/fal-ai/skyreels-i2v/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image input.",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/panda/TuXlMwArpQcdYNCLAEM8K.webp"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation. If not provided, a random seed will be used.",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for generation (between 1.0 and 20.0)",
          "required": false,
          "default": 6,
          "minimum": 1,
          "maximum": 20
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of denoising steps (between 1 and 50). Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt to guide generation away from certain attributes.",
          "required": false,
          "default": ""
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the output video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation"
        },
        {
          "name": "video",
          "type": "string",
          "description": "Video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/skyreels-i2v",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/skyreels-i2v",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/skyreels-i2v queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/skyreels-i2v",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/skyreels-i2v.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/skyreels-i2v",
            "documentationUrl": "https://fal.ai/models/fal-ai/skyreels-i2v/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "SkyreelsI2vInput": {
              "title": "SkyreelsI2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the output video",
                  "default": "16:9"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/panda/TuXlMwArpQcdYNCLAEM8K.webp"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image input."
                },
                "guidance_scale": {
                  "minimum": 1,
                  "maximum": 20,
                  "type": "number",
                  "title": "Guidance Scale",
                  "description": "Guidance scale for generation (between 1.0 and 20.0)",
                  "default": 6
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation. If not provided, a random seed will be used."
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "Number of denoising steps (between 1 and 50). Higher values give better quality but take longer.",
                  "default": 30
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt to guide generation away from certain attributes."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "seed",
                "guidance_scale",
                "num_inference_steps",
                "negative_prompt",
                "aspect_ratio"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "SkyreelsI2vOutput": {
              "title": "SkyreelsI2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "examples": [
                    42
                  ],
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/elephant/yOOdaiC5clkH9K_5TTD32_video.mp4"
                    }
                  ],
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/skyreels-i2v/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/skyreels-i2v/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/skyreels-i2v": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SkyreelsI2vInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/skyreels-i2v/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SkyreelsI2vOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/stable-video",
      "title": "fal-ai/stable-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/stable-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-svd.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/stable-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/stable-video/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image to use as a starting point for the generation.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/svd/rocket.png",
            "https://storage.googleapis.com/falserverless/model_tests/svd/mustang.png",
            "https://storage.googleapis.com/falserverless/model_tests/svd/ship.png",
            "https://storage.googleapis.com/falserverless/model_tests/svd/rocket2.png"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "motion_bucket_id",
          "type": "integer",
          "description": "\n            The motion bucket id determines the motion of the generated video. The\n            higher the number, the more motion there will be.\n        ",
          "required": false,
          "default": 127,
          "minimum": 1,
          "maximum": 255
        },
        {
          "name": "cond_aug",
          "type": "number",
          "description": "\n            The conditoning augmentation determines the amount of noise that will be\n            added to the conditioning frame. The higher the number, the more noise\n            there will be, and the less the video will look like the initial image.\n            Increase it for more motion.\n        ",
          "required": false,
          "default": 0.02,
          "minimum": 0,
          "maximum": 10
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "The frames per second of the generated video.",
          "required": false,
          "default": 25,
          "minimum": 10,
          "maximum": 100
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed for random number generator"
        },
        {
          "name": "video",
          "type": "string",
          "description": "Generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/stable-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/stable-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/stable-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/stable-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/fast-svd.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/stable-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/stable-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "StableVideoInput": {
              "title": "ImageInput",
              "type": "object",
              "properties": {
                "motion_bucket_id": {
                  "minimum": 1,
                  "maximum": 255,
                  "type": "integer",
                  "title": "Motion Bucket Id",
                  "description": "\n            The motion bucket id determines the motion of the generated video. The\n            higher the number, the more motion there will be.\n        ",
                  "default": 127
                },
                "fps": {
                  "minimum": 10,
                  "maximum": 100,
                  "type": "integer",
                  "title": "Fps",
                  "description": "The frames per second of the generated video.",
                  "default": 25
                },
                "cond_aug": {
                  "minimum": 0,
                  "maximum": 10,
                  "type": "number",
                  "title": "Cond Aug",
                  "description": "\n            The conditoning augmentation determines the amount of noise that will be\n            added to the conditioning frame. The higher the number, the more noise\n            there will be, and the less the video will look like the initial image.\n            Increase it for more motion.\n        ",
                  "default": 0.02
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            The same seed and the same prompt given to the same version of Stable Diffusion\n            will output the same image every time.\n        "
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/svd/rocket.png",
                    "https://storage.googleapis.com/falserverless/model_tests/svd/mustang.png",
                    "https://storage.googleapis.com/falserverless/model_tests/svd/ship.png",
                    "https://storage.googleapis.com/falserverless/model_tests/svd/rocket2.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "minLength": 1,
                  "description": "The URL of the image to use as a starting point for the generation."
                }
              },
              "x-fal-order-properties": [
                "image_url",
                "seed",
                "motion_bucket_id",
                "cond_aug",
                "fps"
              ],
              "required": [
                "image_url"
              ]
            },
            "StableVideoOutput": {
              "title": "VideoOutput",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed for random number generator"
                },
                "video": {
                  "title": "Video",
                  "description": "Generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/stable-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/stable-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/stable-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/StableVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/stable-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/StableVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/sync-lipsync",
      "title": "fal-ai/sync-lipsync",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/sync-lipsync",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/rabbit/0FiW23RmTuPYSqUv6RSCc.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/sync-lipsync",
      "documentationUrl": "https://fal.ai/models/fal-ai/sync-lipsync/api",
      "inputs": [
        {
          "name": "model",
          "type": "string",
          "description": "The model to use for lipsyncing",
          "required": false,
          "default": "lipsync-1.9.0-beta",
          "enum": [
            "lipsync-1.8.0",
            "lipsync-1.7.1",
            "lipsync-1.9.0-beta"
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/koala/8teUPbRRMtAUTORDvqy0l.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "URL of the input audio",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/lion/vyFWygmZsIZlUO4s0nr2n.wav"
          ]
        },
        {
          "name": "sync_mode",
          "type": "string",
          "description": "Lipsync mode when audio and video durations are out of sync.",
          "required": false,
          "default": "cut_off",
          "enum": [
            "cut_off",
            "loop",
            "bounce",
            "silence",
            "remap"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/sync-lipsync",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/sync-lipsync",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/sync-lipsync queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/sync-lipsync",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/rabbit/0FiW23RmTuPYSqUv6RSCc.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/sync-lipsync",
            "documentationUrl": "https://fal.ai/models/fal-ai/sync-lipsync/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "SyncLipsyncInput": {
              "title": "LipSyncInput",
              "type": "object",
              "properties": {
                "model": {
                  "enum": [
                    "lipsync-1.8.0",
                    "lipsync-1.7.1",
                    "lipsync-1.9.0-beta"
                  ],
                  "title": "Model",
                  "type": "string",
                  "description": "The model to use for lipsyncing",
                  "default": "lipsync-1.9.0-beta"
                },
                "video_url": {
                  "examples": [
                    "https://fal.media/files/koala/8teUPbRRMtAUTORDvqy0l.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video"
                },
                "sync_mode": {
                  "enum": [
                    "cut_off",
                    "loop",
                    "bounce",
                    "silence",
                    "remap"
                  ],
                  "title": "Sync Mode",
                  "type": "string",
                  "description": "Lipsync mode when audio and video durations are out of sync.",
                  "default": "cut_off"
                },
                "audio_url": {
                  "examples": [
                    "https://fal.media/files/lion/vyFWygmZsIZlUO4s0nr2n.wav"
                  ],
                  "title": "Audio Url",
                  "type": "string",
                  "description": "URL of the input audio"
                }
              },
              "x-fal-order-properties": [
                "model",
                "video_url",
                "audio_url",
                "sync_mode"
              ],
              "required": [
                "video_url",
                "audio_url"
              ]
            },
            "SyncLipsyncOutput": {
              "title": "LipSyncOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/rabbit/6gJV-z7RJsF0AxkZHkdgJ_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/sync-lipsync/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SyncLipsyncInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SyncLipsyncOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/sync-lipsync/v2",
      "title": "fal-ai/sync-lipsync/v2",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/sync-lipsync/v2",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/kangaroo/LXWSAzq0Snzf2xmt-qPQL_62439375ce7745769a977f3989d035d7.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/sync-lipsync/v2",
      "documentationUrl": "https://fal.ai/models/fal-ai/sync-lipsync/v2/api",
      "inputs": [
        {
          "name": "model",
          "type": "string",
          "description": "The model to use for lipsyncing. `lipsync-2-pro` will cost roughly 1.67 times as much as `lipsync-2` for the same duration.",
          "required": false,
          "default": "lipsync-2",
          "enum": [
            "lipsync-2",
            "lipsync-2-pro"
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/tiger/IugLCDJRIoGqvqTa-EJTr_3wg74vCqyNuQ-IiBd77MM_output.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "URL of the input audio",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/lion/vyFWygmZsIZlUO4s0nr2n.wav"
          ]
        },
        {
          "name": "sync_mode",
          "type": "string",
          "description": "Lipsync mode when audio and video durations are out of sync.",
          "required": false,
          "default": "cut_off",
          "enum": [
            "cut_off",
            "loop",
            "bounce",
            "silence",
            "remap"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/sync-lipsync/v2",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/sync-lipsync/v2",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/sync-lipsync/v2 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/sync-lipsync/v2",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/kangaroo/LXWSAzq0Snzf2xmt-qPQL_62439375ce7745769a977f3989d035d7.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/sync-lipsync/v2",
            "documentationUrl": "https://fal.ai/models/fal-ai/sync-lipsync/v2/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "SyncLipsyncV2Input": {
              "title": "LipSyncV2Input",
              "type": "object",
              "properties": {
                "model": {
                  "enum": [
                    "lipsync-2",
                    "lipsync-2-pro"
                  ],
                  "title": "Model",
                  "type": "string",
                  "description": "The model to use for lipsyncing. `lipsync-2-pro` will cost roughly 1.67 times as much as `lipsync-2` for the same duration.",
                  "default": "lipsync-2"
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/tiger/IugLCDJRIoGqvqTa-EJTr_3wg74vCqyNuQ-IiBd77MM_output.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video"
                },
                "sync_mode": {
                  "enum": [
                    "cut_off",
                    "loop",
                    "bounce",
                    "silence",
                    "remap"
                  ],
                  "title": "Sync Mode",
                  "type": "string",
                  "description": "Lipsync mode when audio and video durations are out of sync.",
                  "default": "cut_off"
                },
                "audio_url": {
                  "examples": [
                    "https://fal.media/files/lion/vyFWygmZsIZlUO4s0nr2n.wav"
                  ],
                  "title": "Audio Url",
                  "type": "string",
                  "description": "URL of the input audio"
                }
              },
              "x-fal-order-properties": [
                "model",
                "video_url",
                "audio_url",
                "sync_mode"
              ],
              "required": [
                "video_url",
                "audio_url"
              ]
            },
            "SyncLipsyncV2Output": {
              "title": "LipSyncV2Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/kangaroo/WIhlgDEJbccwGwAsvL3vz_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/sync-lipsync/v2/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync/v2/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync/v2": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SyncLipsyncV2Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync/v2/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SyncLipsyncV2Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/sync-lipsync/v2/pro",
      "title": "fal-ai/sync-lipsync/v2/pro",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/sync-lipsync/v2/pro",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/zebra/LWtPGHOS-rwf3YakNhv1k_cbaee3dc5fa14f7a9b6fc63f048de8d4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/sync-lipsync/v2/pro",
      "documentationUrl": "https://fal.ai/models/fal-ai/sync-lipsync/v2/pro/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/sync_v2_pro_video_input.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "URL of the input audio",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/sync_v2_pro_audio_input.mp3"
          ]
        },
        {
          "name": "sync_mode",
          "type": "string",
          "description": "Lipsync mode when audio and video durations are out of sync.",
          "required": false,
          "default": "cut_off",
          "enum": [
            "cut_off",
            "loop",
            "bounce",
            "silence",
            "remap"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/sync-lipsync/v2/pro",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/sync-lipsync/v2/pro",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/sync-lipsync/v2/pro queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/sync-lipsync/v2/pro",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/zebra/LWtPGHOS-rwf3YakNhv1k_cbaee3dc5fa14f7a9b6fc63f048de8d4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/sync-lipsync/v2/pro",
            "documentationUrl": "https://fal.ai/models/fal-ai/sync-lipsync/v2/pro/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "SyncLipsyncV2ProInput": {
              "title": "LipSyncV2ProInput",
              "type": "object",
              "properties": {
                "sync_mode": {
                  "enum": [
                    "cut_off",
                    "loop",
                    "bounce",
                    "silence",
                    "remap"
                  ],
                  "title": "Sync Mode",
                  "type": "string",
                  "description": "Lipsync mode when audio and video durations are out of sync.",
                  "default": "cut_off"
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/sync_v2_pro_video_input.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the input video"
                },
                "audio_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/sync_v2_pro_audio_input.mp3"
                  ],
                  "title": "Audio Url",
                  "type": "string",
                  "description": "URL of the input audio"
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "audio_url",
                "sync_mode"
              ],
              "required": [
                "video_url",
                "audio_url"
              ]
            },
            "SyncLipsyncV2ProOutput": {
              "title": "LipSyncV2ProOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/sync_v2_pro_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/sync-lipsync/v2/pro/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync/v2/pro/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync/v2/pro": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SyncLipsyncV2ProInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/sync-lipsync/v2/pro/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SyncLipsyncV2ProOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/t2v-turbo",
      "title": "fal-ai/t2v-turbo",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/t2v-turbo",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/yirvhUzF8h7DVpCoDGsdU.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/t2v-turbo",
      "documentationUrl": "https://fal.ai/models/fal-ai/t2v-turbo/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate images from",
          "required": true,
          "default": "",
          "examples": [
            "a dog wearing vr goggles on a boat"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of steps to sample",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 12
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "The guidance scale",
          "required": false,
          "default": 7.5,
          "minimum": 0.1,
          "maximum": 30
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate",
          "required": false,
          "default": 16,
          "minimum": 16,
          "maximum": 32
        },
        {
          "name": "export_fps",
          "type": "integer",
          "description": "The FPS of the exported video",
          "required": false,
          "default": 8,
          "minimum": 1,
          "maximum": 24
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The URL to the generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/t2v-turbo",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/t2v-turbo",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/t2v-turbo queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/t2v-turbo",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/yirvhUzF8h7DVpCoDGsdU.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/t2v-turbo",
            "documentationUrl": "https://fal.ai/models/fal-ai/t2v-turbo/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "T2vTurboInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "a dog wearing vr goggles on a boat"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate images from"
                },
                "guidance_scale": {
                  "minimum": 0.1,
                  "maximum": 30,
                  "type": "number",
                  "title": "Guidance Scale",
                  "description": "The guidance scale",
                  "default": 7.5
                },
                "seed": {
                  "anyOf": [
                    {
                      "minimum": 0,
                      "maximum": 203279,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "The seed to use for the random number generator"
                },
                "export_fps": {
                  "minimum": 1,
                  "maximum": 24,
                  "type": "integer",
                  "title": "Export Fps",
                  "description": "The FPS of the exported video",
                  "default": 8
                },
                "num_frames": {
                  "minimum": 16,
                  "maximum": 32,
                  "type": "integer",
                  "title": "Num Frames",
                  "description": "The number of frames to generate",
                  "default": 16
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 12,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "The number of steps to sample",
                  "default": 4
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "num_inference_steps",
                "guidance_scale",
                "num_frames",
                "export_fps"
              ],
              "required": [
                "prompt"
              ]
            },
            "T2vTurboOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "video": {
                  "description": "The URL to the generated video",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/t2v-turbo/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/t2v-turbo/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/t2v-turbo": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/T2vTurboInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/t2v-turbo/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/T2vTurboOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/thinksound",
      "title": "fal-ai/thinksound",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/thinksound",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/thinksound",
      "documentationUrl": "https://fal.ai/models/fal-ai/thinksound/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to generate the audio for.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/thinksound-input.mp4"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "A prompt to guide the audio generation. If not provided, it will be extracted from the video.",
          "required": false,
          "default": ""
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps for audio generation.",
          "required": false,
          "default": 24,
          "minimum": 2,
          "maximum": 100,
          "examples": [
            24
          ]
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "The classifier-free guidance scale for audio generation.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "examples": [
            5
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used to generate the audio."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with audio."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/thinksound",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/thinksound",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/thinksound queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/thinksound",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/thinksound",
            "documentationUrl": "https://fal.ai/models/fal-ai/thinksound/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ThinksoundInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "A prompt to guide the audio generation. If not provided, it will be extracted from the video.",
                  "default": ""
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/thinksound-input.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to generate the audio for."
                },
                "num_inference_steps": {
                  "description": "The number of inference steps for audio generation.",
                  "type": "integer",
                  "examples": [
                    24
                  ],
                  "maximum": 100,
                  "title": "Number of Inference Steps",
                  "minimum": 2,
                  "default": 24
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "cfg_scale": {
                  "description": "The classifier-free guidance scale for audio generation.",
                  "type": "number",
                  "examples": [
                    5
                  ],
                  "maximum": 20,
                  "title": "CFG Scale",
                  "minimum": 1,
                  "default": 5
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "prompt",
                "seed",
                "num_inference_steps",
                "cfg_scale"
              ],
              "required": [
                "video_url"
              ]
            },
            "ThinksoundOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "An acoustic guitar being played indoors."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used to generate the audio."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/thinksound-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video with audio.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt"
              ],
              "required": [
                "video",
                "prompt"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/thinksound/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/thinksound/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/thinksound": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ThinksoundInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/thinksound/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ThinksoundOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/thinksound/audio",
      "title": "fal-ai/thinksound/audio",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/thinksound/audio",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/thinksound/audio",
      "documentationUrl": "https://fal.ai/models/fal-ai/thinksound/audio/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to generate the audio for.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/thinksound-input.mp4"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "A prompt to guide the audio generation. If not provided, it will be extracted from the video.",
          "required": false,
          "default": ""
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps for audio generation.",
          "required": false,
          "default": 24,
          "minimum": 2,
          "maximum": 100,
          "examples": [
            24
          ]
        },
        {
          "name": "cfg_scale",
          "type": "number",
          "description": "The classifier-free guidance scale for audio generation.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "examples": [
            5
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used to generate the audio."
        },
        {
          "name": "audio",
          "type": "string",
          "description": "The generated audio file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/thinksound/audio",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/thinksound/audio",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/thinksound/audio queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/thinksound/audio",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/thinksound/audio",
            "documentationUrl": "https://fal.ai/models/fal-ai/thinksound/audio/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ThinksoundAudioInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "A prompt to guide the audio generation. If not provided, it will be extracted from the video.",
                  "default": ""
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/thinksound-input.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to generate the audio for."
                },
                "num_inference_steps": {
                  "description": "The number of inference steps for audio generation.",
                  "type": "integer",
                  "examples": [
                    24
                  ],
                  "maximum": 100,
                  "title": "Number of Inference Steps",
                  "minimum": 2,
                  "default": 24
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator"
                },
                "cfg_scale": {
                  "description": "The classifier-free guidance scale for audio generation.",
                  "type": "number",
                  "examples": [
                    5
                  ],
                  "maximum": 20,
                  "title": "CFG Scale",
                  "minimum": 1,
                  "default": 5
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "prompt",
                "seed",
                "num_inference_steps",
                "cfg_scale"
              ],
              "required": [
                "video_url"
              ]
            },
            "ThinksoundAudioOutput": {
              "title": "AudioOutput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "An acoustic guitar being played indoors."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used to generate the audio."
                },
                "audio": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/thinksound-audio.wav"
                    }
                  ],
                  "title": "Audio",
                  "description": "The generated audio file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "audio",
                "prompt"
              ],
              "required": [
                "audio",
                "prompt"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/thinksound/audio/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/thinksound/audio/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/thinksound/audio": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ThinksoundAudioInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/thinksound/audio/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ThinksoundAudioOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/topaz/upscale/video",
      "title": "fal-ai/topaz/upscale/video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/topaz/upscale/video",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/topaz-video-upscale.png",
      "playgroundUrl": "https://fal.ai/models/fal-ai/topaz/upscale/video",
      "documentationUrl": "https://fal.ai/models/fal-ai/topaz/upscale/video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the video to upscale",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/kangaroo/y5-1YTGpun17eSeggZMzX_video-1733468228.mp4"
          ]
        },
        {
          "name": "upscale_factor",
          "type": "number",
          "description": "Factor to upscale the video by (e.g. 2.0 doubles width and height)",
          "required": false,
          "default": 2,
          "minimum": 1,
          "maximum": 4
        },
        {
          "name": "target_fps",
          "type": "integer",
          "description": "Target FPS for frame interpolation. If set, frame interpolation will be enabled.",
          "required": false,
          "default": 1,
          "minimum": 16,
          "maximum": 60
        },
        {
          "name": "H264_output",
          "type": "boolean",
          "description": "Whether to use H264 codec for output video. Default is H265.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The upscaled video file"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/topaz/upscale/video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/topaz/upscale/video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/topaz/upscale/video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/topaz/upscale/video",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/topaz-video-upscale.png",
            "playgroundUrl": "https://fal.ai/models/fal-ai/topaz/upscale/video",
            "documentationUrl": "https://fal.ai/models/fal-ai/topaz/upscale/video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "TopazUpscaleVideoInput": {
              "title": "VideoUpscaleRequest",
              "type": "object",
              "properties": {
                "H264_output": {
                  "title": "H264 Output",
                  "type": "boolean",
                  "description": "Whether to use H264 codec for output video. Default is H265.",
                  "default": false
                },
                "video_url": {
                  "examples": [
                    "https://v3.fal.media/files/kangaroo/y5-1YTGpun17eSeggZMzX_video-1733468228.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL of the video to upscale"
                },
                "upscale_factor": {
                  "minimum": 1,
                  "maximum": 4,
                  "type": "number",
                  "title": "Upscale Factor",
                  "description": "Factor to upscale the video by (e.g. 2.0 doubles width and height)",
                  "default": 2
                },
                "target_fps": {
                  "minimum": 16,
                  "maximum": 60,
                  "type": "integer",
                  "title": "Target Fps",
                  "description": "Target FPS for frame interpolation. If set, frame interpolation will be enabled."
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "upscale_factor",
                "target_fps",
                "H264_output"
              ],
              "required": [
                "video_url"
              ]
            },
            "TopazUpscaleVideoOutput": {
              "title": "VideoUpscaleOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/penguin/ztj_LB4gQlW6HIfVs8zX4_upscaled.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The upscaled video file",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/topaz/upscale/video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/topaz/upscale/video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/topaz/upscale/video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TopazUpscaleVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/topaz/upscale/video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TopazUpscaleVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/transpixar",
      "title": "fal-ai/transpixar",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/transpixar",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/transpixar.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/transpixar",
      "documentationUrl": "https://fal.ai/models/fal-ai/transpixar/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video from.",
          "required": true,
          "default": "",
          "examples": [
            "A cloud of dust erupting and dispersing like an explosion."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to generate video from",
          "required": false,
          "default": "",
          "examples": [
            "Distorted, discontinuous, Ugly, blurry, low resolution, motionless, static, disfigured, disconnected limbs, Ugly faces, incomplete arms"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps to perform.",
          "required": false,
          "default": 24,
          "minimum": 1,
          "maximum": 50
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        ",
          "required": false,
          "default": null
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related video to show you.\n        ",
          "required": false,
          "default": 7,
          "minimum": 0,
          "maximum": 20
        },
        {
          "name": "export_fps",
          "type": "integer",
          "description": "The target FPS of the video",
          "required": false,
          "default": 8,
          "minimum": 4,
          "maximum": 32
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generating the video."
        },
        {
          "name": "videos",
          "type": "array",
          "description": "The URL to the generated video"
        },
        {
          "name": "timings",
          "type": "object",
          "description": "Timings"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "\n            Seed of the generated video. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/transpixar",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/transpixar",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/transpixar queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/transpixar",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/transpixar.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/transpixar",
            "documentationUrl": "https://fal.ai/models/fal-ai/transpixar/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "TranspixarInput": {
              "title": "BaseInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A cloud of dust erupting and dispersing like an explosion."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video from."
                },
                "guidance_scale": {
                  "minimum": 0,
                  "maximum": 20,
                  "type": "number",
                  "title": "Guidance scale (CFG)",
                  "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related video to show you.\n        ",
                  "default": 7
                },
                "num_inference_steps": {
                  "minimum": 1,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "The number of inference steps to perform.",
                  "default": 24
                },
                "export_fps": {
                  "minimum": 4,
                  "maximum": 32,
                  "type": "integer",
                  "title": "Export Fps",
                  "description": "The target FPS of the video",
                  "default": 8
                },
                "negative_prompt": {
                  "examples": [
                    "Distorted, discontinuous, Ugly, blurry, low resolution, motionless, static, disfigured, disconnected limbs, Ugly faces, incomplete arms"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to generate video from",
                  "default": ""
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same video every time.\n        "
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_inference_steps",
                "seed",
                "guidance_scale",
                "export_fps"
              ],
              "required": [
                "prompt"
              ]
            },
            "TranspixarOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generating the video."
                },
                "videos": {
                  "examples": [
                    [
                      {
                        "file_size": 146468,
                        "file_name": "rgb.mp4",
                        "content_type": "application/octet-stream",
                        "url": "https://v3.fal.media/files/kangaroo/G6gkFsuyU5L7sJ55nZUPU_rgb.mp4"
                      },
                      {
                        "file_size": 106894,
                        "file_name": "alpha.mp4",
                        "content_type": "application/octet-stream",
                        "url": "https://v3.fal.media/files/lion/g7PBZfQEH9SoPXYgeyl5P_alpha.mp4"
                      }
                    ]
                  ],
                  "title": "Videos",
                  "type": "array",
                  "description": "The URL to the generated video",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                },
                "timings": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object",
                  "title": "Timings"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "\n            Seed of the generated video. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                }
              },
              "x-fal-order-properties": [
                "videos",
                "timings",
                "seed",
                "prompt"
              ],
              "required": [
                "videos",
                "timings",
                "seed",
                "prompt"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/transpixar/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/transpixar/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/transpixar": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TranspixarInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/transpixar/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TranspixarOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/veo2",
      "title": "fal-ai/veo2",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/veo2",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/veo2/veo2.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/veo2",
      "documentationUrl": "https://fal.ai/models/fal-ai/veo2/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt describing the video you want to generate",
          "required": true,
          "default": "",
          "examples": [
            "The camera floats gently through rows of pastel-painted wooden beehives, buzzing honeybees gliding in and out of frame. The motion settles on the refined farmer standing at the center, his pristine white beekeeping suit gleaming in the golden afternoon light. He lifts a jar of honey, tilting it slightly to catch the light. Behind him, tall sunflowers sway rhythmically in the breeze, their petals glowing in the warm sunlight. The camera tilts upward to reveal a retro farmhouse with mint-green shutters, its walls dappled with shadows from swaying trees. Shot with a 35mm lens on Kodak Portra 400 film, the golden light creates rich textures on the farmer's gloves, marmalade jar, and weathered wood of the beehives."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5s",
          "enum": [
            "5s",
            "6s",
            "7s",
            "8s"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the video generation",
          "required": false,
          "default": ""
        },
        {
          "name": "enhance_prompt",
          "type": "boolean",
          "description": "Whether to enhance the video generation",
          "required": false,
          "default": true
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "A seed to use for the video generation",
          "required": false,
          "default": null
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/veo2",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/veo2",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/veo2 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/veo2",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/veo2/veo2.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/veo2",
            "documentationUrl": "https://fal.ai/models/fal-ai/veo2/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Veo2Input": {
              "title": "TextToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The camera floats gently through rows of pastel-painted wooden beehives, buzzing honeybees gliding in and out of frame. The motion settles on the refined farmer standing at the center, his pristine white beekeeping suit gleaming in the golden afternoon light. He lifts a jar of honey, tilting it slightly to catch the light. Behind him, tall sunflowers sway rhythmically in the breeze, their petals glowing in the warm sunlight. The camera tilts upward to reveal a retro farmhouse with mint-green shutters, its walls dappled with shadows from swaying trees. Shot with a 35mm lens on Kodak Portra 400 film, the golden light creates rich textures on the farmer's gloves, marmalade jar, and weathered wood of the beehives."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt describing the video you want to generate",
                  "minLength": 1
                },
                "duration": {
                  "enum": [
                    "5s",
                    "6s",
                    "7s",
                    "8s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video in seconds",
                  "default": "5s"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "16:9"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "A seed to use for the video generation"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the video generation"
                },
                "enhance_prompt": {
                  "title": "Enhance Prompt",
                  "type": "boolean",
                  "description": "Whether to enhance the video generation",
                  "default": true
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "duration",
                "negative_prompt",
                "enhance_prompt",
                "seed"
              ],
              "required": [
                "prompt"
              ]
            },
            "Veo2Output": {
              "title": "TextToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/tiger/83-YzufmOlsnhqq5ed382_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/veo2/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo2/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo2": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Veo2Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo2/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Veo2Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/veo2/image-to-video",
      "title": "fal-ai/veo2/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/veo2/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/veo2-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/veo2/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/veo2/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt describing how the image should be animated",
          "required": true,
          "default": "",
          "examples": [
            "A lego chef cooking eggs"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image to animate. Should be 720p or higher resolution.",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/6fq8JDSjb1osE_c3J_F2H.png"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "auto_prefer_portrait",
            "16:9",
            "9:16"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "5s",
          "enum": [
            "5s",
            "6s",
            "7s",
            "8s"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/veo2/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/veo2/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/veo2/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/veo2/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/veo2-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/veo2/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/veo2/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Veo2ImageToVideoInput": {
              "title": "ImageToVideoInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A lego chef cooking eggs"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt describing how the image should be animated"
                },
                "duration": {
                  "enum": [
                    "5s",
                    "6s",
                    "7s",
                    "8s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video in seconds",
                  "default": "5s"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "auto_prefer_portrait",
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video",
                  "default": "auto"
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/6fq8JDSjb1osE_c3J_F2H.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the input image to animate. Should be 720p or higher resolution."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "aspect_ratio",
                "duration"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "Veo2ImageToVideoOutput": {
              "title": "ImageToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/monkey/jOYy3rvGB33vumzulpXd5_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/veo2/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo2/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo2/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Veo2ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo2/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Veo2ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/veo3",
      "title": "fal-ai/veo3",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/veo3",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/veo3",
      "documentationUrl": "https://fal.ai/models/fal-ai/veo3/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt describing the video you want to generate",
          "required": true,
          "default": "",
          "examples": [
            "A casual street interview on a busy New York City sidewalk in the afternoon. The interviewer holds a plain, unbranded microphone and asks: Have you seen Google's new Veo3 model It is a super good model. Person replies: Yeah I saw it, it's already available on fal. It's crazy good."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video. If it is not set to 16:9, the video will be outpainted.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "8s",
          "enum": [
            "8s"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the video generation",
          "required": false,
          "default": ""
        },
        {
          "name": "enhance_prompt",
          "type": "boolean",
          "description": "Whether to enhance the video generation",
          "required": false,
          "default": true
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "A seed to use for the video generation",
          "required": false,
          "default": null
        },
        {
          "name": "auto_fix",
          "type": "boolean",
          "description": "Whether to automatically attempt to fix prompts that fail content policy or other validation checks by rewriting them",
          "required": false,
          "default": true
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "generate_audio",
          "type": "boolean",
          "description": "Whether to generate audio for the video. If false, %33 less credits will be used.",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/veo3",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/veo3",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/veo3 queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/veo3",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/veo3",
            "documentationUrl": "https://fal.ai/models/fal-ai/veo3/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Veo3Input": {
              "title": "TextToVideoPreviewInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A casual street interview on a busy New York City sidewalk in the afternoon. The interviewer holds a plain, unbranded microphone and asks: Have you seen Google's new Veo3 model It is a super good model. Person replies: Yeah I saw it, it's already available on fal. It's crazy good."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt describing the video you want to generate",
                  "minLength": 1
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video. If it is not set to 16:9, the video will be outpainted.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "generate_audio": {
                  "title": "Generate Audio",
                  "type": "boolean",
                  "description": "Whether to generate audio for the video. If false, %33 less credits will be used.",
                  "default": true
                },
                "auto_fix": {
                  "title": "Auto Fix",
                  "type": "boolean",
                  "description": "Whether to automatically attempt to fix prompts that fail content policy or other validation checks by rewriting them",
                  "default": true
                },
                "duration": {
                  "enum": [
                    "8s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video in seconds",
                  "default": "8s"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "A seed to use for the video generation"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the video generation"
                },
                "enhance_prompt": {
                  "title": "Enhance Prompt",
                  "type": "boolean",
                  "description": "Whether to enhance the video generation",
                  "default": true
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "duration",
                "negative_prompt",
                "enhance_prompt",
                "seed",
                "auto_fix",
                "resolution",
                "generate_audio"
              ],
              "required": [
                "prompt"
              ]
            },
            "Veo3Output": {
              "title": "TextToVideoPreviewOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/penguin/Q-2dpcjIoQOldJRL3grsc_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/veo3/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Veo3Input"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Veo3Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/veo3/fast",
      "title": "fal-ai/veo3/fast",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/veo3/fast",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/veo3/fast",
      "documentationUrl": "https://fal.ai/models/fal-ai/veo3/fast/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt describing the video you want to generate",
          "required": true,
          "default": "",
          "examples": [
            "A casual street interview on a busy New York City sidewalk in the afternoon. The interviewer holds a plain, unbranded microphone and asks: Have you seen Google's new Veo3 model It is a super good model. Person replies: Yeah I saw it, it's already available on fal. It's crazy good."
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the generated video. If it is not set to 16:9, the video will be outpainted.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "8s",
          "enum": [
            "8s"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "A negative prompt to guide the video generation",
          "required": false,
          "default": ""
        },
        {
          "name": "enhance_prompt",
          "type": "boolean",
          "description": "Whether to enhance the video generation",
          "required": false,
          "default": true
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "A seed to use for the video generation",
          "required": false,
          "default": null
        },
        {
          "name": "auto_fix",
          "type": "boolean",
          "description": "Whether to automatically attempt to fix prompts that fail content policy or other validation checks by rewriting them",
          "required": false,
          "default": true
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "The resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        },
        {
          "name": "generate_audio",
          "type": "boolean",
          "description": "Whether to generate audio for the video. If false, %33 less credits will be used.",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/veo3/fast",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/veo3/fast",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/veo3/fast queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/veo3/fast",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/veo3/fast",
            "documentationUrl": "https://fal.ai/models/fal-ai/veo3/fast/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Veo3FastInput": {
              "title": "TextToVideoPreviewInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A casual street interview on a busy New York City sidewalk in the afternoon. The interviewer holds a plain, unbranded microphone and asks: Have you seen Google's new Veo3 model It is a super good model. Person replies: Yeah I saw it, it's already available on fal. It's crazy good."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt describing the video you want to generate",
                  "minLength": 1
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the generated video. If it is not set to 16:9, the video will be outpainted.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "The resolution of the generated video",
                  "default": "720p"
                },
                "generate_audio": {
                  "title": "Generate Audio",
                  "type": "boolean",
                  "description": "Whether to generate audio for the video. If false, %33 less credits will be used.",
                  "default": true
                },
                "auto_fix": {
                  "title": "Auto Fix",
                  "type": "boolean",
                  "description": "Whether to automatically attempt to fix prompts that fail content policy or other validation checks by rewriting them",
                  "default": true
                },
                "duration": {
                  "enum": [
                    "8s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video in seconds",
                  "default": "8s"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "A seed to use for the video generation"
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "A negative prompt to guide the video generation"
                },
                "enhance_prompt": {
                  "title": "Enhance Prompt",
                  "type": "boolean",
                  "description": "Whether to enhance the video generation",
                  "default": true
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "aspect_ratio",
                "duration",
                "negative_prompt",
                "enhance_prompt",
                "seed",
                "auto_fix",
                "resolution",
                "generate_audio"
              ],
              "required": [
                "prompt"
              ]
            },
            "Veo3FastOutput": {
              "title": "TextToVideoPreviewOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/penguin/Q-2dpcjIoQOldJRL3grsc_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/veo3/fast/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/fast/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/fast": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Veo3FastInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/fast/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Veo3FastOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/veo3/fast/image-to-video",
      "title": "fal-ai/veo3/fast/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/veo3/fast/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/veo3/fast/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/veo3/fast/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt describing how the image should be animated",
          "required": true,
          "default": "",
          "examples": [
            "A woman looks into the camera, breathes in, then exclaims energetically, \"have you guys checked out Veo3 Image-to-Video on Fal? It's incredible!\""
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image to animate. Should be 720p or higher resolution in 16:9 aspect ratio. If the image is not in 16:9 aspect ratio, it will be cropped to fit.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/veo3-i2v-input.png"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "8s",
          "enum": [
            "8s"
          ]
        },
        {
          "name": "generate_audio",
          "type": "boolean",
          "description": "Whether to generate audio for the video. If false, %33 less credits will be used.",
          "required": false,
          "default": true
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/veo3/fast/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/veo3/fast/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/veo3/fast/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/veo3/fast/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/veo3/fast/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/veo3/fast/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Veo3FastImageToVideoInput": {
              "title": "ImageToVideoPreviewInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman looks into the camera, breathes in, then exclaims energetically, \"have you guys checked out Veo3 Image-to-Video on Fal? It's incredible!\""
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt describing how the image should be animated"
                },
                "duration": {
                  "enum": [
                    "8s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video in seconds",
                  "default": "8s"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video",
                  "default": "720p"
                },
                "generate_audio": {
                  "title": "Generate Audio",
                  "type": "boolean",
                  "description": "Whether to generate audio for the video. If false, %33 less credits will be used.",
                  "default": true
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/veo3-i2v-input.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the input image to animate. Should be 720p or higher resolution in 16:9 aspect ratio. If the image is not in 16:9 aspect ratio, it will be cropped to fit."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "generate_audio",
                "resolution"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "Veo3FastImageToVideoOutput": {
              "title": "ImageToVideoPreviewOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/veo3-i2v-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/veo3/fast/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/fast/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/fast/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Veo3FastImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/fast/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Veo3FastImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/veo3/image-to-video",
      "title": "fal-ai/veo3/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/veo3/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-5.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/veo3/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/veo3/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt describing how the image should be animated",
          "required": true,
          "default": "",
          "examples": [
            "A woman looks into the camera, breathes in, then exclaims energetically, \"have you guys checked out Veo3 Image-to-Video on Fal? It's incredible!\""
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image to animate. Should be 720p or higher resolution in 16:9 aspect ratio. If the image is not in 16:9 aspect ratio, it will be cropped to fit.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/veo3-i2v-input.png"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video in seconds",
          "required": false,
          "default": "8s",
          "enum": [
            "8s"
          ]
        },
        {
          "name": "generate_audio",
          "type": "boolean",
          "description": "Whether to generate audio for the video. If false, %33 less credits will be used.",
          "required": false,
          "default": true
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video",
          "required": false,
          "default": "720p",
          "enum": [
            "720p",
            "1080p"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/veo3/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/veo3/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/veo3/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/veo3/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-5.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/veo3/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/veo3/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "Veo3ImageToVideoInput": {
              "title": "ImageToVideoPreviewInput",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman looks into the camera, breathes in, then exclaims energetically, \"have you guys checked out Veo3 Image-to-Video on Fal? It's incredible!\""
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt describing how the image should be animated"
                },
                "duration": {
                  "enum": [
                    "8s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video in seconds",
                  "default": "8s"
                },
                "resolution": {
                  "enum": [
                    "720p",
                    "1080p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video",
                  "default": "720p"
                },
                "generate_audio": {
                  "title": "Generate Audio",
                  "type": "boolean",
                  "description": "Whether to generate audio for the video. If false, %33 less credits will be used.",
                  "default": true
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/veo3-i2v-input.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the input image to animate. Should be 720p or higher resolution in 16:9 aspect ratio. If the image is not in 16:9 aspect ratio, it will be cropped to fit."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "duration",
                "generate_audio",
                "resolution"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "Veo3ImageToVideoOutput": {
              "title": "ImageToVideoPreviewOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/veo3-i2v-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/veo3/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Veo3ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/veo3/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Veo3ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/video-upscaler",
      "title": "fal-ai/video-upscaler",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/video-upscaler",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/video-upscaler-thumbnail.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/video-upscaler",
      "documentationUrl": "https://fal.ai/models/fal-ai/video-upscaler/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to upscale",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/videos/_o3VmzjOytBwRjCVPFX6i_output.mp4"
          ]
        },
        {
          "name": "scale",
          "type": "number",
          "description": "The scale factor",
          "required": false,
          "default": 2,
          "minimum": 1,
          "maximum": 8
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The stitched video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/video-upscaler",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/video-upscaler",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/video-upscaler queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/video-upscaler",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/video-upscaler-thumbnail.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/video-upscaler",
            "documentationUrl": "https://fal.ai/models/fal-ai/video-upscaler/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "VideoUpscalerInput": {
              "title": "Input",
              "type": "object",
              "properties": {
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/videos/_o3VmzjOytBwRjCVPFX6i_output.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to upscale"
                },
                "scale": {
                  "description": "The scale factor",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 8,
                  "title": "Scale",
                  "default": 2
                }
              },
              "x-fal-order-properties": [
                "video_url",
                "scale"
              ],
              "required": [
                "video_url"
              ]
            },
            "VideoUpscalerOutput": {
              "title": "Output",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "content_type": "video/mp4",
                      "url": "https://storage.googleapis.com/falserverless/videos/h0jgPaO6AJAbyrsNYNbGl_upscaled_video.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The stitched video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/video-upscaler/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/video-upscaler/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/video-upscaler": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/VideoUpscalerInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/video-upscaler/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/VideoUpscalerOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/vidu/image-to-video",
      "title": "fal-ai/vidu/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/vidu/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/vidu/vidu.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/vidu/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation, max 1500 characters",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/vidu/stylish_woman.webp"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "movement_amplitude",
          "type": "string",
          "description": "The movement amplitude of objects in the frame",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/vidu/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/vidu/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/vidu/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/vidu/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/vidu/vidu.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/vidu/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ViduImageToVideoInput": {
              "title": "ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 1500,
                  "description": "Text prompt for video generation, max 1500 characters"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                },
                "movement_amplitude": {
                  "enum": [
                    "auto",
                    "small",
                    "medium",
                    "large"
                  ],
                  "title": "Movement Amplitude",
                  "type": "string",
                  "description": "The movement amplitude of objects in the frame",
                  "default": "auto"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/vidu/stylish_woman.webp"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "seed",
                "movement_amplitude"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "ViduImageToVideoOutput": {
              "title": "VideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/kangaroo/gzfzC5FXvcgZegQmy90L1_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/vidu/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ViduImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ViduImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/vidu/q1/image-to-video",
      "title": "fal-ai/vidu/q1/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/vidu/q1/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/q1/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/vidu/q1/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation, max 1500 characters",
          "required": true,
          "default": "",
          "examples": [
            "The astronaut waved and the camera moved up."
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/video_models/vidu_i2v.jpg"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "movement_amplitude",
          "type": "string",
          "description": "The movement amplitude of objects in the frame",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video using the Q1 model from a single image"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/vidu/q1/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/vidu/q1/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/vidu/q1/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/vidu/q1/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/q1/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/vidu/q1/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ViduQ1ImageToVideoInput": {
              "title": "Q1ImageToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The astronaut waved and the camera moved up."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 1500,
                  "description": "Text prompt for video generation, max 1500 characters"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed for the random number generator"
                },
                "movement_amplitude": {
                  "enum": [
                    "auto",
                    "small",
                    "medium",
                    "large"
                  ],
                  "title": "Movement Amplitude",
                  "type": "string",
                  "description": "The movement amplitude of objects in the frame",
                  "default": "auto"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/video_models/vidu_i2v.jpg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "image_url",
                "seed",
                "movement_amplitude"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "ViduQ1ImageToVideoOutput": {
              "title": "Q1ImageToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/model_tests/video_models/vidu_i2v_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video using the Q1 model from a single image",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/vidu/q1/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ViduQ1ImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ViduQ1ImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/vidu/q1/reference-to-video",
      "title": "fal-ai/vidu/q1/reference-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/vidu/q1/reference-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/q1/reference-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/vidu/q1/reference-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation, max 1500 characters",
          "required": true,
          "default": "",
          "examples": [
            "A young woman and a monkey inside a colorful house"
          ]
        },
        {
          "name": "reference_image_urls",
          "type": "array",
          "description": "URLs of the reference images to use for consistent subject appearance. Q1 model supports up to 7 reference images.",
          "required": true,
          "default": [],
          "examples": [
            [
              "https://v3.fal.media/files/panda/HDpZj0eLjWwCpjA5__0l1_0e6cd0b9eb7a4a968c0019a4eee15e46.png",
              "https://v3.fal.media/files/zebra/153izt1cBlMU-TwD0_B7Q_ea34618f5d974653a16a755aa61e488a.png",
              "https://v3.fal.media/files/koala/RCSZ7VEEKGFDfMoGHCwzo_f626718793e94769b1ad36d5891864a4.png"
            ]
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the output video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "movement_amplitude",
          "type": "string",
          "description": "The movement amplitude of objects in the frame",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ]
        },
        {
          "name": "bgm",
          "type": "boolean",
          "description": "Whether to add background music to the generated video",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with consistent subjects from reference images using the Q1 model"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/vidu/q1/reference-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/vidu/q1/reference-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/vidu/q1/reference-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/vidu/q1/reference-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/q1/reference-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/vidu/q1/reference-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ViduQ1ReferenceToVideoInput": {
              "title": "Q1ReferenceToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A young woman and a monkey inside a colorful house"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 1500,
                  "description": "Text prompt for video generation, max 1500 characters"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the output video",
                  "default": "16:9"
                },
                "bgm": {
                  "title": "Bgm",
                  "type": "boolean",
                  "description": "Whether to add background music to the generated video",
                  "default": false
                },
                "reference_image_urls": {
                  "examples": [
                    [
                      "https://v3.fal.media/files/panda/HDpZj0eLjWwCpjA5__0l1_0e6cd0b9eb7a4a968c0019a4eee15e46.png",
                      "https://v3.fal.media/files/zebra/153izt1cBlMU-TwD0_B7Q_ea34618f5d974653a16a755aa61e488a.png",
                      "https://v3.fal.media/files/koala/RCSZ7VEEKGFDfMoGHCwzo_f626718793e94769b1ad36d5891864a4.png"
                    ]
                  ],
                  "title": "Reference Image Urls",
                  "type": "array",
                  "description": "URLs of the reference images to use for consistent subject appearance. Q1 model supports up to 7 reference images.",
                  "items": {
                    "type": "string"
                  }
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                },
                "movement_amplitude": {
                  "enum": [
                    "auto",
                    "small",
                    "medium",
                    "large"
                  ],
                  "title": "Movement Amplitude",
                  "type": "string",
                  "description": "The movement amplitude of objects in the frame",
                  "default": "auto"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "reference_image_urls",
                "seed",
                "aspect_ratio",
                "movement_amplitude",
                "bgm"
              ],
              "required": [
                "prompt",
                "reference_image_urls"
              ]
            },
            "ViduQ1ReferenceToVideoOutput": {
              "title": "Q1ReferenceToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/penguin/senyvDPQAk8Fvt5voX3NU_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video with consistent subjects from reference images using the Q1 model",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/vidu/q1/reference-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/reference-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/reference-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ViduQ1ReferenceToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/reference-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ViduQ1ReferenceToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/vidu/q1/start-end-to-video",
      "title": "fal-ai/vidu/q1/start-end-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/vidu/q1/start-end-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/q1/start-end-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/vidu/q1/start-end-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation, max 1500 characters",
          "required": true,
          "default": "",
          "examples": [
            "Dragon lands on a rock"
          ]
        },
        {
          "name": "start_image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/zebra/sgsdKvPigPhJ1S7Hl5bWc_first_frame_q1.png"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "URL of the image to use as the last frame",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/kangaroo/CASBu_OmOnZ8IafirarFL_last_frame_q1.png"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "movement_amplitude",
          "type": "string",
          "description": "The movement amplitude of objects in the frame",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated transition video between start and end frames using the Q1 model"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/vidu/q1/start-end-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/vidu/q1/start-end-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/vidu/q1/start-end-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/vidu/q1/start-end-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/q1/start-end-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/vidu/q1/start-end-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ViduQ1StartEndToVideoInput": {
              "title": "Q1StartEndToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Dragon lands on a rock"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 1500,
                  "description": "Text prompt for video generation, max 1500 characters"
                },
                "start_image_url": {
                  "examples": [
                    "https://v3.fal.media/files/zebra/sgsdKvPigPhJ1S7Hl5bWc_first_frame_q1.png"
                  ],
                  "title": "Start Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                },
                "movement_amplitude": {
                  "enum": [
                    "auto",
                    "small",
                    "medium",
                    "large"
                  ],
                  "title": "Movement Amplitude",
                  "type": "string",
                  "description": "The movement amplitude of objects in the frame",
                  "default": "auto"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed for the random number generator"
                },
                "end_image_url": {
                  "examples": [
                    "https://v3.fal.media/files/kangaroo/CASBu_OmOnZ8IafirarFL_last_frame_q1.png"
                  ],
                  "title": "End Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the last frame"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "start_image_url",
                "end_image_url",
                "seed",
                "movement_amplitude"
              ],
              "required": [
                "prompt",
                "start_image_url",
                "end_image_url"
              ]
            },
            "ViduQ1StartEndToVideoOutput": {
              "title": "Q1StartEndToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/zebra/-ACpJE6m4JQSBCCeNB51S_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated transition video between start and end frames using the Q1 model",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/vidu/q1/start-end-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/start-end-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/start-end-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ViduQ1StartEndToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/start-end-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ViduQ1StartEndToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/vidu/q1/text-to-video",
      "title": "fal-ai/vidu/q1/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/vidu/q1/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/q1/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/vidu/q1/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation, max 1500 characters",
          "required": true,
          "default": "",
          "examples": [
            "In an ultra-realistic fashion photography style featuring light blue and pale amber tones, an astronaut in a spacesuit walks through the fog. The background consists of enchanting white and golden lights, creating a minimalist still life and an impressive panoramic scene."
          ]
        },
        {
          "name": "style",
          "type": "string",
          "description": "The style of output video",
          "required": false,
          "default": "general",
          "enum": [
            "general",
            "anime"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed for the random number generator",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the output video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "movement_amplitude",
          "type": "string",
          "description": "The movement amplitude of objects in the frame",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video using the Q1 model"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/vidu/q1/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/vidu/q1/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/vidu/q1/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/vidu/q1/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Upscale-1.jpeg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/q1/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/vidu/q1/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ViduQ1TextToVideoInput": {
              "title": "Q1TextToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "In an ultra-realistic fashion photography style featuring light blue and pale amber tones, an astronaut in a spacesuit walks through the fog. The background consists of enchanting white and golden lights, creating a minimalist still life and an impressive panoramic scene."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 1500,
                  "description": "Text prompt for video generation, max 1500 characters"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the output video",
                  "default": "16:9"
                },
                "style": {
                  "enum": [
                    "general",
                    "anime"
                  ],
                  "title": "Style",
                  "type": "string",
                  "description": "The style of output video",
                  "default": "general"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Seed for the random number generator"
                },
                "movement_amplitude": {
                  "enum": [
                    "auto",
                    "small",
                    "medium",
                    "large"
                  ],
                  "title": "Movement Amplitude",
                  "type": "string",
                  "description": "The movement amplitude of objects in the frame",
                  "default": "auto"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "style",
                "seed",
                "aspect_ratio",
                "movement_amplitude"
              ],
              "required": [
                "prompt"
              ]
            },
            "ViduQ1TextToVideoOutput": {
              "title": "Q1TextToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/kangaroo/cwS8iPO1jw8USSInsEKJW_output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video using the Q1 model",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/vidu/q1/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ViduQ1TextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/q1/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ViduQ1TextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/vidu/reference-to-video",
      "title": "fal-ai/vidu/reference-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/vidu/reference-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/vidu/vidu.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/reference-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/vidu/reference-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation, max 1500 characters",
          "required": true,
          "default": "",
          "examples": [
            "The little devil is looking at the apple on the beach and walking around it."
          ]
        },
        {
          "name": "reference_image_urls",
          "type": "array",
          "description": "URLs of the reference images to use for consistent subject appearance",
          "required": true,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/web-examples/vidu/new-examples/reference1.png",
              "https://storage.googleapis.com/falserverless/web-examples/vidu/new-examples/reference2.png",
              "https://storage.googleapis.com/falserverless/web-examples/vidu/new-examples/reference3.png"
            ]
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the output video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "movement_amplitude",
          "type": "string",
          "description": "The movement amplitude of objects in the frame",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video with consistent subjects from reference images"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/vidu/reference-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/vidu/reference-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/vidu/reference-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/vidu/reference-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/vidu/vidu.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/reference-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/vidu/reference-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ViduReferenceToVideoInput": {
              "title": "ReferenceToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The little devil is looking at the apple on the beach and walking around it."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 1500,
                  "description": "Text prompt for video generation, max 1500 characters"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the output video",
                  "default": "16:9"
                },
                "reference_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/web-examples/vidu/new-examples/reference1.png",
                      "https://storage.googleapis.com/falserverless/web-examples/vidu/new-examples/reference2.png",
                      "https://storage.googleapis.com/falserverless/web-examples/vidu/new-examples/reference3.png"
                    ]
                  ],
                  "title": "Reference Image Urls",
                  "type": "array",
                  "description": "URLs of the reference images to use for consistent subject appearance",
                  "items": {
                    "type": "string"
                  }
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                },
                "movement_amplitude": {
                  "enum": [
                    "auto",
                    "small",
                    "medium",
                    "large"
                  ],
                  "title": "Movement Amplitude",
                  "type": "string",
                  "description": "The movement amplitude of objects in the frame",
                  "default": "auto"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "reference_image_urls",
                "seed",
                "aspect_ratio",
                "movement_amplitude"
              ],
              "required": [
                "prompt",
                "reference_image_urls"
              ]
            },
            "ViduReferenceToVideoOutput": {
              "title": "ReferenceToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/vidu/new-examples/referencevideo.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video with consistent subjects from reference images",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/vidu/reference-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/reference-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/reference-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ViduReferenceToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/reference-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ViduReferenceToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/vidu/start-end-to-video",
      "title": "fal-ai/vidu/start-end-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/vidu/start-end-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/vidu/vidu.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/start-end-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/vidu/start-end-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "Text prompt for video generation, max 1500 characters",
          "required": true,
          "default": "",
          "examples": [
            "Transform the car frame into a complete vehicle."
          ]
        },
        {
          "name": "start_image_url",
          "type": "string",
          "description": "URL of the image to use as the first frame",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/vidu/2-carchasis.png"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "URL of the image to use as the last frame",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/vidu/2-carbody.png"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "movement_amplitude",
          "type": "string",
          "description": "The movement amplitude of objects in the frame",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated transition video between start and end frames"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/vidu/start-end-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/vidu/start-end-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/vidu/start-end-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/vidu/start-end-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/vidu/vidu.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/start-end-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/vidu/start-end-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ViduStartEndToVideoInput": {
              "title": "StartEndToVideoRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Transform the car frame into a complete vehicle."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "maxLength": 1500,
                  "description": "Text prompt for video generation, max 1500 characters"
                },
                "start_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/vidu/2-carchasis.png"
                  ],
                  "title": "Start Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the first frame"
                },
                "movement_amplitude": {
                  "enum": [
                    "auto",
                    "small",
                    "medium",
                    "large"
                  ],
                  "title": "Movement Amplitude",
                  "type": "string",
                  "description": "The movement amplitude of objects in the frame",
                  "default": "auto"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                },
                "end_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/vidu/2-carbody.png"
                  ],
                  "title": "End Image Url",
                  "type": "string",
                  "description": "URL of the image to use as the last frame"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "start_image_url",
                "end_image_url",
                "seed",
                "movement_amplitude"
              ],
              "required": [
                "prompt",
                "start_image_url",
                "end_image_url"
              ]
            },
            "ViduStartEndToVideoOutput": {
              "title": "StartEndToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/vidu/2-car.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated transition video between start and end frames",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/vidu/start-end-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/start-end-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/start-end-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ViduStartEndToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/start-end-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ViduStartEndToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/vidu/template-to-video",
      "title": "fal-ai/vidu/template-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/vidu/template-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/vidu/vidu.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/template-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/vidu/template-to-video/api",
      "inputs": [
        {
          "name": "template",
          "type": "string",
          "description": "AI video template to use. Pricing varies by template: Standard templates (hug, kiss, love_pose, etc.) cost 4 credits ($0.20), Premium templates (lunar_newyear, dynasty_dress, dreamy_wedding, etc.) cost 6 credits ($0.30), and Advanced templates (live_photo) cost 10 credits ($0.50).",
          "required": false,
          "default": "hug",
          "enum": [
            "dreamy_wedding",
            "romantic_lift",
            "sweet_proposal",
            "couple_arrival",
            "cupid_arrow",
            "pet_lovers",
            "lunar_newyear",
            "hug",
            "kiss",
            "dynasty_dress",
            "wish_sender",
            "love_pose",
            "hair_swap",
            "youth_rewind",
            "morphlab",
            "live_photo",
            "emotionlab",
            "live_memory",
            "interaction",
            "christmas",
            "pet_finger",
            "eat_mushrooms",
            "beast_chase_library",
            "beast_chase_supermarket",
            "petal_scattered",
            "emoji_figure",
            "hair_color_change",
            "multiple_people_kissing",
            "beast_chase_amazon",
            "beast_chase_mountain",
            "balloonman_explodes_pro",
            "get_thinner",
            "jump2pool",
            "bodyshake",
            "jiggle_up",
            "shake_it_dance",
            "subject_3",
            "pubg_winner_hit",
            "shake_it_down",
            "blueprint_supreme",
            "hip_twist",
            "motor_dance",
            "rat_dance",
            "kwok_dance",
            "leg_sweep_dance",
            "heeseung_march",
            "shake_to_max",
            "dame_un_grrr",
            "i_know",
            "lit_bounce",
            "wave_dance",
            "chill_dance",
            "hip_flicking",
            "sakura_season",
            "zongzi_wrap",
            "zongzi_drop",
            "dragonboat_shot",
            "rain_kiss",
            "child_memory",
            "couple_drop",
            "couple_walk",
            "flower_receive",
            "love_drop",
            "cheek_kiss",
            "carry_me",
            "blow_kiss",
            "love_fall",
            "french_kiss_8s",
            "workday_feels",
            "love_story",
            "bloom_magic",
            "ghibli",
            "minecraft",
            "box_me",
            "claw_me",
            "clayshot",
            "manga_meme",
            "quad_meme",
            "pixel_me",
            "clayshot_duo",
            "irasutoya",
            "american_comic",
            "simpsons_comic",
            "yayoi_kusama_style",
            "pop_art",
            "jojo_style",
            "slice_therapy",
            "balloon_flyaway",
            "flying",
            "paperman",
            "pinch",
            "bloom_doorobear",
            "gender_swap",
            "nap_me",
            "sexy_me",
            "spin360",
            "smooth_shift",
            "paper_fall",
            "jump_to_cloud",
            "pilot",
            "sweet_dreams",
            "soul_depart",
            "punch_hit",
            "watermelon_hit",
            "split_stance_pet",
            "make_face",
            "break_glass",
            "split_stance_human",
            "covered_liquid_metal",
            "fluffy_plunge",
            "pet_belly_dance",
            "water_float",
            "relax_cut",
            "head_to_balloon",
            "cloning",
            "across_the_universe_jungle",
            "clothes_spinning_remnant",
            "across_the_universe_jurassic",
            "across_the_universe_moon",
            "fisheye_pet",
            "hitchcock_zoom",
            "cute_bangs",
            "earth_zoom_out",
            "fisheye_human",
            "drive_yacht",
            "virtual_singer",
            "earth_zoom_in",
            "aliens_coming",
            "drive_ferrari",
            "bjd_style",
            "virtual_fitting",
            "orbit",
            "zoom_in",
            "ai_outfit",
            "spin180",
            "orbit_dolly",
            "orbit_dolly_fast",
            "auto_spin",
            "walk_forward",
            "outfit_show",
            "zoom_in_fast",
            "zoom_out_image",
            "zoom_out_startend",
            "muscling",
            "captain_america",
            "hulk",
            "cap_walk",
            "hulk_dive",
            "exotic_princess",
            "beast_companion",
            "cartoon_doll",
            "golden_epoch",
            "oscar_gala",
            "fashion_stride",
            "star_carpet",
            "flame_carpet",
            "frost_carpet",
            "mecha_x",
            "style_me",
            "tap_me",
            "saber_warrior",
            "pet2human",
            "graduation",
            "fishermen",
            "happy_birthday",
            "fairy_me",
            "ladudu_me",
            "ladudu_me_random",
            "squid_game",
            "superman",
            "grow_wings",
            "clevage",
            "fly_with_doraemon",
            "creatice_product_down",
            "pole_dance",
            "hug_from_behind",
            "creatice_product_up_cybercity",
            "creatice_product_up_bluecircuit",
            "creatice_product_up",
            "run_fast",
            "background_explosion"
          ]
        },
        {
          "name": "input_image_urls",
          "type": "array",
          "description": "URLs of the images to use with the template. Number of images required varies by template: 'dynasty_dress' and 'shop_frame' accept 1-2 images, 'wish_sender' requires exactly 3 images, all other templates accept only 1 image.",
          "required": true,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/web-examples/vidu/hug.PNG"
            ]
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for generation",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "The aspect ratio of the output video",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video using a predefined template"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/vidu/template-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/vidu/template-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/vidu/template-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/vidu/template-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/web-examples/vidu/vidu.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/vidu/template-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/vidu/template-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "ViduTemplateToVideoInput": {
              "title": "TemplateToVideoRequest",
              "type": "object",
              "properties": {
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "The aspect ratio of the output video",
                  "default": "16:9"
                },
                "template": {
                  "enum": [
                    "dreamy_wedding",
                    "romantic_lift",
                    "sweet_proposal",
                    "couple_arrival",
                    "cupid_arrow",
                    "pet_lovers",
                    "lunar_newyear",
                    "hug",
                    "kiss",
                    "dynasty_dress",
                    "wish_sender",
                    "love_pose",
                    "hair_swap",
                    "youth_rewind",
                    "morphlab",
                    "live_photo",
                    "emotionlab",
                    "live_memory",
                    "interaction",
                    "christmas",
                    "pet_finger",
                    "eat_mushrooms",
                    "beast_chase_library",
                    "beast_chase_supermarket",
                    "petal_scattered",
                    "emoji_figure",
                    "hair_color_change",
                    "multiple_people_kissing",
                    "beast_chase_amazon",
                    "beast_chase_mountain",
                    "balloonman_explodes_pro",
                    "get_thinner",
                    "jump2pool",
                    "bodyshake",
                    "jiggle_up",
                    "shake_it_dance",
                    "subject_3",
                    "pubg_winner_hit",
                    "shake_it_down",
                    "blueprint_supreme",
                    "hip_twist",
                    "motor_dance",
                    "rat_dance",
                    "kwok_dance",
                    "leg_sweep_dance",
                    "heeseung_march",
                    "shake_to_max",
                    "dame_un_grrr",
                    "i_know",
                    "lit_bounce",
                    "wave_dance",
                    "chill_dance",
                    "hip_flicking",
                    "sakura_season",
                    "zongzi_wrap",
                    "zongzi_drop",
                    "dragonboat_shot",
                    "rain_kiss",
                    "child_memory",
                    "couple_drop",
                    "couple_walk",
                    "flower_receive",
                    "love_drop",
                    "cheek_kiss",
                    "carry_me",
                    "blow_kiss",
                    "love_fall",
                    "french_kiss_8s",
                    "workday_feels",
                    "love_story",
                    "bloom_magic",
                    "ghibli",
                    "minecraft",
                    "box_me",
                    "claw_me",
                    "clayshot",
                    "manga_meme",
                    "quad_meme",
                    "pixel_me",
                    "clayshot_duo",
                    "irasutoya",
                    "american_comic",
                    "simpsons_comic",
                    "yayoi_kusama_style",
                    "pop_art",
                    "jojo_style",
                    "slice_therapy",
                    "balloon_flyaway",
                    "flying",
                    "paperman",
                    "pinch",
                    "bloom_doorobear",
                    "gender_swap",
                    "nap_me",
                    "sexy_me",
                    "spin360",
                    "smooth_shift",
                    "paper_fall",
                    "jump_to_cloud",
                    "pilot",
                    "sweet_dreams",
                    "soul_depart",
                    "punch_hit",
                    "watermelon_hit",
                    "split_stance_pet",
                    "make_face",
                    "break_glass",
                    "split_stance_human",
                    "covered_liquid_metal",
                    "fluffy_plunge",
                    "pet_belly_dance",
                    "water_float",
                    "relax_cut",
                    "head_to_balloon",
                    "cloning",
                    "across_the_universe_jungle",
                    "clothes_spinning_remnant",
                    "across_the_universe_jurassic",
                    "across_the_universe_moon",
                    "fisheye_pet",
                    "hitchcock_zoom",
                    "cute_bangs",
                    "earth_zoom_out",
                    "fisheye_human",
                    "drive_yacht",
                    "virtual_singer",
                    "earth_zoom_in",
                    "aliens_coming",
                    "drive_ferrari",
                    "bjd_style",
                    "virtual_fitting",
                    "orbit",
                    "zoom_in",
                    "ai_outfit",
                    "spin180",
                    "orbit_dolly",
                    "orbit_dolly_fast",
                    "auto_spin",
                    "walk_forward",
                    "outfit_show",
                    "zoom_in_fast",
                    "zoom_out_image",
                    "zoom_out_startend",
                    "muscling",
                    "captain_america",
                    "hulk",
                    "cap_walk",
                    "hulk_dive",
                    "exotic_princess",
                    "beast_companion",
                    "cartoon_doll",
                    "golden_epoch",
                    "oscar_gala",
                    "fashion_stride",
                    "star_carpet",
                    "flame_carpet",
                    "frost_carpet",
                    "mecha_x",
                    "style_me",
                    "tap_me",
                    "saber_warrior",
                    "pet2human",
                    "graduation",
                    "fishermen",
                    "happy_birthday",
                    "fairy_me",
                    "ladudu_me",
                    "ladudu_me_random",
                    "squid_game",
                    "superman",
                    "grow_wings",
                    "clevage",
                    "fly_with_doraemon",
                    "creatice_product_down",
                    "pole_dance",
                    "hug_from_behind",
                    "creatice_product_up_cybercity",
                    "creatice_product_up_bluecircuit",
                    "creatice_product_up",
                    "run_fast",
                    "background_explosion"
                  ],
                  "title": "Template",
                  "type": "string",
                  "description": "AI video template to use. Pricing varies by template: Standard templates (hug, kiss, love_pose, etc.) cost 4 credits ($0.20), Premium templates (lunar_newyear, dynasty_dress, dreamy_wedding, etc.) cost 6 credits ($0.30), and Advanced templates (live_photo) cost 10 credits ($0.50).",
                  "default": "hug"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for generation"
                },
                "input_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/web-examples/vidu/hug.PNG"
                    ]
                  ],
                  "title": "Input Image Urls",
                  "type": "array",
                  "description": "URLs of the images to use with the template. Number of images required varies by template: 'dynasty_dress' and 'shop_frame' accept 1-2 images, 'wish_sender' requires exactly 3 images, all other templates accept only 1 image.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-fal-order-properties": [
                "template",
                "input_image_urls",
                "seed",
                "aspect_ratio"
              ],
              "required": [
                "input_image_urls"
              ]
            },
            "ViduTemplateToVideoOutput": {
              "title": "TemplateToVideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/vidu/hugging.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video using a predefined template",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/vidu/template-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/template-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/template-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ViduTemplateToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/vidu/template-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ViduTemplateToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-effects",
      "title": "fal-ai/wan-effects",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-effects",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_012.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-effects",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-effects/api",
      "inputs": [
        {
          "name": "subject",
          "type": "string",
          "description": "The subject to insert into the predefined prompt template for the selected effect.",
          "required": true,
          "default": "",
          "examples": [
            "a cute kitten",
            "Donald Trump",
            "a tank",
            "a ceramic vase"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/wan-effects/cat.jpg",
            "https://storage.googleapis.com/falserverless/web-examples/wan-effects/man_1.png",
            "https://storage.googleapis.com/falserverless/web-examples/wan-effects/woman_2.png"
          ]
        },
        {
          "name": "effect_type",
          "type": "string",
          "description": "The type of effect to apply to the video.",
          "required": false,
          "default": "cakeify",
          "enum": [
            "squish",
            "muscle",
            "inflate",
            "crush",
            "rotate",
            "gun-shooting",
            "deflate",
            "cakeify",
            "hulk",
            "baby",
            "bride",
            "classy",
            "puppy",
            "snow-white",
            "disney-princess",
            "mona-lisa",
            "painting",
            "pirate-captain",
            "princess",
            "jungle",
            "samurai",
            "vip",
            "warrior",
            "zen",
            "assassin",
            "timelapse",
            "tsunami",
            "fire",
            "zoom-call",
            "doom-fps",
            "fus-ro-dah",
            "hug-jesus",
            "robot-face-reveal",
            "super-saiyan",
            "jumpscare",
            "laughing",
            "cartoon-jaw-drop",
            "crying",
            "kissing",
            "angry-face",
            "selfie-younger-self",
            "animeify",
            "blast"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate.",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 100
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video.",
          "required": false,
          "default": 16,
          "minimum": 5,
          "maximum": 24
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the output video.",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 40
        },
        {
          "name": "lora_scale",
          "type": "number",
          "description": "The scale of the LoRA weight. Used to adjust effect intensity.",
          "required": false,
          "default": 1,
          "minimum": 0.1,
          "maximum": 2
        },
        {
          "name": "turbo_mode",
          "type": "boolean",
          "description": "Whether to use turbo mode. If True, the video will be generated faster but with lower quality.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed"
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-effects",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-effects",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-effects queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-effects",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_012.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-effects",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-effects/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanEffectsInput": {
              "x-fal-order-properties": [
                "subject",
                "image_url",
                "effect_type",
                "num_frames",
                "frames_per_second",
                "seed",
                "aspect_ratio",
                "num_inference_steps",
                "lora_scale",
                "turbo_mode"
              ],
              "type": "object",
              "properties": {
                "effect_type": {
                  "enum": [
                    "squish",
                    "muscle",
                    "inflate",
                    "crush",
                    "rotate",
                    "gun-shooting",
                    "deflate",
                    "cakeify",
                    "hulk",
                    "baby",
                    "bride",
                    "classy",
                    "puppy",
                    "snow-white",
                    "disney-princess",
                    "mona-lisa",
                    "painting",
                    "pirate-captain",
                    "princess",
                    "jungle",
                    "samurai",
                    "vip",
                    "warrior",
                    "zen",
                    "assassin",
                    "timelapse",
                    "tsunami",
                    "fire",
                    "zoom-call",
                    "doom-fps",
                    "fus-ro-dah",
                    "hug-jesus",
                    "robot-face-reveal",
                    "super-saiyan",
                    "jumpscare",
                    "laughing",
                    "cartoon-jaw-drop",
                    "crying",
                    "kissing",
                    "angry-face",
                    "selfie-younger-self",
                    "animeify",
                    "blast"
                  ],
                  "description": "The type of effect to apply to the video.",
                  "type": "string",
                  "title": "Effect Type",
                  "default": "cakeify"
                },
                "aspect_ratio": {
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the output video.",
                  "default": "16:9"
                },
                "subject": {
                  "examples": [
                    "a cute kitten",
                    "Donald Trump",
                    "a tank",
                    "a ceramic vase"
                  ],
                  "description": "The subject to insert into the predefined prompt template for the selected effect.",
                  "type": "string",
                  "title": "Subject"
                },
                "lora_scale": {
                  "minimum": 0.1,
                  "maximum": 2,
                  "type": "number",
                  "title": "Lora Scale",
                  "description": "The scale of the LoRA weight. Used to adjust effect intensity.",
                  "default": 1
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/wan-effects/cat.jpg",
                    "https://storage.googleapis.com/falserverless/web-examples/wan-effects/man_1.png",
                    "https://storage.googleapis.com/falserverless/web-examples/wan-effects/woman_2.png"
                  ],
                  "description": "URL of the input image.",
                  "type": "string",
                  "title": "Image URL"
                },
                "turbo_mode": {
                  "description": "Whether to use turbo mode. If True, the video will be generated faster but with lower quality.",
                  "type": "boolean",
                  "title": "Turbo Mode",
                  "default": false
                },
                "frames_per_second": {
                  "minimum": 5,
                  "description": "Frames per second of the generated video.",
                  "type": "integer",
                  "maximum": 24,
                  "title": "Frames Per Second",
                  "default": 16
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 40,
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                },
                "seed": {
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "type": "integer",
                  "title": "Seed"
                },
                "num_frames": {
                  "minimum": 81,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 100,
                  "description": "Number of frames to generate.",
                  "default": 81
                }
              },
              "title": "BaseInput",
              "required": [
                "subject",
                "image_url"
              ]
            },
            "WanEffectsOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/wan-effects/cat_video.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "WanEffectsOutput",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-effects/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-effects/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-effects": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanEffectsInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-effects/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanEffectsOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-flf2v",
      "title": "fal-ai/wan-flf2v",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-flf2v",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-flf2v",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-flf2v/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A tabby cat is confidely strolling toward the camera, when it spins and with a flash of magic reveals itself to be a cat-dragon hybrid with glistening amber scales."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "start_image_url",
          "type": "string",
          "description": "URL of the starting image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/wan_flf/first_frame.png"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "URL of the ending image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/wan_flf/last_frame.png"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 100
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 24.",
          "required": false,
          "default": 16,
          "minimum": 5,
          "maximum": 24
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 40
        },
        {
          "name": "guide_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift parameter for video generation.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-flf2v",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-flf2v",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-flf2v queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-flf2v",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-flf2v",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-flf2v/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanFlf2vInput": {
              "title": "WanFLF2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A tabby cat is confidely strolling toward the camera, when it spins and with a flash of magic reveals itself to be a cat-dragon hybrid with glistening amber scales."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "minimum": 1,
                  "maximum": 10,
                  "type": "number",
                  "title": "Shift",
                  "description": "Shift parameter for video generation.",
                  "default": 5
                },
                "acceleration": {
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "examples": [
                    "regular"
                  ],
                  "default": "regular"
                },
                "frames_per_second": {
                  "minimum": 5,
                  "maximum": 24,
                  "type": "integer",
                  "title": "Frames Per Second",
                  "description": "Frames per second of the generated video. Must be between 5 to 24.",
                  "default": 16
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "start_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/wan_flf/first_frame.png"
                  ],
                  "title": "Start Image Url",
                  "type": "string",
                  "description": "URL of the starting image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "end_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/wan_flf/last_frame.png"
                  ],
                  "title": "End Image Url",
                  "type": "string",
                  "description": "URL of the ending image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "negative_prompt": {
                  "examples": [
                    "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "num_frames": {
                  "minimum": 81,
                  "maximum": 100,
                  "type": "integer",
                  "title": "Num Frames",
                  "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
                  "default": 81
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "guide_scale": {
                  "minimum": 1,
                  "maximum": 10,
                  "type": "number",
                  "title": "Guide Scale",
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "default": 5
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 40,
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "start_image_url",
                "end_image_url",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "num_inference_steps",
                "guide_scale",
                "shift",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "aspect_ratio"
              ],
              "required": [
                "prompt",
                "start_image_url",
                "end_image_url"
              ]
            },
            "WanFlf2vOutput": {
              "title": "WanFLF2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/flf2v.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-flf2v/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-flf2v/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-flf2v": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanFlf2vInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-flf2v/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanFlf2vOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-fun-control",
      "title": "fal-ai/wan-fun-control",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-fun-control",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/lion/fucmWwAIt1kX7fdfTHkxo_a344226d24a74d4e805d4ad606fdc00d.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-fun-control",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-fun-control/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video.",
          "required": true,
          "default": "",
          "examples": [
            "A woman wearing a lavender floral dress spins around in a circle."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "The negative prompt to generate the video.",
          "required": false,
          "default": ""
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "The number of inference steps.",
          "required": false,
          "default": 27,
          "minimum": 4,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "The guidance scale.",
          "required": false,
          "default": 6,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "shift",
          "type": "number",
          "description": "The shift for the scheduler.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed for the random number generator.",
          "required": false,
          "default": null
        },
        {
          "name": "match_input_num_frames",
          "type": "boolean",
          "description": "Whether to match the number of frames in the input video.",
          "required": false,
          "default": true
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "The number of frames to generate. Only used when match_input_num_frames is False.",
          "required": false,
          "default": 81,
          "minimum": 49,
          "maximum": 121
        },
        {
          "name": "match_input_fps",
          "type": "boolean",
          "description": "Whether to match the fps in the input video.",
          "required": false,
          "default": true
        },
        {
          "name": "fps",
          "type": "integer",
          "description": "The fps to generate. Only used when match_input_fps is False.",
          "required": false,
          "default": 16,
          "minimum": 4,
          "maximum": 60
        },
        {
          "name": "control_video_url",
          "type": "string",
          "description": "The URL of the control video to use as a reference for the video generation.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/wan-fun-control-video-input.mp4"
          ]
        },
        {
          "name": "preprocess_video",
          "type": "boolean",
          "description": "Whether to preprocess the video. If True, the video will be preprocessed to depth or pose.",
          "required": false,
          "default": false
        },
        {
          "name": "preprocess_type",
          "type": "string",
          "description": "The type of preprocess to apply to the video. Only used when preprocess_video is True.",
          "required": false,
          "default": "depth",
          "enum": [
            "depth",
            "pose"
          ]
        },
        {
          "name": "reference_image_url",
          "type": "string",
          "description": "The URL of the reference image to use as a reference for the video generation.",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/wan-fun-input-reference-image.webp"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The video generated by the model."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-fun-control",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-fun-control",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-fun-control queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-fun-control",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/lion/fucmWwAIt1kX7fdfTHkxo_a344226d24a74d4e805d4ad606fdc00d.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-fun-control",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-fun-control/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanFunControlInput": {
              "title": "WanFunControlRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A woman wearing a lavender floral dress spins around in a circle."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video."
                },
                "shift": {
                  "minimum": 1,
                  "title": "Shift",
                  "type": "number",
                  "maximum": 10,
                  "description": "The shift for the scheduler.",
                  "default": 5
                },
                "preprocess_video": {
                  "title": "Preprocess Video",
                  "type": "boolean",
                  "description": "Whether to preprocess the video. If True, the video will be preprocessed to depth or pose.",
                  "default": false
                },
                "reference_image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/wan-fun-input-reference-image.webp"
                  ],
                  "title": "Reference Image URL",
                  "type": "string",
                  "description": "The URL of the reference image to use as a reference for the video generation."
                },
                "fps": {
                  "minimum": 4,
                  "title": "FPS",
                  "type": "integer",
                  "maximum": 60,
                  "description": "The fps to generate. Only used when match_input_fps is False.",
                  "default": 16
                },
                "match_input_num_frames": {
                  "title": "Match Input Number of Frames",
                  "type": "boolean",
                  "description": "Whether to match the number of frames in the input video.",
                  "default": true
                },
                "guidance_scale": {
                  "minimum": 1,
                  "title": "Guidance Scale",
                  "type": "number",
                  "maximum": 10,
                  "description": "The guidance scale.",
                  "default": 6
                },
                "preprocess_type": {
                  "enum": [
                    "depth",
                    "pose"
                  ],
                  "title": "Preprocess Type",
                  "type": "string",
                  "description": "The type of preprocess to apply to the video. Only used when preprocess_video is True.",
                  "default": "depth"
                },
                "control_video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/wan-fun-control-video-input.mp4"
                  ],
                  "title": "Control Video URL",
                  "type": "string",
                  "description": "The URL of the control video to use as a reference for the video generation."
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "The negative prompt to generate the video.",
                  "default": ""
                },
                "num_frames": {
                  "minimum": 49,
                  "title": "Number of Frames",
                  "type": "integer",
                  "maximum": 121,
                  "description": "The number of frames to generate. Only used when match_input_num_frames is False.",
                  "default": 81
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed for the random number generator."
                },
                "num_inference_steps": {
                  "minimum": 4,
                  "title": "Number of Inference Steps",
                  "type": "integer",
                  "maximum": 50,
                  "description": "The number of inference steps.",
                  "default": 27
                },
                "match_input_fps": {
                  "title": "Match Input FPS",
                  "type": "boolean",
                  "description": "Whether to match the fps in the input video.",
                  "default": true
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_inference_steps",
                "guidance_scale",
                "shift",
                "seed",
                "match_input_num_frames",
                "num_frames",
                "match_input_fps",
                "fps",
                "control_video_url",
                "preprocess_video",
                "preprocess_type",
                "reference_image_url"
              ],
              "required": [
                "prompt",
                "control_video_url"
              ]
            },
            "WanFunControlOutput": {
              "title": "WanFunControlResponse",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/wan-fun-example-output.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The video generated by the model.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-fun-control/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-fun-control/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-fun-control": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanFunControlInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-fun-control/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanFunControlOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-i2v",
      "title": "fal-ai/wan-i2v",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-i2v",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-i2v",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-i2v/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Cars racing in slow motion"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/gallery/car_720p.png"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 100
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 24.",
          "required": false,
          "default": 16,
          "minimum": 5,
          "maximum": 24
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 40
        },
        {
          "name": "guide_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift parameter for video generation.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-i2v",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-i2v",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-i2v queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-i2v",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-i2v",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-i2v/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanI2vInput": {
              "title": "WanI2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Cars racing in slow motion"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "minimum": 1,
                  "maximum": 10,
                  "type": "number",
                  "description": "Shift parameter for video generation.",
                  "title": "Shift",
                  "default": 5
                },
                "acceleration": {
                  "examples": [
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "default": "regular"
                },
                "frames_per_second": {
                  "minimum": 5,
                  "maximum": 24,
                  "type": "integer",
                  "title": "Frames Per Second",
                  "description": "Frames per second of the generated video. Must be between 5 to 24.",
                  "default": 16
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "description": "If set to true, the safety checker will be enabled.",
                  "type": "boolean",
                  "title": "Enable Safety Checker",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "title": "Num Frames",
                  "type": "integer",
                  "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
                  "maximum": 100,
                  "default": 81
                },
                "negative_prompt": {
                  "examples": [
                    "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/gallery/car_720p.png"
                  ],
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
                  "type": "string",
                  "title": "Image Url"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 40,
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "title": "Num Inference Steps",
                  "default": 30
                },
                "guide_scale": {
                  "minimum": 1,
                  "maximum": 10,
                  "type": "number",
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "title": "Guide Scale",
                  "default": 5
                },
                "seed": {
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "type": "integer",
                  "title": "Seed"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "image_url",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "num_inference_steps",
                "guide_scale",
                "shift",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "aspect_ratio"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "WanI2vOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "description": "The seed used for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/gallery/wan-i2v-example.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "WanI2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-i2v/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-i2v/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-i2v": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanI2vInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-i2v/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanI2vOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-i2v-lora",
      "title": "fal-ai/wan-i2v-lora",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-i2v-lora",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_02.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-i2v-lora",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-i2v-lora/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Cars race in slow motion."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/gallery/car_720p.png"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 100
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 24.",
          "required": false,
          "default": 16,
          "minimum": 5,
          "maximum": 24
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "720p"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 40
        },
        {
          "name": "guide_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift parameter for video generation.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the output video.",
          "required": false,
          "default": "16:9",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to be used in the inference.",
          "required": false,
          "default": []
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "If true, the video will be reversed.",
          "required": false,
          "default": false
        },
        {
          "name": "turbo_mode",
          "type": "boolean",
          "description": "If true, the video will be generated faster with no noticeable degradation in the visual quality.",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-i2v-lora",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-i2v-lora",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-i2v-lora queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-i2v-lora",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_02.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-i2v-lora",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-i2v-lora/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanI2vLoraInput": {
              "title": "WanLoRAI2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Cars race in slow motion."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "minimum": 1,
                  "title": "Shift",
                  "type": "number",
                  "description": "Shift parameter for video generation.",
                  "maximum": 10,
                  "default": 5
                },
                "reverse_video": {
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "If true, the video will be reversed.",
                  "default": false
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to be used in the inference.",
                  "items": {
                    "$ref": "#/components/schemas/LoraWeight"
                  },
                  "default": []
                },
                "frames_per_second": {
                  "minimum": 5,
                  "title": "Frames Per Second",
                  "type": "integer",
                  "description": "Frames per second of the generated video. Must be between 5 to 24.",
                  "maximum": 24,
                  "default": 16
                },
                "turbo_mode": {
                  "title": "Turbo Mode",
                  "type": "boolean",
                  "description": "If true, the video will be generated faster with no noticeable degradation in the visual quality.",
                  "default": true
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "title": "Num Frames",
                  "type": "integer",
                  "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). If the number of frames is greater than 81, the video will be generated with 1.25x more billing units.",
                  "maximum": 100,
                  "default": 81
                },
                "negative_prompt": {
                  "examples": [
                    "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the output video.",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit.",
                  "default": "720p"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/gallery/car_720p.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "guide_scale": {
                  "minimum": 1,
                  "title": "Guide Scale",
                  "type": "number",
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "maximum": 10,
                  "default": 5
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "maximum": 40,
                  "default": 30
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "image_url",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "num_inference_steps",
                "guide_scale",
                "shift",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "aspect_ratio",
                "loras",
                "reverse_video",
                "turbo_mode"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "WanI2vLoraOutput": {
              "title": "WanI2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/gallery/wan-i2v-example.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "LoraWeight": {
              "title": "LoraWeight",
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "maximum": 4,
                  "default": 1
                },
                "weight_name": {
                  "title": "Weight Name",
                  "type": "string",
                  "description": "Name of the LoRA weight. Used only if `path` is a Hugging Face repository, and required only if you have more than 1 safetensors file in the repo."
                }
              },
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "required": [
                "path"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-i2v-lora/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-i2v-lora/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-i2v-lora": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanI2vLoraInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-i2v-lora/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanI2vLoraOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-pro/image-to-video",
      "title": "fal-ai/wan-pro/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-pro/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/wan-pro-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-pro/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-pro/image-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker",
          "required": false,
          "default": true
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image to generate the video from",
          "required": true,
          "default": "",
          "examples": [
            "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-pro/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-pro/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-pro/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-pro/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/wan-pro-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-pro/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-pro/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanProImageToVideoInput": {
              "title": "WanProI2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video"
                },
                "enable_safety_checker": {
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker",
                  "default": true
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "image_url": {
                  "examples": [
                    "https://fal.media/files/elephant/8kkhB12hEZI2kkbU8pZPA_test.jpeg"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the image to generate the video from"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "enable_safety_checker",
                "image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "WanProImageToVideoOutput": {
              "title": "WanProI2VResponse",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/kangaroo/K1hB3k-IXBzq9rz1kNOxy.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-pro/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-pro/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-pro/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanProImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-pro/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanProImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-pro/text-to-video",
      "title": "fal-ai/wan-pro/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-pro/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_02.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-pro/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-pro/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate the video",
          "required": true,
          "default": "",
          "examples": [
            "A lone astronaut in a detailed NASA spacesuit performs an exuberant dance on the lunar surface, arms outstretched in joyful abandon against the stark moonscape. The Earth hangs dramatically in the black sky, appearing to streak past due to the motion of the dance, creating a sense of dynamic movement. The scene captures extreme contrasts between the brilliant white of the spacesuit reflecting harsh sunlight and the deep shadows of the lunar craters. Every detail is rendered with photorealistic precision: the texture of the regolith disturbed by the astronaut's boots, the reflections on the helmet visor."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "Whether to enable the safety checker",
          "required": false,
          "default": true
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-pro/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-pro/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-pro/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-pro/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_02.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-pro/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-pro/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanProTextToVideoInput": {
              "title": "WanProT2VRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A lone astronaut in a detailed NASA spacesuit performs an exuberant dance on the lunar surface, arms outstretched in joyful abandon against the stark moonscape. The Earth hangs dramatically in the black sky, appearing to streak past due to the motion of the dance, creating a sense of dynamic movement. The scene captures extreme contrasts between the brilliant white of the spacesuit reflecting harsh sunlight and the deep shadows of the lunar craters. Every detail is rendered with photorealistic precision: the texture of the regolith disturbed by the astronaut's boots, the reflections on the helmet visor."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate the video"
                },
                "enable_safety_checker": {
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "Whether to enable the safety checker",
                  "default": true
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "enable_safety_checker"
              ],
              "required": [
                "prompt"
              ]
            },
            "WanProTextToVideoOutput": {
              "title": "WanProT2VResponse",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "url": "https://fal.media/files/panda/YxRLson-aETxeBK1DI4VW.mp4"
                    }
                  ],
                  "description": "The generated video",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-pro/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-pro/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-pro/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanProTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-pro/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanProTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-t2v",
      "title": "fal-ai/wan-t2v",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-t2v",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_02.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-t2v",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-t2v/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 100 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 100
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 24.",
          "required": false,
          "default": 16,
          "minimum": 5,
          "maximum": 24
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "16:9"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 40
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "turbo_mode",
          "type": "boolean",
          "description": "If true, the video will be generated faster with no noticeable degradation in the visual quality.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-t2v",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-t2v",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-t2v queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-t2v",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/Fal_Visuals_V1_02.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-t2v",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-t2v/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanT2vInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "turbo_mode"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "16:9"
                  ],
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "description": "Resolution of the generated video (480p, 580p, or 720p).",
                  "type": "string",
                  "title": "Resolution",
                  "default": "720p"
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "turbo_mode": {
                  "description": "If true, the video will be generated faster with no noticeable degradation in the visual quality.",
                  "type": "boolean",
                  "title": "Turbo Mode",
                  "default": false
                },
                "frames_per_second": {
                  "minimum": 5,
                  "maximum": 24,
                  "type": "integer",
                  "description": "Frames per second of the generated video. Must be between 5 to 24.",
                  "title": "Frames Per Second",
                  "default": 16
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 100,
                  "description": "Number of frames to generate. Must be between 81 to 100 (inclusive).",
                  "default": 81
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 40,
                  "type": "integer",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "title": "Num Inference Steps",
                  "default": 30
                },
                "negative_prompt": {
                  "examples": [
                    "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "description": "Negative prompt for video generation.",
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                }
              },
              "title": "WanT2VRequest",
              "required": [
                "prompt"
              ]
            },
            "WanT2vOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "description": "The seed used for generation.",
                  "type": "integer",
                  "title": "Seed"
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "WanT2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "type": "string",
                  "title": "File Name"
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-t2v/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-t2v/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-t2v": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanT2vInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-t2v/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanT2vOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-t2v-lora",
      "title": "fal-ai/wan-t2v-lora",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-t2v-lora",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/wan-i2v-lora.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-t2v-lora",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-t2v-lora/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 100 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 100
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 24.",
          "required": false,
          "default": 16,
          "minimum": 5,
          "maximum": 24
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "480p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "9:16",
            "16:9"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 40
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "turbo_mode",
          "type": "boolean",
          "description": "If true, the video will be generated faster with no noticeable degradation in the visual quality.",
          "required": false,
          "default": true
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to be used in the inference.",
          "required": false,
          "default": []
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "If true, the video will be reversed.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-t2v-lora",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-t2v-lora",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-t2v-lora queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-t2v-lora",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/wan-i2v-lora.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-t2v-lora",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-t2v-lora/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanT2vLoraInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "turbo_mode",
                "loras",
                "reverse_video"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A stylish woman walks down a Tokyo street filled with warm glowing neon and animated city signage. She wears a black leather jacket, a long red dress, and black boots, and carries a black purse."
                  ],
                  "description": "The text prompt to guide video generation.",
                  "type": "string",
                  "title": "Prompt"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "480p"
                },
                "reverse_video": {
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "If true, the video will be reversed.",
                  "default": false
                },
                "seed": {
                  "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                  "type": "integer",
                  "title": "Seed"
                },
                "aspect_ratio": {
                  "enum": [
                    "9:16",
                    "16:9"
                  ],
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "type": "string",
                  "title": "Aspect Ratio",
                  "default": "16:9"
                },
                "loras": {
                  "description": "LoRA weights to be used in the inference.",
                  "type": "array",
                  "title": "Loras",
                  "items": {
                    "$ref": "#/components/schemas/LoraWeight"
                  },
                  "default": []
                },
                "frames_per_second": {
                  "minimum": 5,
                  "description": "Frames per second of the generated video. Must be between 5 to 24.",
                  "type": "integer",
                  "maximum": 24,
                  "title": "Frames Per Second",
                  "default": 16
                },
                "turbo_mode": {
                  "description": "If true, the video will be generated faster with no noticeable degradation in the visual quality.",
                  "type": "boolean",
                  "title": "Turbo Mode",
                  "default": true
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "maximum": 40,
                  "title": "Num Inference Steps",
                  "default": 30
                },
                "num_frames": {
                  "minimum": 81,
                  "description": "Number of frames to generate. Must be between 81 to 100 (inclusive).",
                  "type": "integer",
                  "maximum": 100,
                  "title": "Num Frames",
                  "default": 81
                },
                "negative_prompt": {
                  "examples": [
                    "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                }
              },
              "title": "WanLoRARequest",
              "required": [
                "prompt"
              ]
            },
            "WanT2vLoraOutput": {
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "title": "Video",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "title": "WanT2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "LoraWeight": {
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "description": "URL or the path to the LoRA weights.",
                  "type": "string",
                  "title": "Path"
                },
                "scale": {
                  "minimum": 0,
                  "title": "Scale",
                  "type": "number",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "maximum": 4,
                  "default": 1
                },
                "weight_name": {
                  "description": "Name of the LoRA weight. Used only if `path` is a Hugging Face repository, and required only if you have more than 1 safetensors file in the repo.",
                  "type": "string",
                  "title": "Weight Name"
                }
              },
              "title": "LoraWeight",
              "required": [
                "path"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "type": "integer",
                  "title": "File Size"
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "type": "string",
                  "title": "Content Type"
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "description": "File data",
                  "type": "string",
                  "title": "File Data"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-t2v-lora/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-t2v-lora/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-t2v-lora": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanT2vLoraInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-t2v-lora/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanT2vLoraOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-vace",
      "title": "fal-ai/wan-vace",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-vace",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video-image-to-video.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "The video shows a man riding a horse on a vast grassland. He has long lavender hair and wears a traditional dress of a white top and black pants. The animation style makes him look like he is doing some kind of outdoor activity or performing. The background is a spectacular mountain range and cloud sky, giving a sense of tranquility and vastness. The entire video is shot from a fixed angle, focusing on the rider and his horse."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). Works only with only reference images as input if source video or mask video is provided output len would be same as source up to 241 frames",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 240
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 24.",
          "required": false,
          "default": 16,
          "minimum": 5,
          "maximum": 24
        },
        {
          "name": "task",
          "type": "string",
          "description": "Task type for the model.",
          "required": false,
          "default": "depth",
          "enum": [
            "depth",
            "inpainting"
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift parameter for video generation.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "auto",
            "9:16",
            "16:9"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 40
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the source video file. If provided, the model will use this video as a reference.",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/vace/src_video.mp4"
          ]
        },
        {
          "name": "mask_video_url",
          "type": "string",
          "description": "URL to the source mask file. If provided, the model will use this mask as a reference.",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/vace/src_mask.mp4"
          ]
        },
        {
          "name": "mask_image_url",
          "type": "string",
          "description": "URL to the guiding mask file. If provided, the model will use this mask as a reference to create masked video. If provided mask video url will be ignored.",
          "required": false,
          "default": ""
        },
        {
          "name": "ref_image_urls",
          "type": "array",
          "description": "Urls to source reference image. If provided, the model will use this image as reference.",
          "required": false,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/vace/src_ref_image_1.png"
            ]
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "preprocess",
          "type": "boolean",
          "description": "Whether to preprocess the input video.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-vace",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-vace",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-vace queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-vace",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/hunyuan-video-image-to-video.webp",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanVaceInput": {
              "title": "WanT2VRequest",
              "type": "object",
              "properties": {
                "shift": {
                  "minimum": 1,
                  "title": "Shift",
                  "type": "number",
                  "maximum": 10,
                  "description": "Shift parameter for video generation.",
                  "default": 5
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/vace/src_video.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL to the source video file. If provided, the model will use this video as a reference."
                },
                "prompt": {
                  "examples": [
                    "The video shows a man riding a horse on a vast grassland. He has long lavender hair and wears a traditional dress of a white top and black pants. The animation style makes him look like he is doing some kind of outdoor activity or performing. The background is a spectacular mountain range and cloud sky, giving a sense of tranquility and vastness. The entire video is shot from a fixed angle, focusing on the rider and his horse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "ref_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/vace/src_ref_image_1.png"
                    ]
                  ],
                  "title": "Ref Image Urls",
                  "type": "array",
                  "description": "Urls to source reference image. If provided, the model will use this image as reference.",
                  "items": {
                    "type": "string"
                  }
                },
                "task": {
                  "enum": [
                    "depth",
                    "inpainting"
                  ],
                  "title": "Task",
                  "type": "string",
                  "description": "Task type for the model.",
                  "default": "depth"
                },
                "frames_per_second": {
                  "minimum": 5,
                  "title": "Frames Per Second",
                  "type": "integer",
                  "maximum": 24,
                  "description": "Frames per second of the generated video. Must be between 5 to 24.",
                  "default": 16
                },
                "mask_image_url": {
                  "title": "Mask Image Url",
                  "type": "string",
                  "description": "URL to the guiding mask file. If provided, the model will use this mask as a reference to create masked video. If provided mask video url will be ignored."
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 240,
                  "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). Works only with only reference images as input if source video or mask video is provided output len would be same as source up to 241 frames",
                  "default": 81
                },
                "negative_prompt": {
                  "examples": [
                    "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "9:16",
                    "16:9"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "16:9"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "720p"
                },
                "mask_video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/vace/src_mask.mp4"
                  ],
                  "title": "Mask Video Url",
                  "type": "string",
                  "description": "URL to the source mask file. If provided, the model will use this mask as a reference."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 40,
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                },
                "preprocess": {
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the input video.",
                  "default": false
                },
                "enable_prompt_expansion": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "frames_per_second",
                "task",
                "shift",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "video_url",
                "mask_video_url",
                "mask_image_url",
                "ref_image_urls",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "preprocess"
              ],
              "required": [
                "prompt"
              ]
            },
            "WanVaceOutput": {
              "title": "WanT2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/vace/out_video_vace.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-vace/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanVaceInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanVaceOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-vace-1-3b",
      "title": "fal-ai/wan-vace-1-3b",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-vace-1-3b",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-1-3b",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-1-3b/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "The video shows a man riding a horse on a vast grassland. He has long lavender hair and wears a traditional dress of a white top and black pants. The animation style makes him look like he is doing some kind of outdoor activity or performing. The background is a spectacular mountain range and cloud sky, giving a sense of tranquility and vastness. The entire video is shot from a fixed angle, focusing on the rider and his horse."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). Works only with only reference images as input if source video or mask video is provided output len would be same as source up to 241 frames",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 240
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 24.",
          "required": false,
          "default": 16,
          "minimum": 5,
          "maximum": 24
        },
        {
          "name": "task",
          "type": "string",
          "description": "Task type for the model.",
          "required": false,
          "default": "depth",
          "enum": [
            "depth",
            "inpainting",
            "pose"
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift parameter for video generation.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "auto",
            "9:16",
            "16:9"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 40
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the source video file. If provided, the model will use this video as a reference.",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/vace/src_video.mp4"
          ]
        },
        {
          "name": "mask_video_url",
          "type": "string",
          "description": "URL to the source mask file. If provided, the model will use this mask as a reference.",
          "required": false,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/vace/src_mask.mp4"
          ]
        },
        {
          "name": "mask_image_url",
          "type": "string",
          "description": "URL to the guiding mask file. If provided, the model will use this mask as a reference to create masked video. If provided mask video url will be ignored.",
          "required": false,
          "default": ""
        },
        {
          "name": "ref_image_urls",
          "type": "array",
          "description": "Urls to source reference image. If provided, the model will use this image as reference.",
          "required": false,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/vace/src_ref_image_1.png"
            ]
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "preprocess",
          "type": "boolean",
          "description": "Whether to preprocess the input video.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-vace-1-3b",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-vace-1-3b",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-vace-1-3b queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-vace-1-3b",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-1-3b",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-1-3b/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanVace13bInput": {
              "title": "WanT2VRequest",
              "type": "object",
              "properties": {
                "shift": {
                  "minimum": 1,
                  "title": "Shift",
                  "type": "number",
                  "maximum": 10,
                  "description": "Shift parameter for video generation.",
                  "default": 5
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/vace/src_video.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "URL to the source video file. If provided, the model will use this video as a reference."
                },
                "prompt": {
                  "examples": [
                    "The video shows a man riding a horse on a vast grassland. He has long lavender hair and wears a traditional dress of a white top and black pants. The animation style makes him look like he is doing some kind of outdoor activity or performing. The background is a spectacular mountain range and cloud sky, giving a sense of tranquility and vastness. The entire video is shot from a fixed angle, focusing on the rider and his horse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "mask_image_url": {
                  "title": "Mask Image Url",
                  "type": "string",
                  "description": "URL to the guiding mask file. If provided, the model will use this mask as a reference to create masked video. If provided mask video url will be ignored."
                },
                "task": {
                  "enum": [
                    "depth",
                    "inpainting",
                    "pose"
                  ],
                  "title": "Task",
                  "type": "string",
                  "description": "Task type for the model.",
                  "default": "depth"
                },
                "frames_per_second": {
                  "minimum": 5,
                  "title": "Frames Per Second",
                  "type": "integer",
                  "maximum": 24,
                  "description": "Frames per second of the generated video. Must be between 5 to 24.",
                  "default": 16
                },
                "ref_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/vace/src_ref_image_1.png"
                    ]
                  ],
                  "title": "Ref Image Urls",
                  "type": "array",
                  "description": "Urls to source reference image. If provided, the model will use this image as reference.",
                  "items": {
                    "type": "string"
                  }
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "title": "Num Frames",
                  "type": "integer",
                  "maximum": 240,
                  "description": "Number of frames to generate. Must be between 81 to 100 (inclusive). Works only with only reference images as input if source video or mask video is provided output len would be same as source up to 241 frames",
                  "default": 81
                },
                "negative_prompt": {
                  "examples": [
                    "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "9:16",
                    "16:9"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "16:9"
                },
                "mask_video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/vace/src_mask.mp4"
                  ],
                  "title": "Mask Video Url",
                  "type": "string",
                  "description": "URL to the source mask file. If provided, the model will use this mask as a reference."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "title": "Num Inference Steps",
                  "type": "integer",
                  "maximum": 40,
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                },
                "preprocess": {
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the input video.",
                  "default": false
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "frames_per_second",
                "task",
                "shift",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "video_url",
                "mask_video_url",
                "mask_image_url",
                "ref_image_urls",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "preprocess"
              ],
              "required": [
                "prompt"
              ]
            },
            "WanVace13bOutput": {
              "title": "WanT2VResponse",
              "type": "object",
              "properties": {
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/vace/out_video_vace.mp4"
                    }
                  ],
                  "title": "Video",
                  "description": "The generated video file.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                }
              },
              "x-fal-order-properties": [
                "video",
                "seed"
              ],
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "type": "integer",
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "type": "string",
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "type": "string",
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                },
                "file_data": {
                  "format": "binary",
                  "title": "File Data",
                  "type": "string",
                  "description": "File data"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size",
                "file_data"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-vace-1-3b/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-1-3b/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-1-3b": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanVace13bInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-1-3b/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanVace13bOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-vace-14b",
      "title": "fal-ai/wan-vace-14b",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-vace-14b",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "The video shows a man riding a horse on a vast grassland. He has long lavender hair and wears a traditional dress of a white top and black pants. The animation style makes him look like he is doing some kind of outdoor activity or performing. The background is a spectacular mountain range and cloud sky, giving a sense of tranquility and vastness. The entire video is shot from a fixed angle, focusing on the rider and his horse."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "match_input_num_frames",
          "type": "boolean",
          "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 241
        },
        {
          "name": "match_input_frames_per_second",
          "type": "boolean",
          "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
          "required": false,
          "default": 16
        },
        {
          "name": "task",
          "type": "string",
          "description": "Task type for the model.",
          "required": false,
          "default": "depth",
          "enum": [
            "depth",
            "pose",
            "inpainting",
            "outpainting",
            "reframe"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "1:1",
            "9:16"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the source video file. If provided, the model will use this video as a reference.",
          "required": true,
          "default": ""
        },
        {
          "name": "mask_video_url",
          "type": "string",
          "description": "URL to the source mask file. If provided, the model will use this mask as a reference.",
          "required": false,
          "default": ""
        },
        {
          "name": "mask_image_url",
          "type": "string",
          "description": "URL to the guiding mask file. If provided, the model will use this mask as a reference to create masked video. If provided mask video url will be ignored.",
          "required": false,
          "default": ""
        },
        {
          "name": "ref_image_urls",
          "type": "array",
          "description": "Urls to source reference image. If provided, the model will use this image as reference.",
          "required": false,
          "default": []
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "preprocess",
          "type": "boolean",
          "description": "Whether to preprocess the input video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
          "required": false,
          "default": "",
          "examples": [
            "none"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-vace-14b",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-vace-14b",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-vace-14b queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-vace-14b",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanVace14bInput": {
              "title": "WanVACERequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The video shows a man riding a horse on a vast grassland. He has long lavender hair and wears a traditional dress of a white top and black pants. The animation style makes him look like he is doing some kind of outdoor activity or performing. The background is a spectacular mountain range and cloud sky, giving a sense of tranquility and vastness. The entire video is shot from a fixed angle, focusing on the rider and his horse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "video_url": {
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL to the source video file. If provided, the model will use this video as a reference."
                },
                "acceleration": {
                  "anyOf": [
                    {
                      "enum": [
                        "none",
                        "regular"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Acceleration",
                  "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
                  "examples": [
                    "none"
                  ]
                },
                "task": {
                  "enum": [
                    "depth",
                    "pose",
                    "inpainting",
                    "outpainting",
                    "reframe"
                  ],
                  "title": "Task",
                  "type": "string",
                  "description": "Task type for the model.",
                  "default": "depth"
                },
                "mask_image_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mask Image URL",
                  "description": "URL to the guiding mask file. If provided, the model will use this mask as a reference to create masked video. If provided mask video url will be ignored."
                },
                "frames_per_second": {
                  "anyOf": [
                    {
                      "minimum": 5,
                      "maximum": 30,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Frames per Second",
                  "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
                  "default": 16
                },
                "match_input_num_frames": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Number of Frames",
                  "type": "boolean",
                  "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
                  "default": false
                },
                "guidance_scale": {
                  "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "examples": [
                    5
                  ],
                  "title": "Guidance Scale",
                  "default": 5
                },
                "num_frames": {
                  "minimum": 81,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
                  "default": 81
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "negative_prompt": {
                  "examples": [
                    "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "ref_image_urls": {
                  "title": "Reference Image URLs",
                  "type": "array",
                  "description": "Urls to source reference image. If provided, the model will use this image as reference.",
                  "items": {
                    "type": "string"
                  }
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "1:1",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "auto"
                },
                "match_input_frames_per_second": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Frames Per Second",
                  "type": "boolean",
                  "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
                  "default": false
                },
                "mask_video_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mask Video URL",
                  "description": "URL to the source mask file. If provided, the model will use this mask as a reference."
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Number of Inference Steps",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                },
                "preprocess": {
                  "examples": [
                    false
                  ],
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the input video.",
                  "default": false
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "match_input_num_frames",
                "num_frames",
                "match_input_frames_per_second",
                "frames_per_second",
                "task",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "guidance_scale",
                "video_url",
                "mask_video_url",
                "mask_image_url",
                "ref_image_urls",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "preprocess",
                "acceleration"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "WanVace14bOutput": {
              "title": "WanVACEResponse",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-vace-14b/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanVace14bInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanVace14bOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-vace-14b/depth",
      "title": "fal-ai/wan-vace-14b/depth",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-vace-14b/depth",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/depth",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/depth/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A confident woman strides toward the camera down a sun-drenched, empty street. Her vibrant summer dress, a flowing emerald green with delicate white floral embroidery, billows slightly in the gentle breeze.  She carries a stylish, woven straw bag, its natural tan contrasting beautifully with the dress. The dress's fabric shimmers subtly, catching the light. The white embroidery is intricate, each tiny flower meticulously detailed.  Her expression is focused, yet relaxed, radiating self-assuredness. Her auburn hair, partially pulled back in a loose braid, catches the sunlight, creating warm highlights. The street itself is paved with warm, grey cobblestones, reflecting the bright sun. The mood is optimistic and serene, emphasizing the woman's independence and carefree spirit. High resolution 4k"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "match_input_num_frames",
          "type": "boolean",
          "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 241
        },
        {
          "name": "match_input_frames_per_second",
          "type": "boolean",
          "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
          "required": false,
          "default": 16
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "1:1",
            "9:16"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the source video file. Required for depth task.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/wan-vace-depth-video.mp4"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "preprocess",
          "type": "boolean",
          "description": "Whether to preprocess the input video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
          "required": false,
          "default": "",
          "examples": [
            "none"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated depth video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-vace-14b/depth",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-vace-14b/depth",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-vace-14b/depth queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-vace-14b/depth",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/depth",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/depth/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanVace14bDepthInput": {
              "title": "WanVACEDepthRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A confident woman strides toward the camera down a sun-drenched, empty street. Her vibrant summer dress, a flowing emerald green with delicate white floral embroidery, billows slightly in the gentle breeze.  She carries a stylish, woven straw bag, its natural tan contrasting beautifully with the dress. The dress's fabric shimmers subtly, catching the light. The white embroidery is intricate, each tiny flower meticulously detailed.  Her expression is focused, yet relaxed, radiating self-assuredness. Her auburn hair, partially pulled back in a loose braid, catches the sunlight, creating warm highlights. The street itself is paved with warm, grey cobblestones, reflecting the bright sun. The mood is optimistic and serene, emphasizing the woman's independence and carefree spirit. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/wan-vace-depth-video.mp4"
                  ],
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL to the source video file. Required for depth task."
                },
                "acceleration": {
                  "anyOf": [
                    {
                      "enum": [
                        "none",
                        "regular"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Acceleration",
                  "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
                  "examples": [
                    "none"
                  ]
                },
                "frames_per_second": {
                  "anyOf": [
                    {
                      "minimum": 5,
                      "maximum": 30,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Frames per Second",
                  "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
                  "default": 16
                },
                "match_input_num_frames": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Number of Frames",
                  "type": "boolean",
                  "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
                  "default": false
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
                  "default": 81
                },
                "guidance_scale": {
                  "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "examples": [
                    5
                  ],
                  "title": "Guidance Scale",
                  "default": 5
                },
                "negative_prompt": {
                  "examples": [
                    "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "1:1",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "auto"
                },
                "match_input_frames_per_second": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Frames Per Second",
                  "type": "boolean",
                  "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
                  "default": false
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Number of Inference Steps",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                },
                "preprocess": {
                  "examples": [
                    false
                  ],
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the input video.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "match_input_num_frames",
                "num_frames",
                "match_input_frames_per_second",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "guidance_scale",
                "video_url",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "preprocess",
                "acceleration"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "WanVace14bDepthOutput": {
              "title": "WanVACEDepthResponse",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/wan-vace-depth-output.mp4"
                    }
                  ],
                  "description": "The generated depth video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-vace-14b/depth/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/depth/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/depth": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanVace14bDepthInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/depth/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanVace14bDepthOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-vace-14b/inpainting",
      "title": "fal-ai/wan-vace-14b/inpainting",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-vace-14b/inpainting",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/inpainting",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/inpainting/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "The video shows a man riding a horse on a vast grassland. He has long lavender hair and wears a traditional dress of a white top and black pants. The animation style makes him look like he is doing some kind of outdoor activity or performing. The background is a spectacular mountain range and cloud sky, giving a sense of tranquility and vastness. The entire video is shot from a fixed angle, focusing on the rider and his horse."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "match_input_num_frames",
          "type": "boolean",
          "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 241
        },
        {
          "name": "match_input_frames_per_second",
          "type": "boolean",
          "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
          "required": false,
          "default": 16
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "1:1",
            "9:16"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the source video file. Required for inpainting.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/vace/src_video.mp4"
          ]
        },
        {
          "name": "mask_video_url",
          "type": "string",
          "description": "URL to the source mask file. Required for inpainting.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/vace/src_mask.mp4"
          ]
        },
        {
          "name": "mask_image_url",
          "type": "string",
          "description": "URL to the guiding mask file. If provided, the model will use this mask as a reference to create masked video using salient mask tracking. Will be ignored if mask_video_url is provided.",
          "required": false,
          "default": ""
        },
        {
          "name": "ref_image_urls",
          "type": "array",
          "description": "Urls to source reference image. If provided, the model will use this image as reference.",
          "required": false,
          "default": [],
          "examples": [
            [
              "https://storage.googleapis.com/falserverless/vace/src_ref_image_1.png"
            ]
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "preprocess",
          "type": "boolean",
          "description": "Whether to preprocess the input video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
          "required": false,
          "default": "",
          "examples": [
            "none"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated inpainting video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-vace-14b/inpainting",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-vace-14b/inpainting",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-vace-14b/inpainting queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-vace-14b/inpainting",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/inpainting",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/inpainting/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanVace14bInpaintingInput": {
              "title": "WanVACEInpaintingRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The video shows a man riding a horse on a vast grassland. He has long lavender hair and wears a traditional dress of a white top and black pants. The animation style makes him look like he is doing some kind of outdoor activity or performing. The background is a spectacular mountain range and cloud sky, giving a sense of tranquility and vastness. The entire video is shot from a fixed angle, focusing on the rider and his horse."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/vace/src_video.mp4"
                  ],
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL to the source video file. Required for inpainting."
                },
                "acceleration": {
                  "anyOf": [
                    {
                      "enum": [
                        "none",
                        "regular"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Acceleration",
                  "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
                  "examples": [
                    "none"
                  ]
                },
                "mask_image_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mask Image URL",
                  "description": "URL to the guiding mask file. If provided, the model will use this mask as a reference to create masked video using salient mask tracking. Will be ignored if mask_video_url is provided."
                },
                "ref_image_urls": {
                  "examples": [
                    [
                      "https://storage.googleapis.com/falserverless/vace/src_ref_image_1.png"
                    ]
                  ],
                  "title": "Reference Image URLs",
                  "type": "array",
                  "description": "Urls to source reference image. If provided, the model will use this image as reference.",
                  "items": {
                    "type": "string"
                  }
                },
                "frames_per_second": {
                  "anyOf": [
                    {
                      "minimum": 5,
                      "maximum": 30,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Frames per Second",
                  "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
                  "default": 16
                },
                "match_input_num_frames": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Number of Frames",
                  "type": "boolean",
                  "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
                  "default": false
                },
                "guidance_scale": {
                  "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "examples": [
                    5
                  ],
                  "title": "Guidance Scale",
                  "default": 5
                },
                "num_frames": {
                  "minimum": 81,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
                  "default": 81
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "negative_prompt": {
                  "examples": [
                    "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "1:1",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "auto"
                },
                "match_input_frames_per_second": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Frames Per Second",
                  "type": "boolean",
                  "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
                  "default": false
                },
                "mask_video_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mask Video URL",
                  "description": "URL to the source mask file. Required for inpainting.",
                  "examples": [
                    "https://storage.googleapis.com/falserverless/vace/src_mask.mp4"
                  ]
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Number of Inference Steps",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                },
                "preprocess": {
                  "examples": [
                    false
                  ],
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the input video.",
                  "default": false
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "match_input_num_frames",
                "num_frames",
                "match_input_frames_per_second",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "guidance_scale",
                "video_url",
                "mask_video_url",
                "mask_image_url",
                "ref_image_urls",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "preprocess",
                "acceleration"
              ],
              "required": [
                "prompt",
                "video_url",
                "mask_video_url"
              ]
            },
            "WanVace14bInpaintingOutput": {
              "title": "WanVACEInpaintingResponse",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/wan-vace-inpainting-output.mp4"
                    }
                  ],
                  "description": "The generated inpainting video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-vace-14b/inpainting/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/inpainting/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/inpainting": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanVace14bInpaintingInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/inpainting/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanVace14bInpaintingOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-vace-14b/outpainting",
      "title": "fal-ai/wan-vace-14b/outpainting",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-vace-14b/outpainting",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/outpainting",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/outpainting/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A lone woman strides through the neon-drenched streets of Tokyo at night.  Her crimson dress, a vibrant splash of color against the deep blues and blacks of the cityscape, flows slightly with each step. A tailored black jacket, crisp and elegant, contrasts sharply with the dress's rich texture. Medium shot:  The city hums around her, blurred lights creating streaks of color in the background. Close-up:  The fabric of her dress catches the streetlight's glow, revealing a subtle silk sheen and the intricate stitching at the hem. Her black jacket’s subtle texture is visible – a fine wool perhaps, with a matte finish. The overall mood is one of quiet confidence and mystery, a vibrant woman navigating a bustling, nocturnal landscape. High resolution 4k."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "match_input_num_frames",
          "type": "boolean",
          "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 241
        },
        {
          "name": "match_input_frames_per_second",
          "type": "boolean",
          "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
          "required": false,
          "default": 16
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "1:1",
            "9:16"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the source video file. Required for outpainting.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
          "required": false,
          "default": "",
          "examples": [
            "none"
          ]
        },
        {
          "name": "expand_left",
          "type": "boolean",
          "description": "Whether to expand the video to the left.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "expand_right",
          "type": "boolean",
          "description": "Whether to expand the video to the right.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "expand_top",
          "type": "boolean",
          "description": "Whether to expand the video to the top.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "expand_bottom",
          "type": "boolean",
          "description": "Whether to expand the video to the bottom.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "expand_ratio",
          "type": "number",
          "description": "Amount of expansion. This is a float value between 0 and 1, where 0.25 adds 25% to the original video size on the specified sides.",
          "required": false,
          "default": 0.25,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0.25
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated outpainting video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-vace-14b/outpainting",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-vace-14b/outpainting",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-vace-14b/outpainting queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-vace-14b/outpainting",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/outpainting",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/outpainting/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanVace14bOutpaintingInput": {
              "title": "WanVACEOutpaintingRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A lone woman strides through the neon-drenched streets of Tokyo at night.  Her crimson dress, a vibrant splash of color against the deep blues and blacks of the cityscape, flows slightly with each step. A tailored black jacket, crisp and elegant, contrasts sharply with the dress's rich texture. Medium shot:  The city hums around her, blurred lights creating streaks of color in the background. Close-up:  The fabric of her dress catches the streetlight's glow, revealing a subtle silk sheen and the intricate stitching at the hem. Her black jacket’s subtle texture is visible – a fine wool perhaps, with a matte finish. The overall mood is one of quiet confidence and mystery, a vibrant woman navigating a bustling, nocturnal landscape. High resolution 4k."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4"
                  ],
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL to the source video file. Required for outpainting."
                },
                "acceleration": {
                  "anyOf": [
                    {
                      "enum": [
                        "none",
                        "regular"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Acceleration",
                  "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
                  "examples": [
                    "none"
                  ]
                },
                "frames_per_second": {
                  "anyOf": [
                    {
                      "minimum": 5,
                      "maximum": 30,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Frames per Second",
                  "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
                  "default": 16
                },
                "expand_ratio": {
                  "description": "Amount of expansion. This is a float value between 0 and 1, where 0.25 adds 25% to the original video size on the specified sides.",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "title": "Expand Ratio",
                  "examples": [
                    0.25
                  ],
                  "default": 0.25
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
                  "default": 81
                },
                "guidance_scale": {
                  "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "examples": [
                    5
                  ],
                  "title": "Guidance Scale",
                  "default": 5
                },
                "negative_prompt": {
                  "examples": [
                    "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "expand_bottom": {
                  "examples": [
                    true
                  ],
                  "title": "Expand Bottom",
                  "type": "boolean",
                  "description": "Whether to expand the video to the bottom.",
                  "default": false
                },
                "match_input_num_frames": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Number of Frames",
                  "type": "boolean",
                  "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
                  "default": false
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "1:1",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "auto"
                },
                "expand_right": {
                  "examples": [
                    true
                  ],
                  "title": "Expand Right",
                  "type": "boolean",
                  "description": "Whether to expand the video to the right.",
                  "default": false
                },
                "match_input_frames_per_second": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Frames Per Second",
                  "type": "boolean",
                  "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
                  "default": false
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Number of Inference Steps",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                },
                "expand_left": {
                  "examples": [
                    true
                  ],
                  "title": "Expand Left",
                  "type": "boolean",
                  "description": "Whether to expand the video to the left.",
                  "default": false
                },
                "expand_top": {
                  "examples": [
                    true
                  ],
                  "title": "Expand Top",
                  "type": "boolean",
                  "description": "Whether to expand the video to the top.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "match_input_num_frames",
                "num_frames",
                "match_input_frames_per_second",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "guidance_scale",
                "video_url",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "expand_left",
                "expand_right",
                "expand_top",
                "expand_bottom",
                "expand_ratio"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "WanVace14bOutpaintingOutput": {
              "title": "WanVACEOutpaintingResponse",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/wan-vace-outpainting-output.mp4"
                    }
                  ],
                  "description": "The generated outpainting video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-vace-14b/outpainting/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/outpainting/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/outpainting": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanVace14bOutpaintingInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/outpainting/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanVace14bOutpaintingOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-vace-14b/pose",
      "title": "fal-ai/wan-vace-14b/pose",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-vace-14b/pose",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/pose",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/pose/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation. For pose task, the prompt should describe the desired pose and action of the subject in the video.",
          "required": true,
          "default": "",
          "examples": [
            "A sharply dressed man walks toward the camera down a sun-drenched hallway.  Medium shot: He's framed from the knees up, his confident stride filling the frame.  His navy blue business suit is impeccably tailored, the fabric subtly shimmering under the light streaming through the tall, arched windows lining the hallway. Close-up:  The rich texture of the suit's wool is visible, each thread reflecting the light.  His crisp white shirt contrasts beautifully with the deep crimson of his silk tie, the knot perfectly formed.  The sunlight highlights the subtle sheen of his polished shoes.  The windows cast long shadows, highlighting the architectural detail of the hallway, creating a sense of both elegance and movement. High resolution 4k."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "match_input_num_frames",
          "type": "boolean",
          "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 241
        },
        {
          "name": "match_input_frames_per_second",
          "type": "boolean",
          "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
          "required": false,
          "default": 16
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "1:1",
            "9:16"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the source video file. Required for pose task.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/wan-vace-pose-video.mp4"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "preprocess",
          "type": "boolean",
          "description": "Whether to preprocess the input video.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
          "required": false,
          "default": "",
          "examples": [
            "none"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated pose video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-vace-14b/pose",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-vace-14b/pose",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-vace-14b/pose queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-vace-14b/pose",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/pose",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/pose/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanVace14bPoseInput": {
              "title": "WanVACEPoseRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A sharply dressed man walks toward the camera down a sun-drenched hallway.  Medium shot: He's framed from the knees up, his confident stride filling the frame.  His navy blue business suit is impeccably tailored, the fabric subtly shimmering under the light streaming through the tall, arched windows lining the hallway. Close-up:  The rich texture of the suit's wool is visible, each thread reflecting the light.  His crisp white shirt contrasts beautifully with the deep crimson of his silk tie, the knot perfectly formed.  The sunlight highlights the subtle sheen of his polished shoes.  The windows cast long shadows, highlighting the architectural detail of the hallway, creating a sense of both elegance and movement. High resolution 4k."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation. For pose task, the prompt should describe the desired pose and action of the subject in the video."
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/wan-vace-pose-video.mp4"
                  ],
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL to the source video file. Required for pose task."
                },
                "acceleration": {
                  "anyOf": [
                    {
                      "enum": [
                        "none",
                        "regular"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Acceleration",
                  "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
                  "examples": [
                    "none"
                  ]
                },
                "frames_per_second": {
                  "anyOf": [
                    {
                      "minimum": 5,
                      "maximum": 30,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Frames per Second",
                  "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
                  "default": 16
                },
                "match_input_num_frames": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Number of Frames",
                  "type": "boolean",
                  "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
                  "default": false
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
                  "default": 81
                },
                "guidance_scale": {
                  "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "examples": [
                    5
                  ],
                  "title": "Guidance Scale",
                  "default": 5
                },
                "negative_prompt": {
                  "examples": [
                    "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "1:1",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "auto"
                },
                "match_input_frames_per_second": {
                  "examples": [
                    false
                  ],
                  "title": "Match Input Frames Per Second",
                  "type": "boolean",
                  "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
                  "default": false
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Number of Inference Steps",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                },
                "preprocess": {
                  "examples": [
                    false
                  ],
                  "title": "Preprocess",
                  "type": "boolean",
                  "description": "Whether to preprocess the input video.",
                  "default": false
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "match_input_num_frames",
                "num_frames",
                "match_input_frames_per_second",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "guidance_scale",
                "video_url",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "preprocess",
                "acceleration"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "WanVace14bPoseOutput": {
              "title": "WanVACEPoseResponse",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/wan-vace-pose-output.mp4"
                    }
                  ],
                  "description": "The generated pose video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-vace-14b/pose/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/pose/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/pose": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanVace14bPoseInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/pose/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanVace14bPoseOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan-vace-14b/reframe",
      "title": "fal-ai/wan-vace-14b/reframe",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan-vace-14b/reframe",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/reframe",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/reframe/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation. Optional for reframing.",
          "required": false,
          "default": "",
          "examples": [
            ""
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "examples": [
            "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
          ]
        },
        {
          "name": "match_input_num_frames",
          "type": "boolean",
          "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 81,
          "maximum": 241
        },
        {
          "name": "match_input_frames_per_second",
          "type": "boolean",
          "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
          "required": false,
          "default": 16
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p,580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "1:1",
            "9:16"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 30,
          "minimum": 2,
          "maximum": 50
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "URL to the source video file. This video will be used as a reference for the reframe task.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, the safety checker will be enabled.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
          "required": false,
          "default": "",
          "examples": [
            "none"
          ]
        },
        {
          "name": "zoom_factor",
          "type": "number",
          "description": "Zoom factor for the video. When this value is greater than 0, the video will be zoomed in by this factor (in relation to the canvas size,) cutting off the edges of the video. A value of 0 means no zoom.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 0.9,
          "examples": [
            0
          ]
        },
        {
          "name": "temporal_downsample_factor",
          "type": "integer",
          "description": "Temporal downsample factor for the video. This is an integer value that determines how many frames to skip in the video. A value of 0 means no downsampling. For each downsample factor, one upsample factor will automatically be applied.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 5,
          "examples": [
            0
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. Options are 'rife' or 'film'.",
          "required": false,
          "default": "film",
          "enum": [
            "rife",
            "film"
          ],
          "examples": [
            "film"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt used for generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated reframe video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan-vace-14b/reframe",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan-vace-14b/reframe",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan-vace-14b/reframe queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan-vace-14b/reframe",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/reframe",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan-vace-14b/reframe/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanVace14bReframeInput": {
              "title": "WanVACEReframeRequest",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    ""
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation. Optional for reframing.",
                  "default": ""
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/web-examples/wan/t2v.mp4"
                  ],
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL to the source video file. This video will be used as a reference for the reframe task."
                },
                "acceleration": {
                  "anyOf": [
                    {
                      "enum": [
                        "none",
                        "regular"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Acceleration",
                  "description": "Acceleration to use for inference. Options are 'none' or 'regular'. Accelerated inference will very slightly affect output, but will be significantly faster.",
                  "examples": [
                    "none"
                  ]
                },
                "zoom_factor": {
                  "description": "Zoom factor for the video. When this value is greater than 0, the video will be zoomed in by this factor (in relation to the canvas size,) cutting off the edges of the video. A value of 0 means no zoom.",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 0.9,
                  "title": "Zoom Factor",
                  "examples": [
                    0
                  ],
                  "default": 0
                },
                "temporal_downsample_factor": {
                  "description": "Temporal downsample factor for the video. This is an integer value that determines how many frames to skip in the video. A value of 0 means no downsampling. For each downsample factor, one upsample factor will automatically be applied.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 5,
                  "examples": [
                    0
                  ],
                  "title": "Temporal Downsample Factor",
                  "default": 0
                },
                "frames_per_second": {
                  "anyOf": [
                    {
                      "minimum": 5,
                      "maximum": 30,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Frames per Second",
                  "description": "Frames per second of the generated video. Must be between 5 to 30. Ignored if match_input_frames_per_second is true.",
                  "default": 16
                },
                "match_input_num_frames": {
                  "examples": [
                    true
                  ],
                  "title": "Match Input Number of Frames",
                  "type": "boolean",
                  "description": "If true, the number of frames in the generated video will match the number of frames in the input video. If false, the number of frames will be determined by the num_frames parameter.",
                  "default": true
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, the safety checker will be enabled.",
                  "default": false
                },
                "num_frames": {
                  "minimum": 81,
                  "maximum": 241,
                  "type": "integer",
                  "title": "Number of Frames",
                  "description": "Number of frames to generate. Must be between 81 to 241 (inclusive).",
                  "default": 81
                },
                "guidance_scale": {
                  "description": "Guidance scale for classifier-free guidance. Higher values encourage the model to generate images closely related to the text prompt.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "examples": [
                    5
                  ],
                  "title": "Guidance Scale",
                  "default": 5
                },
                "negative_prompt": {
                  "examples": [
                    "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                  ],
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": "letterboxing, borders, black bars, bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards"
                },
                "resolution": {
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p,580p, or 720p).",
                  "default": "720p"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "1:1",
                    "9:16"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "default": "auto"
                },
                "match_input_frames_per_second": {
                  "examples": [
                    true
                  ],
                  "title": "Match Input Frames Per Second",
                  "type": "boolean",
                  "description": "If true, the frames per second of the generated video will match the input video. If false, the frames per second will be determined by the frames_per_second parameter.",
                  "default": true
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "interpolator_model": {
                  "enum": [
                    "rife",
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. Options are 'rife' or 'film'.",
                  "examples": [
                    "film"
                  ],
                  "default": "film"
                },
                "num_inference_steps": {
                  "minimum": 2,
                  "maximum": 50,
                  "type": "integer",
                  "title": "Number of Inference Steps",
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "default": 30
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "match_input_num_frames",
                "num_frames",
                "match_input_frames_per_second",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "guidance_scale",
                "video_url",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "zoom_factor",
                "temporal_downsample_factor",
                "interpolator_model"
              ],
              "required": [
                "video_url"
              ]
            },
            "WanVace14bReframeOutput": {
              "title": "WanVACEReframeResponse",
              "type": "object",
              "properties": {
                "prompt": {
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt used for generation."
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/wan-vace-reframe-output.mp4"
                    }
                  ],
                  "description": "The generated reframe video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "required": [
                "video",
                "prompt",
                "seed"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ]
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ]
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Content Type",
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan-vace-14b/reframe/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/reframe/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/reframe": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanVace14bReframeInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan-vace-14b/reframe/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanVace14bReframeOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-5b/image-to-video",
      "title": "fal-ai/wan/v2.2-5b/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-5b/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/image-to-video/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/wan/dragon-warrior.jpg"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 24,
          "examples": [
            24
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": ""
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (580p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 40,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            40
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            0
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-5b/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-5b/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-5b/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-5b/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV225bImageToVideoInput": {
              "x-fal-order-properties": [
                "image_url",
                "prompt",
                "num_frames",
                "frames_per_second",
                "negative_prompt",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "guidance_scale",
                "shift",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "description": "Shift value for the video. Must be between 1.0 and 10.0.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Shift",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    0
                  ],
                  "default": 0
                },
                "frames_per_second": {
                  "examples": [
                    24
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 24
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (580p or 720p).",
                  "enum": [
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/wan/dragon-warrior.jpg"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "num_inference_steps": {
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "Number of Inference Steps",
                  "examples": [
                    40
                  ],
                  "default": 40
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                }
              },
              "title": "WanSmallI2VRequest",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "WanV225bImageToVideoOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/model_tests/wan/v2.2-small-i2v-output.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanSmallI2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-5b/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV225bImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV225bImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-5b/text-to-video",
      "title": "fal-ai/wan/v2.2-5b/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-5b/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": ""
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 24,
          "examples": [
            24
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (580p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "examples": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 40,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            40
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            0
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-5b/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-5b/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-5b/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-5b/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-2.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV225bTextToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "guidance_scale",
                "shift",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "description": "Shift value for the video. Must be between 1.0 and 10.0.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Shift",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    0
                  ],
                  "default": 0
                },
                "frames_per_second": {
                  "examples": [
                    24
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 24
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "examples": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "default": "16:9"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (580p or 720p).",
                  "enum": [
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "num_inference_steps": {
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "Number of Inference Steps",
                  "examples": [
                    40
                  ],
                  "default": 40
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                }
              },
              "title": "WanSmallT2VRequest",
              "required": [
                "prompt"
              ]
            },
            "WanV225bTextToVideoOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/model_tests/wan/v2.2-small-output.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanSmallT2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-5b/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV225bTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV225bTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-5b/text-to-video/distill",
      "title": "fal-ai/wan/v2.2-5b/text-to-video/distill",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-5b/text-to-video/distill",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/kangaroo/40VOx0fdYnthcwT_S30u4_98d8b53ed1dd439db51e2ffa2d253427.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/distill",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/distill/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 24,
          "examples": [
            24
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (580p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "examples": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 40,
          "minimum": 2,
          "maximum": 50,
          "examples": [
            40
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 1,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            1
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            0
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-5b/text-to-video/distill",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-5b/text-to-video/distill",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-5b/text-to-video/distill queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-5b/text-to-video/distill",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/kangaroo/40VOx0fdYnthcwT_S30u4_98d8b53ed1dd439db51e2ffa2d253427.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/distill",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/distill/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV225bTextToVideoDistillInput": {
              "x-fal-order-properties": [
                "prompt",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "guidance_scale",
                "shift",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "description": "Shift value for the video. Must be between 1.0 and 10.0.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Shift",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    0
                  ],
                  "default": 0
                },
                "frames_per_second": {
                  "examples": [
                    24
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 24
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (1st Stage)",
                  "examples": [
                    1
                  ],
                  "default": 1
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "examples": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "default": "16:9"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (580p or 720p).",
                  "enum": [
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "num_inference_steps": {
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 50,
                  "title": "Number of Inference Steps",
                  "examples": [
                    40
                  ],
                  "default": 40
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                }
              },
              "title": "WanDistillT2VRequest",
              "required": [
                "prompt"
              ]
            },
            "WanV225bTextToVideoDistillOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/model_tests/wan/v2.2-small-output.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanSmallT2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-5b/text-to-video/distill/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video/distill/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video/distill": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV225bTextToVideoDistillInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video/distill/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV225bTextToVideoDistillOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-5b/text-to-video/fast-wan",
      "title": "fal-ai/wan/v2.2-5b/text-to-video/fast-wan",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-5b/text-to-video/fast-wan",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/4c9sGLsb2lXhga0i89W2N_47ef03f9caa949ca901a2801a4d42e6a.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/fast-wan",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/fast-wan/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": ""
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 24,
          "examples": [
            24
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (580p or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "examples": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 0,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            0
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-5b/text-to-video/fast-wan",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-5b/text-to-video/fast-wan",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-5b/text-to-video/fast-wan queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-5b/text-to-video/fast-wan",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/4c9sGLsb2lXhga0i89W2N_47ef03f9caa949ca901a2801a4d42e6a.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/fast-wan",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-5b/text-to-video/fast-wan/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV225bTextToVideoFastWanInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "guidance_scale",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    0
                  ],
                  "default": 0
                },
                "frames_per_second": {
                  "examples": [
                    24
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 24
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "examples": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "default": "16:9"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (580p or 720p).",
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                }
              },
              "title": "WanSmallFastVideoT2VRequest",
              "required": [
                "prompt"
              ]
            },
            "WanV225bTextToVideoFastWanOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/model_tests/wan/v2.2-small-output.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanSmallFastVideoT2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-5b/text-to-video/fast-wan/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video/fast-wan/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video/fast-wan": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV225bTextToVideoFastWanInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-5b/text-to-video/fast-wan/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV225bTextToVideoFastWanOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-a14b/image-to-video",
      "title": "fal-ai/wan/v2.2-a14b/image-to-video",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-a14b/image-to-video",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/wan/dragon-warrior.jpg"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 16,
          "examples": [
            16
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": ""
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 27,
          "minimum": 2,
          "maximum": 40,
          "examples": [
            27
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "guidance_scale_2",
          "type": "number",
          "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            1
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "URL of the end image.",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-a14b/image-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-a14b/image-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-a14b/image-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-a14b/image-to-video",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV22A14bImageToVideoInput": {
              "x-fal-order-properties": [
                "image_url",
                "prompt",
                "num_frames",
                "frames_per_second",
                "negative_prompt",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "guidance_scale",
                "guidance_scale_2",
                "shift",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode",
                "end_image_url"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "description": "Shift value for the video. Must be between 1.0 and 10.0.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Shift",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "acceleration": {
                  "examples": [
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "default": "regular"
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    1
                  ],
                  "default": 1
                },
                "frames_per_second": {
                  "examples": [
                    16
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 16
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (1st Stage)",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "end_image_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "End Image URL",
                  "description": "URL of the end image."
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p, 580p, or 720p).",
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "guidance_scale_2": {
                  "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (2nd Stage)",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/wan/dragon-warrior.jpg"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "num_inference_steps": {
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 40,
                  "title": "Number of Inference Steps",
                  "examples": [
                    27
                  ],
                  "default": 27
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                }
              },
              "title": "WanI2VRequest",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "WanV22A14bImageToVideoOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/lion/Fbuh3lO_HMT-pS0DATbio_tmp08c3v477.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanI2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-a14b/image-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV22A14bImageToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV22A14bImageToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-a14b/image-to-video/lora",
      "title": "fal-ai/wan/v2.2-a14b/image-to-video/lora",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-a14b/image-to-video/lora",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/monkey/Pu175Pi1Z0phr_hCod2pk_51e51de631a54b58ba789155b6955c94.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/lora",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/lora/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/gallery/car_720p.png"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "Cars racing in slow motion"
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 16,
          "examples": [
            16
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": ""
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 27,
          "minimum": 2,
          "maximum": 40,
          "examples": [
            27
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "guidance_scale_2",
          "type": "number",
          "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            4
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            1
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to be used in the inference.",
          "required": false,
          "default": []
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "If true, the video will be reversed.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-a14b/image-to-video/lora",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-a14b/image-to-video/lora",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-a14b/image-to-video/lora queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-a14b/image-to-video/lora",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/monkey/Pu175Pi1Z0phr_hCod2pk_51e51de631a54b58ba789155b6955c94.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/lora",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/lora/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV22A14bImageToVideoLoraInput": {
              "x-fal-order-properties": [
                "image_url",
                "prompt",
                "num_frames",
                "frames_per_second",
                "negative_prompt",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "guidance_scale",
                "guidance_scale_2",
                "shift",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode",
                "loras",
                "reverse_video"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Cars racing in slow motion"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "description": "Shift value for the video. Must be between 1.0 and 10.0.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Shift",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "acceleration": {
                  "examples": [
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "default": "regular"
                },
                "reverse_video": {
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "If true, the video will be reversed.",
                  "default": false
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    1
                  ],
                  "default": 1
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to be used in the inference.",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "frames_per_second": {
                  "examples": [
                    16
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 16
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (1st Stage)",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p, 580p, or 720p).",
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "guidance_scale_2": {
                  "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (2nd Stage)",
                  "examples": [
                    4
                  ],
                  "default": 4
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/gallery/car_720p.png"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "num_inference_steps": {
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 40,
                  "title": "Number of Inference Steps",
                  "examples": [
                    27
                  ],
                  "default": 27
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                }
              },
              "title": "WanLoRAI2VRequest",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "WanV22A14bImageToVideoLoraOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://v3.fal.media/files/lion/Fbuh3lO_HMT-pS0DATbio_tmp08c3v477.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanI2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "LoRAWeight": {
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale",
                "transformer"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "title": "Scale",
                  "default": 1
                },
                "transformer": {
                  "enum": [
                    "high",
                    "low",
                    "both"
                  ],
                  "title": "Transformer",
                  "type": "string",
                  "description": "Specifies the transformer to load the lora weight into. 'high' loads into the high-noise transformer, 'low' loads it into the low-noise transformer, while 'both' loads the LoRA into both transformers.",
                  "default": "high"
                },
                "weight_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Weight Name",
                  "description": "Name of the LoRA weight. Used only if `path` is a Hugging Face repository, and required only if you have more than 1 safetensors file in the repo."
                }
              },
              "title": "LoRAWeight",
              "required": [
                "path"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-a14b/image-to-video/lora/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video/lora/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video/lora": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV22A14bImageToVideoLoraInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video/lora/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV22A14bImageToVideoLoraOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-a14b/image-to-video/turbo",
      "title": "fal-ai/wan/v2.2-a14b/image-to-video/turbo",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-a14b/image-to-video/turbo",
      "category": "image-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/turbo",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/turbo/api",
      "inputs": [
        {
          "name": "image_url",
          "type": "string",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/model_tests/wan/dragon-warrior.jpg"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        },
        {
          "name": "end_image_url",
          "type": "string",
          "description": "URL of the end image.",
          "required": false,
          "default": ""
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-a14b/image-to-video/turbo",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-a14b/image-to-video/turbo",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-a14b/image-to-video/turbo queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-a14b/image-to-video/turbo",
            "category": "image-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-1.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/turbo",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/image-to-video/turbo/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV22A14bImageToVideoTurboInput": {
              "x-fal-order-properties": [
                "image_url",
                "prompt",
                "seed",
                "resolution",
                "aspect_ratio",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "video_quality",
                "video_write_mode",
                "end_image_url"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p, 580p, or 720p).",
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "acceleration": {
                  "examples": [
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "default": "regular"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
                  "default": "auto"
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "image_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/model_tests/wan/dragon-warrior.jpg"
                  ],
                  "title": "Image URL",
                  "type": "string",
                  "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped."
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "end_image_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "End Image URL",
                  "description": "URL of the end image."
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                }
              },
              "title": "WanTurboI2VRequest",
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "WanV22A14bImageToVideoTurboOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/gallery/wan-i2v-turbo.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanTurboI2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-a14b/image-to-video/turbo/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video/turbo/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video/turbo": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV22A14bImageToVideoTurboInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/image-to-video/turbo/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV22A14bImageToVideoTurboOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-a14b/text-to-video",
      "title": "fal-ai/wan/v2.2-a14b/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-a14b/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A close-up of a young woman smiling gently in the rain, raindrops glistening on her face and eyelashes. The video captures the delicate details of her expression and the water droplets, with soft light reflecting off her skin in the rainy atmosphere."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": ""
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 16,
          "examples": [
            16
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "examples": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 27,
          "minimum": 2,
          "maximum": 40,
          "examples": [
            27
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "guidance_scale_2",
          "type": "number",
          "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            4
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            1
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-a14b/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-a14b/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-a14b/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-a14b/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV22A14bTextToVideoInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "guidance_scale",
                "guidance_scale_2",
                "shift",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A close-up of a young woman smiling gently in the rain, raindrops glistening on her face and eyelashes. The video captures the delicate details of her expression and the water droplets, with soft light reflecting off her skin in the rainy atmosphere."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "description": "Shift value for the video. Must be between 1.0 and 10.0.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Shift",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "acceleration": {
                  "examples": [
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "default": "regular"
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    1
                  ],
                  "default": 1
                },
                "frames_per_second": {
                  "examples": [
                    16
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 16
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (1st Stage)",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "examples": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "default": "16:9"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p, 580p, or 720p).",
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "guidance_scale_2": {
                  "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (2nd Stage)",
                  "examples": [
                    4
                  ],
                  "default": 4
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "num_inference_steps": {
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 40,
                  "title": "Number of Inference Steps",
                  "examples": [
                    27
                  ],
                  "default": 27
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                }
              },
              "title": "WanT2VRequest",
              "required": [
                "prompt"
              ]
            },
            "WanV22A14bTextToVideoOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A close-up of a young woman smiling gently in the rain, raindrops glistening on her face and eyelashes. The video captures the delicate details of her expression and the water droplets, with soft light reflecting off her skin in the rainy atmosphere."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/model_tests/wan/v2.2-woman-output.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanT2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-a14b/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV22A14bTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV22A14bTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-a14b/text-to-video/lora",
      "title": "fal-ai/wan/v2.2-a14b/text-to-video/lora",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-a14b/text-to-video/lora",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/lion/brSX2_cSumQ6aBMB-jTpi_ebd2e40e80d243e2a65f96daf3c961c7.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/lora",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/lora/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A close-up of a young woman smiling gently in the rain, raindrops glistening on her face and eyelashes. The video captures the delicate details of her expression and the water droplets, with soft light reflecting off her skin in the rainy atmosphere."
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": ""
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 16,
          "examples": [
            16
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "examples": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 27,
          "minimum": 2,
          "maximum": 40,
          "examples": [
            27
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "guidance_scale_2",
          "type": "number",
          "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            4
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            1
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        },
        {
          "name": "loras",
          "type": "array",
          "description": "LoRA weights to be used in the inference.",
          "required": false,
          "default": []
        },
        {
          "name": "reverse_video",
          "type": "boolean",
          "description": "If true, the video will be reversed.",
          "required": false,
          "default": false
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-a14b/text-to-video/lora",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-a14b/text-to-video/lora",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-a14b/text-to-video/lora queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-a14b/text-to-video/lora",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/lion/brSX2_cSumQ6aBMB-jTpi_ebd2e40e80d243e2a65f96daf3c961c7.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/lora",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/lora/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV22A14bTextToVideoLoraInput": {
              "x-fal-order-properties": [
                "prompt",
                "negative_prompt",
                "num_frames",
                "frames_per_second",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "guidance_scale",
                "guidance_scale_2",
                "shift",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode",
                "loras",
                "reverse_video"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A close-up of a young woman smiling gently in the rain, raindrops glistening on her face and eyelashes. The video captures the delicate details of her expression and the water droplets, with soft light reflecting off her skin in the rainy atmosphere."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "shift": {
                  "description": "Shift value for the video. Must be between 1.0 and 10.0.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Shift",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "acceleration": {
                  "examples": [
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "default": "regular"
                },
                "reverse_video": {
                  "title": "Reverse Video",
                  "type": "boolean",
                  "description": "If true, the video will be reversed.",
                  "default": false
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    1
                  ],
                  "default": 1
                },
                "loras": {
                  "title": "Loras",
                  "type": "array",
                  "description": "LoRA weights to be used in the inference.",
                  "items": {
                    "$ref": "#/components/schemas/LoRAWeight"
                  },
                  "default": []
                },
                "frames_per_second": {
                  "examples": [
                    16
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 16
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (1st Stage)",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "examples": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "default": "16:9"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p, 580p, or 720p).",
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "guidance_scale_2": {
                  "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (2nd Stage)",
                  "examples": [
                    4
                  ],
                  "default": 4
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "num_inference_steps": {
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 40,
                  "title": "Number of Inference Steps",
                  "examples": [
                    27
                  ],
                  "default": 27
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                }
              },
              "title": "WanLoRAT2VRequest",
              "required": [
                "prompt"
              ]
            },
            "WanV22A14bTextToVideoLoraOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A close-up of a young woman smiling gently in the rain, raindrops glistening on her face and eyelashes. The video captures the delicate details of her expression and the water droplets, with soft light reflecting off her skin in the rainy atmosphere."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/model_tests/wan/v2.2-woman-output.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanT2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "LoRAWeight": {
              "x-fal-order-properties": [
                "path",
                "weight_name",
                "scale",
                "transformer"
              ],
              "type": "object",
              "properties": {
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "URL or the path to the LoRA weights."
                },
                "scale": {
                  "minimum": 0,
                  "maximum": 4,
                  "type": "number",
                  "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
                  "title": "Scale",
                  "default": 1
                },
                "transformer": {
                  "enum": [
                    "high",
                    "low",
                    "both"
                  ],
                  "title": "Transformer",
                  "type": "string",
                  "description": "Specifies the transformer to load the lora weight into. 'high' loads into the high-noise transformer, 'low' loads it into the low-noise transformer, while 'both' loads the LoRA into both transformers.",
                  "default": "high"
                },
                "weight_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Weight Name",
                  "description": "Name of the LoRA weight. Used only if `path` is a Hugging Face repository, and required only if you have more than 1 safetensors file in the repo."
                }
              },
              "title": "LoRAWeight",
              "required": [
                "path"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-a14b/text-to-video/lora/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video/lora/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video/lora": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV22A14bTextToVideoLoraInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video/lora/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV22A14bTextToVideoLoraOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-a14b/text-to-video/turbo",
      "title": "fal-ai/wan/v2.2-a14b/text-to-video/turbo",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-a14b/text-to-video/turbo",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/turbo",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/turbo/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
          ]
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video (16:9 or 9:16).",
          "required": false,
          "default": "16:9",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "examples": [
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-a14b/text-to-video/turbo",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-a14b/text-to-video/turbo",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-a14b/text-to-video/turbo queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-a14b/text-to-video/turbo",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/for%20videos-4.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/turbo",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/text-to-video/turbo/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV22A14bTextToVideoTurboInput": {
              "x-fal-order-properties": [
                "prompt",
                "seed",
                "resolution",
                "aspect_ratio",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "video_quality",
                "video_write_mode"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p, 580p, or 720p).",
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "acceleration": {
                  "examples": [
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "default": "regular"
                },
                "aspect_ratio": {
                  "examples": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video (16:9 or 9:16).",
                  "enum": [
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "default": "16:9"
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                }
              },
              "title": "WanTurboT2VRequest",
              "required": [
                "prompt"
              ]
            },
            "WanV22A14bTextToVideoTurboOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A medium shot establishes a modern, minimalist office setting: clean lines, muted grey walls, and polished wood surfaces. The focus shifts to a close-up on a woman in sharp, navy blue business attire. Her crisp white blouse contrasts with the deep blue of her tailored suit jacket. The subtle texture of the fabric is visible—a fine weave with a slight sheen. Her expression is serious, yet engaging, as she speaks to someone unseen just beyond the frame. Close-up on her eyes, showing the intensity of her gaze and the fine lines around them that hint at experience and focus. Her lips are slightly parted, as if mid-sentence. The light catches the subtle highlights in her auburn hair, meticulously styled. Note the slight catch of light on the silver band of her watch. High resolution 4k"
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/gallery/wan-t2v-turbo.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanTurboT2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-a14b/text-to-video/turbo/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video/turbo/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video/turbo": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV22A14bTextToVideoTurboInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/text-to-video/turbo/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV22A14bTextToVideoTurboOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "fal-ai/wan/v2.2-a14b/video-to-video",
      "title": "fal-ai/wan/v2.2-a14b/video-to-video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/fal-ai/wan/v2.2-a14b/video-to-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://v3.fal.media/files/kangaroo/fRLY4F3IQ1P3DwmVR8WUO_Mmzbg7vdKVmIAsxNycTbw_4a43f046e5be4a97b45a98320ff47bf3.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/video-to-video",
      "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/video-to-video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "URL of the input video.",
          "required": true,
          "default": "",
          "examples": [
            "https://storage.googleapis.com/falserverless/example_inputs/wan-2.2-v2v-input.mp4"
          ]
        },
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt to guide video generation.",
          "required": true,
          "default": "",
          "examples": [
            "A low-angle medium shot captures a domestic white cat with brown and black patches and a blue bandana sitting on a light-colored tiled floor indoors, meticulously grooming itself by licking its paw and then rubbing its face with it, against a soft-focused background of wooden kitchen cabinets and a reflective metallic appliance."
          ]
        },
        {
          "name": "strength",
          "type": "number",
          "description": "Strength of the video transformation. A value of 1.0 means the output will be completely based on the prompt, while a value of 0.0 means the output will be identical to the input video.",
          "required": false,
          "default": 0.9,
          "minimum": 0,
          "maximum": 1,
          "examples": [
            0.9
          ]
        },
        {
          "name": "num_frames",
          "type": "integer",
          "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
          "required": false,
          "default": 81,
          "minimum": 17,
          "maximum": 121,
          "examples": [
            81
          ]
        },
        {
          "name": "frames_per_second",
          "type": "integer",
          "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
          "required": false,
          "default": 16,
          "examples": [
            16
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt for video generation.",
          "required": false,
          "default": ""
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "required": false,
          "default": null
        },
        {
          "name": "resolution",
          "type": "string",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "required": false,
          "default": "720p",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "examples": [
            "720p"
          ]
        },
        {
          "name": "aspect_ratio",
          "type": "string",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input video.",
          "required": false,
          "default": "auto",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ]
        },
        {
          "name": "num_inference_steps",
          "type": "integer",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "required": false,
          "default": 27,
          "minimum": 2,
          "maximum": 40,
          "examples": [
            27
          ]
        },
        {
          "name": "enable_safety_checker",
          "type": "boolean",
          "description": "If set to true, input data will be checked for safety before processing.",
          "required": false,
          "default": false,
          "examples": [
            true
          ]
        },
        {
          "name": "enable_prompt_expansion",
          "type": "boolean",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "name": "acceleration",
          "type": "string",
          "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
          "required": false,
          "default": "regular",
          "enum": [
            "none",
            "regular"
          ],
          "examples": [
            "regular"
          ]
        },
        {
          "name": "guidance_scale",
          "type": "number",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "required": false,
          "default": 3.5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            3.5
          ]
        },
        {
          "name": "guidance_scale_2",
          "type": "number",
          "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
          "required": false,
          "default": 4,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            4
          ]
        },
        {
          "name": "shift",
          "type": "number",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "required": false,
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "examples": [
            5
          ]
        },
        {
          "name": "interpolator_model",
          "type": "string",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "required": false,
          "default": "film",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "examples": [
            "film"
          ]
        },
        {
          "name": "num_interpolated_frames",
          "type": "integer",
          "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
          "required": false,
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "examples": [
            1
          ]
        },
        {
          "name": "adjust_fps_for_interpolation",
          "type": "boolean",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
          "required": false,
          "default": true,
          "examples": [
            true
          ]
        },
        {
          "name": "video_quality",
          "type": "string",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "required": false,
          "default": "high",
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "examples": [
            "high"
          ]
        },
        {
          "name": "video_write_mode",
          "type": "string",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "required": false,
          "default": "balanced",
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "examples": [
            "balanced"
          ]
        },
        {
          "name": "resample_fps",
          "type": "boolean",
          "description": "If true, the video will be resampled to the passed frames per second. If false, the video will not be resampled.",
          "required": false,
          "default": false,
          "examples": [
            false
          ]
        }
      ],
      "outputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The text prompt used for video generation."
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed used for generation."
        },
        {
          "name": "video",
          "type": "string",
          "description": "The generated video file."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=fal-ai/wan/v2.2-a14b/video-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for fal-ai/wan/v2.2-a14b/video-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the fal-ai/wan/v2.2-a14b/video-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "fal-ai/wan/v2.2-a14b/video-to-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://v3.fal.media/files/kangaroo/fRLY4F3IQ1P3DwmVR8WUO_Mmzbg7vdKVmIAsxNycTbw_4a43f046e5be4a97b45a98320ff47bf3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/video-to-video",
            "documentationUrl": "https://fal.ai/models/fal-ai/wan/v2.2-a14b/video-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "WanV22A14bVideoToVideoInput": {
              "x-fal-order-properties": [
                "video_url",
                "prompt",
                "strength",
                "num_frames",
                "frames_per_second",
                "negative_prompt",
                "seed",
                "resolution",
                "aspect_ratio",
                "num_inference_steps",
                "enable_safety_checker",
                "enable_prompt_expansion",
                "acceleration",
                "guidance_scale",
                "guidance_scale_2",
                "shift",
                "interpolator_model",
                "num_interpolated_frames",
                "adjust_fps_for_interpolation",
                "video_quality",
                "video_write_mode",
                "resample_fps"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A low-angle medium shot captures a domestic white cat with brown and black patches and a blue bandana sitting on a light-colored tiled floor indoors, meticulously grooming itself by licking its paw and then rubbing its face with it, against a soft-focused background of wooden kitchen cabinets and a reflective metallic appliance."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt to guide video generation."
                },
                "video_url": {
                  "examples": [
                    "https://storage.googleapis.com/falserverless/example_inputs/wan-2.2-v2v-input.mp4"
                  ],
                  "title": "Video URL",
                  "type": "string",
                  "description": "URL of the input video."
                },
                "acceleration": {
                  "examples": [
                    "regular"
                  ],
                  "title": "Acceleration",
                  "type": "string",
                  "description": "Acceleration level to use. The more acceleration, the faster the generation, but with lower quality. The recommended value is 'regular'.",
                  "enum": [
                    "none",
                    "regular"
                  ],
                  "default": "regular"
                },
                "num_interpolated_frames": {
                  "description": "Number of frames to interpolate between each pair of generated frames. Must be between 0 and 4.",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 4,
                  "title": "Number of Interpolated Frames",
                  "examples": [
                    1
                  ],
                  "default": 1
                },
                "shift": {
                  "description": "Shift value for the video. Must be between 1.0 and 10.0.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Shift",
                  "examples": [
                    5
                  ],
                  "default": 5
                },
                "resample_fps": {
                  "examples": [
                    false
                  ],
                  "title": "Resample Video Frame Rate",
                  "type": "boolean",
                  "description": "If true, the video will be resampled to the passed frames per second. If false, the video will not be resampled.",
                  "default": false
                },
                "frames_per_second": {
                  "examples": [
                    16
                  ],
                  "title": "Frames per Second",
                  "anyOf": [
                    {
                      "minimum": 4,
                      "maximum": 60,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and `adjust_fps_for_interpolation` is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If `adjust_fps_for_interpolation` is set to false, this value will be used as-is.",
                  "default": 16
                },
                "guidance_scale": {
                  "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (1st Stage)",
                  "examples": [
                    3.5
                  ],
                  "default": 3.5
                },
                "num_frames": {
                  "description": "Number of frames to generate. Must be between 17 to 121 (inclusive).",
                  "type": "integer",
                  "minimum": 17,
                  "title": "Number of Frames",
                  "examples": [
                    81
                  ],
                  "maximum": 121,
                  "default": 81
                },
                "enable_safety_checker": {
                  "examples": [
                    true
                  ],
                  "title": "Enable Safety Checker",
                  "type": "boolean",
                  "description": "If set to true, input data will be checked for safety before processing.",
                  "default": false
                },
                "negative_prompt": {
                  "title": "Negative Prompt",
                  "type": "string",
                  "description": "Negative prompt for video generation.",
                  "default": ""
                },
                "video_write_mode": {
                  "examples": [
                    "balanced"
                  ],
                  "title": "Video Write Mode",
                  "type": "string",
                  "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
                  "enum": [
                    "fast",
                    "balanced",
                    "small"
                  ],
                  "default": "balanced"
                },
                "aspect_ratio": {
                  "enum": [
                    "auto",
                    "16:9",
                    "9:16",
                    "1:1"
                  ],
                  "title": "Aspect Ratio",
                  "type": "string",
                  "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input video.",
                  "default": "auto"
                },
                "resolution": {
                  "examples": [
                    "720p"
                  ],
                  "title": "Resolution",
                  "type": "string",
                  "description": "Resolution of the generated video (480p, 580p, or 720p).",
                  "enum": [
                    "480p",
                    "580p",
                    "720p"
                  ],
                  "default": "720p"
                },
                "guidance_scale_2": {
                  "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10,
                  "title": "Guidance Scale (2nd Stage)",
                  "examples": [
                    4
                  ],
                  "default": 4
                },
                "video_quality": {
                  "examples": [
                    "high"
                  ],
                  "title": "Video Quality",
                  "type": "string",
                  "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "maximum"
                  ],
                  "default": "high"
                },
                "strength": {
                  "description": "Strength of the video transformation. A value of 1.0 means the output will be completely based on the prompt, while a value of 0.0 means the output will be identical to the input video.",
                  "type": "number",
                  "minimum": 0,
                  "title": "Strength",
                  "examples": [
                    0.9
                  ],
                  "maximum": 1,
                  "default": 0.9
                },
                "enable_prompt_expansion": {
                  "examples": [
                    false
                  ],
                  "title": "Enable Prompt Expansion",
                  "type": "boolean",
                  "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
                  "default": false
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Random seed for reproducibility. If None, a random seed is chosen."
                },
                "interpolator_model": {
                  "examples": [
                    "film"
                  ],
                  "title": "Interpolator Model",
                  "type": "string",
                  "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
                  "enum": [
                    "none",
                    "film",
                    "rife"
                  ],
                  "default": "film"
                },
                "num_inference_steps": {
                  "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 40,
                  "title": "Number of Inference Steps",
                  "examples": [
                    27
                  ],
                  "default": 27
                },
                "adjust_fps_for_interpolation": {
                  "examples": [
                    true
                  ],
                  "title": "Adjust FPS for Interpolation",
                  "type": "boolean",
                  "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If false, the passed frames per second will be used as-is.",
                  "default": true
                }
              },
              "title": "WanV2VRequest",
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "WanV22A14bVideoToVideoOutput": {
              "x-fal-order-properties": [
                "video",
                "prompt",
                "seed"
              ],
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "A low-angle medium shot captures a domestic white cat with brown and black patches and a blue bandana sitting on a light-colored tiled floor indoors, meticulously grooming itself by licking its paw and then rubbing its face with it, against a soft-focused background of wooden kitchen cabinets and a reflective metallic appliance."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The text prompt used for video generation.",
                  "default": ""
                },
                "seed": {
                  "title": "Seed",
                  "type": "integer",
                  "description": "The seed used for generation."
                },
                "video": {
                  "examples": [
                    {
                      "url": "https://storage.googleapis.com/falserverless/example_outputs/wan-2.2-v2v-output.mp4"
                    }
                  ],
                  "description": "The generated video file.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "WanV2VResponse",
              "required": [
                "video",
                "seed"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/fal-ai/wan/v2.2-a14b/video-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/video-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/video-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/WanV22A14bVideoToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/fal-ai/wan/v2.2-a14b/video-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WanV22A14bVideoToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "mirelo-ai/sfx-v1/video-to-video",
      "title": "mirelo-ai/sfx-v1/video-to-video",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/mirelo-ai/sfx-v1/video-to-video",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/koala/ZgJTjdDKaW4OFVZqUmepA_4f542f98a3fc4edbb9043ff22131adde.jpg",
      "playgroundUrl": "https://fal.ai/models/mirelo-ai/sfx-v1/video-to-video",
      "documentationUrl": "https://fal.ai/models/mirelo-ai/sfx-v1/video-to-video/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "A video url that can accessed from the API to process and add sound effects",
          "required": true,
          "default": "",
          "examples": [
            "https://di3otfzjg1gxa.cloudfront.net/input_example.mp4"
          ]
        },
        {
          "name": "text_prompt",
          "type": "string",
          "description": "Additional description to guide the model",
          "required": false,
          "default": "",
          "examples": [
            ""
          ]
        },
        {
          "name": "num_samples",
          "type": "integer",
          "description": "The number of samples to generate from the model",
          "required": false,
          "default": 2
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "The seed to use for the generation. If not provided, a random seed will be used",
          "required": false,
          "default": 2105
        },
        {
          "name": "duration",
          "type": "number",
          "description": "The duration of the generated audio in seconds",
          "required": false,
          "default": 10
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "array",
          "description": "The processed video with sound effects"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=mirelo-ai/sfx-v1/video-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for mirelo-ai/sfx-v1/video-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the mirelo-ai/sfx-v1/video-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "mirelo-ai/sfx-v1/video-to-video",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/koala/ZgJTjdDKaW4OFVZqUmepA_4f542f98a3fc4edbb9043ff22131adde.jpg",
            "playgroundUrl": "https://fal.ai/models/mirelo-ai/sfx-v1/video-to-video",
            "documentationUrl": "https://fal.ai/models/mirelo-ai/sfx-v1/video-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "SfxV1VideoToVideoInput": {
              "x-fal-order-properties": [
                "video_url",
                "text_prompt",
                "num_samples",
                "seed",
                "duration"
              ],
              "type": "object",
              "properties": {
                "num_samples": {
                  "anyOf": [
                    {
                      "minimum": 2,
                      "maximum": 8,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Num Samples",
                  "description": "The number of samples to generate from the model",
                  "default": 2
                },
                "video_url": {
                  "format": "uri",
                  "description": "A video url that can accessed from the API to process and add sound effects",
                  "type": "string",
                  "examples": [
                    "https://di3otfzjg1gxa.cloudfront.net/input_example.mp4"
                  ],
                  "maxLength": 2083,
                  "minLength": 1,
                  "title": "Video Url"
                },
                "duration": {
                  "anyOf": [
                    {
                      "minimum": 1,
                      "maximum": 10,
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Duration",
                  "description": "The duration of the generated audio in seconds",
                  "default": 10
                },
                "seed": {
                  "anyOf": [
                    {
                      "minimum": 1,
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The seed to use for the generation. If not provided, a random seed will be used",
                  "title": "Seed",
                  "default": 2105
                },
                "text_prompt": {
                  "examples": [
                    ""
                  ],
                  "title": "Text Prompt",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Additional description to guide the model"
                }
              },
              "title": "Input",
              "required": [
                "video_url"
              ]
            },
            "SfxV1VideoToVideoOutput": {
              "title": "VideoOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    [
                      {
                        "file_name": "generated_output_1.mp4",
                        "content_type": "video/mp4",
                        "url": "https://di3otfzjg1gxa.cloudfront.net/generated_output_1.mp4"
                      },
                      {
                        "file_name": "generated_output_2.mp4",
                        "content_type": "video/mp4",
                        "url": "https://di3otfzjg1gxa.cloudfront.net/generated_output_2.mp4"
                      }
                    ]
                  ],
                  "title": "Video",
                  "type": "array",
                  "description": "The processed video with sound effects",
                  "items": {
                    "$ref": "#/components/schemas/Video"
                  }
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "Video": {
              "title": "Video",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Name",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file.",
                  "title": "Content Type",
                  "examples": [
                    "image/png"
                  ]
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/mirelo-ai/sfx-v1/video-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/mirelo-ai/sfx-v1/video-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/mirelo-ai/sfx-v1/video-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SfxV1VideoToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/mirelo-ai/sfx-v1/video-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SfxV1VideoToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "moonvalley/marey/i2v",
      "title": "moonvalley/marey/i2v",
      "description": "Transform static images into dynamic videos with AI.",
      "task": "image-to-video",
      "endpoint": "https://queue.fal.run/moonvalley/marey/i2v",
      "category": "image-to-video",
      "thumbnailUrl": "https://fal.media/files/elephant/ZYJf9OjFksJF5QIMxEjCh_85dff19060504c08b66d4a0675788c3a.jpg",
      "playgroundUrl": "https://fal.ai/models/moonvalley/marey/i2v",
      "documentationUrl": "https://fal.ai/models/moonvalley/marey/i2v/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate a video from",
          "required": true,
          "default": "",
          "examples": [
            "Detailed Description: In a hidden jungle grotto, a majestic waterfall plunges into a dark, serene pool below. Ethereal sunbeams slice through the dense canopy high above, illuminating the swirling mist generated by the powerful cascade. The light rays dance across the scene, highlighting the vibrant green foliage that clings to the dark, wet rock walls. The constant roar of the falling water echoes through the secluded space, as the surface of the pool ripples and churns from the impact, creating a mesmerizing display of nature's raw power and tranquil beauty. Background: Brilliant sunbeams pierce through an opening in the dense jungle canopy, their ethereal rays shifting and shimmering as they cut through the misty air. Middleground: A powerful column of white water cascades down a dark, foliage-covered cliff face, creating a stark contrast with the shadowy recesses of the grotto. Foreground: The waterfall crashes into a dark, churning pool of water, sending up a fine spray and creating ever-expanding ripples across the surface."
          ]
        },
        {
          "name": "dimensions",
          "type": "string",
          "description": "The dimensions of the generated video in width x height format.",
          "required": false,
          "default": "1920x1080",
          "enum": [
            "1920x1080",
            "1080x1920",
            "1152x1152",
            "1536x1152",
            "1152x1536"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video.",
          "required": false,
          "default": "5s",
          "enum": [
            "5s",
            "10s"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt used to guide the model away from undesirable features.",
          "required": false,
          "default": "<synthetic> <scene cut> low-poly, flat shader, bad rigging, stiff animation, uncanny eyes, low-quality textures, looping glitch, cheap effect, overbloom, bloom spam, default lighting, game asset, stiff face, ugly specular, AI artifacts"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed for random number generation. Use -1 for random seed each run.",
          "required": false,
          "default": 9
        },
        {
          "name": "image_url",
          "type": "string",
          "description": "The URL of the image to use as the first frame of the video.",
          "required": true,
          "default": "",
          "examples": [
            "https://d1kaxrqq3vfrw5.cloudfront.net/fal-launch-assets/guide-assets/fal-i2v-example-input.png"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=moonvalley/marey/i2v",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for moonvalley/marey/i2v",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the moonvalley/marey/i2v queue.",
          "x-fal-metadata": {
            "endpointId": "moonvalley/marey/i2v",
            "category": "image-to-video",
            "thumbnailUrl": "https://fal.media/files/elephant/ZYJf9OjFksJF5QIMxEjCh_85dff19060504c08b66d4a0675788c3a.jpg",
            "playgroundUrl": "https://fal.ai/models/moonvalley/marey/i2v",
            "documentationUrl": "https://fal.ai/models/moonvalley/marey/i2v/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MareyI2vInput": {
              "title": "MareyInputI2V",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Detailed Description: In a hidden jungle grotto, a majestic waterfall plunges into a dark, serene pool below. Ethereal sunbeams slice through the dense canopy high above, illuminating the swirling mist generated by the powerful cascade. The light rays dance across the scene, highlighting the vibrant green foliage that clings to the dark, wet rock walls. The constant roar of the falling water echoes through the secluded space, as the surface of the pool ripples and churns from the impact, creating a mesmerizing display of nature's raw power and tranquil beauty. Background: Brilliant sunbeams pierce through an opening in the dense jungle canopy, their ethereal rays shifting and shimmering as they cut through the misty air. Middleground: A powerful column of white water cascades down a dark, foliage-covered cliff face, creating a stark contrast with the shadowy recesses of the grotto. Foreground: The waterfall crashes into a dark, churning pool of water, sending up a fine spray and creating ever-expanding ripples across the surface."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate a video from"
                },
                "duration": {
                  "enum": [
                    "5s",
                    "10s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video.",
                  "default": "5s"
                },
                "dimensions": {
                  "enum": [
                    "1920x1080",
                    "1080x1920",
                    "1152x1152",
                    "1536x1152",
                    "1152x1536"
                  ],
                  "title": "Dimensions",
                  "type": "string",
                  "description": "The dimensions of the generated video in width x height format.",
                  "default": "1920x1080"
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Seed for random number generation. Use -1 for random seed each run.",
                  "default": 9
                },
                "negative_prompt": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Negative Prompt",
                  "description": "Negative prompt used to guide the model away from undesirable features.",
                  "default": "<synthetic> <scene cut> low-poly, flat shader, bad rigging, stiff animation, uncanny eyes, low-quality textures, looping glitch, cheap effect, overbloom, bloom spam, default lighting, game asset, stiff face, ugly specular, AI artifacts"
                },
                "image_url": {
                  "examples": [
                    "https://d1kaxrqq3vfrw5.cloudfront.net/fal-launch-assets/guide-assets/fal-i2v-example-input.png"
                  ],
                  "title": "Image Url",
                  "type": "string",
                  "description": "The URL of the image to use as the first frame of the video."
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "dimensions",
                "duration",
                "negative_prompt",
                "seed",
                "image_url"
              ],
              "required": [
                "prompt",
                "image_url"
              ]
            },
            "MareyI2vOutput": {
              "title": "MareyOutput",
              "type": "object",
              "properties": {
                "video": {
                  "description": "The generated video.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/moonvalley/marey/i2v/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/i2v/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/i2v": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MareyI2vInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/i2v/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MareyI2vOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "moonvalley/marey/motion-transfer",
      "title": "moonvalley/marey/motion-transfer",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/moonvalley/marey/motion-transfer",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/koala/109Ropx2Ejswcp0dNuahi_5a78312f31ce4aa4b33f7be5953c2d95.jpg",
      "playgroundUrl": "https://fal.ai/models/moonvalley/marey/motion-transfer",
      "documentationUrl": "https://fal.ai/models/moonvalley/marey/motion-transfer/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate a video from",
          "required": true,
          "default": "",
          "examples": [
            "Detailed Description: A fast, smooth dolly shot glides forward at water level through a monumental, minimalist colonnade. The imposing, symmetrical rows of brutalist marble columns rush past on either side, their strong vertical lines creating a sense of powerful, constant motion. The dark, glassy water of a central pool perfectly reflects the towering structures, with gentle ripples disturbing the mirror image as the camera advances. The scene is cinematic and moody, with the light-colored stone contrasting against the dark water and the pale sky visible at the far end of the architectural tunnel. shot on 35mm, film, organic, analog, motion blur\n\nBackground: A pale, overcast sky and a distant treeline are framed by the opening at the end of the colonnade, growing larger as the camera moves forward.\n\nMiddleground: The two rows of massive, geometric columns recede into the distance, their uniform shapes creating a hypnotic, rhythmic pattern that rushes past the lens.\n\nForeground: The camera skims just above the surface of the dark, rippling water, which reflects the blurred motion of the columns passing on the left and right."
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to use as the control video.",
          "required": true,
          "default": "",
          "examples": [
            "https://d1kaxrqq3vfrw5.cloudfront.net/fal-launch-assets/guide-assets/fal-motion-transfer-input-5s.mp4"
          ]
        },
        {
          "name": "first_frame_image_url",
          "type": "string",
          "description": "Optional first frame image URL to use as the first frame of the generated video",
          "required": false,
          "default": "https://video-editor-files-prod.s3.us-east-2.amazonaws.com/users/1e4d46df-0702-4491-95ce-763592f33f34/uploaded-images/9b9dce1c-abd0-46c0-bac9-9454f8893b06/original"
        },
        {
          "name": "reference_image_url",
          "type": "string",
          "description": "Optional reference image URL to use for pose control or as a starting frame",
          "required": false,
          "default": ""
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt used to guide the model away from undesirable features.",
          "required": false,
          "default": "gopro, bright, contrast, static, overexposed, bright, vignette, artifacts, still, noise, texture, scanlines, videogame, 360 camera, VR, transition, flare, saturation, distorted, warped, wide angle, contrast, saturated, vibrant, glowing, cross dissolve, texture, videogame, saturation, cheesy, ugly hands, mutated hands, mutant, disfigured, extra fingers, blown out, horrible, blurry, worst quality, bad, transition, dissolve, cross-dissolve, melt, fade in, fade out, wobbly, weird, low quality, plastic, stock footage, video camera, boring, static"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed for random number generation. Use -1 for random seed each run.",
          "required": false,
          "default": 9
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=moonvalley/marey/motion-transfer",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for moonvalley/marey/motion-transfer",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the moonvalley/marey/motion-transfer queue.",
          "x-fal-metadata": {
            "endpointId": "moonvalley/marey/motion-transfer",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/koala/109Ropx2Ejswcp0dNuahi_5a78312f31ce4aa4b33f7be5953c2d95.jpg",
            "playgroundUrl": "https://fal.ai/models/moonvalley/marey/motion-transfer",
            "documentationUrl": "https://fal.ai/models/moonvalley/marey/motion-transfer/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MareyMotionTransferInput": {
              "title": "MareyInputMotionTransfer",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Detailed Description: A fast, smooth dolly shot glides forward at water level through a monumental, minimalist colonnade. The imposing, symmetrical rows of brutalist marble columns rush past on either side, their strong vertical lines creating a sense of powerful, constant motion. The dark, glassy water of a central pool perfectly reflects the towering structures, with gentle ripples disturbing the mirror image as the camera advances. The scene is cinematic and moody, with the light-colored stone contrasting against the dark water and the pale sky visible at the far end of the architectural tunnel. shot on 35mm, film, organic, analog, motion blur\n\nBackground: A pale, overcast sky and a distant treeline are framed by the opening at the end of the colonnade, growing larger as the camera moves forward.\n\nMiddleground: The two rows of massive, geometric columns recede into the distance, their uniform shapes creating a hypnotic, rhythmic pattern that rushes past the lens.\n\nForeground: The camera skims just above the surface of the dark, rippling water, which reflects the blurred motion of the columns passing on the left and right."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate a video from"
                },
                "video_url": {
                  "examples": [
                    "https://d1kaxrqq3vfrw5.cloudfront.net/fal-launch-assets/guide-assets/fal-motion-transfer-input-5s.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to use as the control video."
                },
                "first_frame_image_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "First Frame Image Url",
                  "description": "Optional first frame image URL to use as the first frame of the generated video",
                  "default": "https://video-editor-files-prod.s3.us-east-2.amazonaws.com/users/1e4d46df-0702-4491-95ce-763592f33f34/uploaded-images/9b9dce1c-abd0-46c0-bac9-9454f8893b06/original"
                },
                "reference_image_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Reference Image Url",
                  "description": "Optional reference image URL to use for pose control or as a starting frame"
                },
                "negative_prompt": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Negative Prompt",
                  "description": "Negative prompt used to guide the model away from undesirable features.",
                  "default": "gopro, bright, contrast, static, overexposed, bright, vignette, artifacts, still, noise, texture, scanlines, videogame, 360 camera, VR, transition, flare, saturation, distorted, warped, wide angle, contrast, saturated, vibrant, glowing, cross dissolve, texture, videogame, saturation, cheesy, ugly hands, mutated hands, mutant, disfigured, extra fingers, blown out, horrible, blurry, worst quality, bad, transition, dissolve, cross-dissolve, melt, fade in, fade out, wobbly, weird, low quality, plastic, stock footage, video camera, boring, static"
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Seed for random number generation. Use -1 for random seed each run.",
                  "default": 9
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "video_url",
                "first_frame_image_url",
                "reference_image_url",
                "negative_prompt",
                "seed"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "MareyMotionTransferOutput": {
              "title": "MareyOutput",
              "type": "object",
              "properties": {
                "video": {
                  "description": "The generated video.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/moonvalley/marey/motion-transfer/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/motion-transfer/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/motion-transfer": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MareyMotionTransferInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/motion-transfer/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MareyMotionTransferOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "moonvalley/marey/pose-transfer",
      "title": "moonvalley/marey/pose-transfer",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/moonvalley/marey/pose-transfer",
      "category": "video-to-video",
      "thumbnailUrl": "https://fal.media/files/rabbit/wFiWRdymluA_qihYl76wE_13a2425a72a8455190e54c46b99546e4.jpg",
      "playgroundUrl": "https://fal.ai/models/moonvalley/marey/pose-transfer",
      "documentationUrl": "https://fal.ai/models/moonvalley/marey/pose-transfer/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate a video from",
          "required": true,
          "default": "",
          "examples": [
            "Detailed Description: A venerable tribal chief, his weathered face marked with dark, ritualistic paint, stands proudly against a jungle backdrop. His elaborate headdress, a magnificent creation of numerous feathers, beads, and a central polished stone, sways gently with his movements. His initial stern expression softens into a confident smile as he begins to speak, his lips moving with unspoken words of wisdom or command. In a single, fluid motion, he raises his hand and gives a decisive wave, a gesture of both greeting and authority that underscores his leadership role within the tribe.\n\nBackground: A dense tropical rainforest is blurred into a soft, verdant backdrop, with muted greens and browns suggesting a lush, humid environment.\n\nMiddleground: The chief is the central focus, his head crowned by the large, intricate feathered headdress that moves subtly as he speaks. His shoulders and torso are visible, adorned with traditional necklaces.\n\nForeground: His hand lifts into the frame, palm open, executing a single, confident wave toward the viewer before lowering again. The closest feathers of his headdress rustle with the motion."
          ]
        },
        {
          "name": "video_url",
          "type": "string",
          "description": "The URL of the video to use as the control video.",
          "required": true,
          "default": "",
          "examples": [
            "https://d1kaxrqq3vfrw5.cloudfront.net/fal-launch-assets/guide-assets/fal-pose-transfer-input.mp4"
          ]
        },
        {
          "name": "first_frame_image_url",
          "type": "string",
          "description": "Optional first frame image URL to use as the first frame of the generated video",
          "required": false,
          "default": ""
        },
        {
          "name": "reference_image_url",
          "type": "string",
          "description": "Optional reference image URL to use for pose control or as a starting frame",
          "required": false,
          "default": ""
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt used to guide the model away from undesirable features.",
          "required": false,
          "default": "gopro, bright, contrast, static, overexposed, bright, vignette, artifacts, still, noise, texture, scanlines, videogame, 360 camera, VR, transition, flare, saturation, distorted, warped, wide angle, contrast, saturated, vibrant, glowing, cross dissolve, texture, videogame, saturation, cheesy, ugly hands, mutated hands, mutant, disfigured, extra fingers, blown out, horrible, blurry, worst quality, bad, transition, dissolve, cross-dissolve, melt, fade in, fade out, wobbly, weird, low quality, plastic, stock footage, video camera, boring, static"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed for random number generation. Use -1 for random seed each run.",
          "required": false,
          "default": 9
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=moonvalley/marey/pose-transfer",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for moonvalley/marey/pose-transfer",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the moonvalley/marey/pose-transfer queue.",
          "x-fal-metadata": {
            "endpointId": "moonvalley/marey/pose-transfer",
            "category": "video-to-video",
            "thumbnailUrl": "https://fal.media/files/rabbit/wFiWRdymluA_qihYl76wE_13a2425a72a8455190e54c46b99546e4.jpg",
            "playgroundUrl": "https://fal.ai/models/moonvalley/marey/pose-transfer",
            "documentationUrl": "https://fal.ai/models/moonvalley/marey/pose-transfer/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MareyPoseTransferInput": {
              "title": "MareyInputPoseTransfer",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Detailed Description: A venerable tribal chief, his weathered face marked with dark, ritualistic paint, stands proudly against a jungle backdrop. His elaborate headdress, a magnificent creation of numerous feathers, beads, and a central polished stone, sways gently with his movements. His initial stern expression softens into a confident smile as he begins to speak, his lips moving with unspoken words of wisdom or command. In a single, fluid motion, he raises his hand and gives a decisive wave, a gesture of both greeting and authority that underscores his leadership role within the tribe.\n\nBackground: A dense tropical rainforest is blurred into a soft, verdant backdrop, with muted greens and browns suggesting a lush, humid environment.\n\nMiddleground: The chief is the central focus, his head crowned by the large, intricate feathered headdress that moves subtly as he speaks. His shoulders and torso are visible, adorned with traditional necklaces.\n\nForeground: His hand lifts into the frame, palm open, executing a single, confident wave toward the viewer before lowering again. The closest feathers of his headdress rustle with the motion."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate a video from"
                },
                "video_url": {
                  "examples": [
                    "https://d1kaxrqq3vfrw5.cloudfront.net/fal-launch-assets/guide-assets/fal-pose-transfer-input.mp4"
                  ],
                  "title": "Video Url",
                  "type": "string",
                  "description": "The URL of the video to use as the control video."
                },
                "first_frame_image_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "First Frame Image Url",
                  "description": "Optional first frame image URL to use as the first frame of the generated video"
                },
                "reference_image_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Reference Image Url",
                  "description": "Optional reference image URL to use for pose control or as a starting frame"
                },
                "negative_prompt": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Negative Prompt",
                  "description": "Negative prompt used to guide the model away from undesirable features.",
                  "default": "gopro, bright, contrast, static, overexposed, bright, vignette, artifacts, still, noise, texture, scanlines, videogame, 360 camera, VR, transition, flare, saturation, distorted, warped, wide angle, contrast, saturated, vibrant, glowing, cross dissolve, texture, videogame, saturation, cheesy, ugly hands, mutated hands, mutant, disfigured, extra fingers, blown out, horrible, blurry, worst quality, bad, transition, dissolve, cross-dissolve, melt, fade in, fade out, wobbly, weird, low quality, plastic, stock footage, video camera, boring, static"
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Seed for random number generation. Use -1 for random seed each run.",
                  "default": 9
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "video_url",
                "first_frame_image_url",
                "reference_image_url",
                "negative_prompt",
                "seed"
              ],
              "required": [
                "prompt",
                "video_url"
              ]
            },
            "MareyPoseTransferOutput": {
              "title": "MareyOutput",
              "type": "object",
              "properties": {
                "video": {
                  "description": "The generated video.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/moonvalley/marey/pose-transfer/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/pose-transfer/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/pose-transfer": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MareyPoseTransferInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/pose-transfer/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MareyPoseTransferOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "moonvalley/marey/t2v",
      "title": "moonvalley/marey/t2v",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/moonvalley/marey/t2v",
      "category": "text-to-video",
      "thumbnailUrl": "https://fal.media/files/zebra/XqLulT-Va4wv0SoknC72P_504081bd51c84280b787bc27906b490e.jpg",
      "playgroundUrl": "https://fal.ai/models/moonvalley/marey/t2v",
      "documentationUrl": "https://fal.ai/models/moonvalley/marey/t2v/api",
      "inputs": [
        {
          "name": "prompt",
          "type": "string",
          "description": "The prompt to generate a video from",
          "required": true,
          "default": "",
          "examples": [
            "Detailed Description: A small, white paper boat, with one corner engulfed in bright orange flames, drifts precariously across a dark puddle on wet asphalt. As raindrops fall, they create ever-expanding ripples on the water's surface, gently rocking the fragile vessel and causing the fiery reflection below to dance and shimmer. The flickering flame slowly consumes the paper, charring the edges black as the boat becomes waterlogged, beginning to sink in a poignant slow-motion battle between fire and water. Background: The background is softly blurred, suggesting an overcast day with out-of-focus foliage, enhancing the scene's intimate and melancholic mood. Middleground: Raindrops continuously strike the puddle's surface, creating concentric ripples that gently push the boat along its short, determined voyage. Foreground: The burning paper boat floats in sharp focus, its bright, flickering flame casting a warm, dramatic glow that reflects and distorts on the dark, wet surface of the asphalt."
          ]
        },
        {
          "name": "dimensions",
          "type": "string",
          "description": "The dimensions of the generated video in width x height format.",
          "required": false,
          "default": "1920x1080",
          "enum": [
            "1920x1080",
            "1152x1152",
            "1536x1152",
            "1152x1536"
          ]
        },
        {
          "name": "duration",
          "type": "string",
          "description": "The duration of the generated video.",
          "required": false,
          "default": "5s",
          "enum": [
            "5s",
            "10s"
          ]
        },
        {
          "name": "negative_prompt",
          "type": "string",
          "description": "Negative prompt used to guide the model away from undesirable features.",
          "required": false,
          "default": "<synthetic> <scene cut> low-poly, flat shader, bad rigging, stiff animation, uncanny eyes, low-quality textures, looping glitch, cheap effect, overbloom, bloom spam, default lighting, game asset, stiff face, ugly specular, AI artifacts"
        },
        {
          "name": "seed",
          "type": "integer",
          "description": "Seed for random number generation. Use -1 for random seed each run.",
          "required": false,
          "default": 9
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "The generated video."
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=moonvalley/marey/t2v",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for moonvalley/marey/t2v",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the moonvalley/marey/t2v queue.",
          "x-fal-metadata": {
            "endpointId": "moonvalley/marey/t2v",
            "category": "text-to-video",
            "thumbnailUrl": "https://fal.media/files/zebra/XqLulT-Va4wv0SoknC72P_504081bd51c84280b787bc27906b490e.jpg",
            "playgroundUrl": "https://fal.ai/models/moonvalley/marey/t2v",
            "documentationUrl": "https://fal.ai/models/moonvalley/marey/t2v/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "MareyT2vInput": {
              "title": "MareyInputT2V",
              "type": "object",
              "properties": {
                "prompt": {
                  "examples": [
                    "Detailed Description: A small, white paper boat, with one corner engulfed in bright orange flames, drifts precariously across a dark puddle on wet asphalt. As raindrops fall, they create ever-expanding ripples on the water's surface, gently rocking the fragile vessel and causing the fiery reflection below to dance and shimmer. The flickering flame slowly consumes the paper, charring the edges black as the boat becomes waterlogged, beginning to sink in a poignant slow-motion battle between fire and water. Background: The background is softly blurred, suggesting an overcast day with out-of-focus foliage, enhancing the scene's intimate and melancholic mood. Middleground: Raindrops continuously strike the puddle's surface, creating concentric ripples that gently push the boat along its short, determined voyage. Foreground: The burning paper boat floats in sharp focus, its bright, flickering flame casting a warm, dramatic glow that reflects and distorts on the dark, wet surface of the asphalt."
                  ],
                  "title": "Prompt",
                  "type": "string",
                  "description": "The prompt to generate a video from"
                },
                "duration": {
                  "enum": [
                    "5s",
                    "10s"
                  ],
                  "title": "Duration",
                  "type": "string",
                  "description": "The duration of the generated video.",
                  "default": "5s"
                },
                "dimensions": {
                  "enum": [
                    "1920x1080",
                    "1152x1152",
                    "1536x1152",
                    "1152x1536"
                  ],
                  "title": "Dimensions",
                  "type": "string",
                  "description": "The dimensions of the generated video in width x height format.",
                  "default": "1920x1080"
                },
                "seed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seed",
                  "description": "Seed for random number generation. Use -1 for random seed each run.",
                  "default": 9
                },
                "negative_prompt": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Negative Prompt",
                  "description": "Negative prompt used to guide the model away from undesirable features.",
                  "default": "<synthetic> <scene cut> low-poly, flat shader, bad rigging, stiff animation, uncanny eyes, low-quality textures, looping glitch, cheap effect, overbloom, bloom spam, default lighting, game asset, stiff face, ugly specular, AI artifacts"
                }
              },
              "x-fal-order-properties": [
                "prompt",
                "dimensions",
                "duration",
                "negative_prompt",
                "seed"
              ],
              "required": [
                "prompt"
              ]
            },
            "MareyT2vOutput": {
              "title": "MareyOutput",
              "type": "object",
              "properties": {
                "video": {
                  "description": "The generated video.",
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes."
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided."
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file."
                },
                "url": {
                  "title": "Url",
                  "type": "string",
                  "description": "The URL where the file can be downloaded from."
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/moonvalley/marey/t2v/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/t2v/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/t2v": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MareyT2vInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/moonvalley/marey/t2v/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MareyT2vOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "veed/avatars/text-to-video",
      "title": "veed/avatars/text-to-video",
      "description": "Generate high-quality videos from text descriptions.",
      "task": "text-to-video",
      "endpoint": "https://queue.fal.run/veed/avatars/text-to-video",
      "category": "text-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/veed_logo.webp",
      "playgroundUrl": "https://fal.ai/models/veed/avatars/text-to-video",
      "documentationUrl": "https://fal.ai/models/veed/avatars/text-to-video/api",
      "inputs": [
        {
          "name": "avatar_id",
          "type": "string",
          "description": "The avatar to use for the video",
          "required": true,
          "default": "",
          "enum": [
            "emily_vertical_primary",
            "emily_vertical_secondary",
            "marcus_vertical_primary",
            "marcus_vertical_secondary",
            "mira_vertical_primary",
            "mira_vertical_secondary",
            "jasmine_vertical_primary",
            "jasmine_vertical_secondary",
            "jasmine_vertical_walking",
            "aisha_vertical_walking",
            "elena_vertical_primary",
            "elena_vertical_secondary",
            "any_male_vertical_primary",
            "any_female_vertical_primary",
            "any_male_vertical_secondary",
            "any_female_vertical_secondary",
            "any_female_vertical_walking",
            "emily_primary",
            "emily_side",
            "marcus_primary",
            "marcus_side",
            "aisha_walking",
            "elena_primary",
            "elena_side",
            "any_male_primary",
            "any_female_primary",
            "any_male_side",
            "any_female_side"
          ]
        },
        {
          "name": "text",
          "type": "string",
          "description": "Text",
          "required": true,
          "default": "",
          "examples": [
            "\nEver wondered how to get that flawless glow? \nIntroducing our new skincare line, designed for real life. \nStep one: Cleanse with our gentle, nourishing formula. \nStep two: Apply our hydrating serum for that dewy look. \nStep three: Lock it in with our lightweight moisturizer. \nFeel the difference with every application. \nSee the glow? That's the magic of our skincare. \nUse code 'GLOW20' for an exclusive discount. \nJoin the skincare revolution today!\n"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "Output: video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=veed/avatars/text-to-video",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for veed/avatars/text-to-video",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the veed/avatars/text-to-video queue.",
          "x-fal-metadata": {
            "endpointId": "veed/avatars/text-to-video",
            "category": "text-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/veed_logo.webp",
            "playgroundUrl": "https://fal.ai/models/veed/avatars/text-to-video",
            "documentationUrl": "https://fal.ai/models/veed/avatars/text-to-video/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "AvatarsTextToVideoInput": {
              "title": "Text2VideoInput",
              "type": "object",
              "properties": {
                "text": {
                  "examples": [
                    "\nEver wondered how to get that flawless glow? \nIntroducing our new skincare line, designed for real life. \nStep one: Cleanse with our gentle, nourishing formula. \nStep two: Apply our hydrating serum for that dewy look. \nStep three: Lock it in with our lightweight moisturizer. \nFeel the difference with every application. \nSee the glow? That's the magic of our skincare. \nUse code 'GLOW20' for an exclusive discount. \nJoin the skincare revolution today!\n"
                  ],
                  "title": "Text",
                  "type": "string"
                },
                "avatar_id": {
                  "enum": [
                    "emily_vertical_primary",
                    "emily_vertical_secondary",
                    "marcus_vertical_primary",
                    "marcus_vertical_secondary",
                    "mira_vertical_primary",
                    "mira_vertical_secondary",
                    "jasmine_vertical_primary",
                    "jasmine_vertical_secondary",
                    "jasmine_vertical_walking",
                    "aisha_vertical_walking",
                    "elena_vertical_primary",
                    "elena_vertical_secondary",
                    "any_male_vertical_primary",
                    "any_female_vertical_primary",
                    "any_male_vertical_secondary",
                    "any_female_vertical_secondary",
                    "any_female_vertical_walking",
                    "emily_primary",
                    "emily_side",
                    "marcus_primary",
                    "marcus_side",
                    "aisha_walking",
                    "elena_primary",
                    "elena_side",
                    "any_male_primary",
                    "any_female_primary",
                    "any_male_side",
                    "any_female_side"
                  ],
                  "description": "The avatar to use for the video",
                  "type": "string",
                  "title": "Avatar Id"
                }
              },
              "x-fal-order-properties": [
                "avatar_id",
                "text"
              ],
              "required": [
                "avatar_id",
                "text"
              ]
            },
            "AvatarsTextToVideoOutput": {
              "title": "AvatarsAppOutput",
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/panda/kt9d4vZ8Mfw_WzYnvr2Q0_tmp0ir4znsr.mp4"
                    }
                  ],
                  "$ref": "#/components/schemas/File"
                }
              },
              "x-fal-order-properties": [
                "video"
              ],
              "required": [
                "video"
              ]
            },
            "File": {
              "title": "File",
              "type": "object",
              "properties": {
                "file_size": {
                  "examples": [
                    4404019
                  ],
                  "description": "The size of the file in bytes.",
                  "title": "File Size",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "file_name": {
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "title": "File Name",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "content_type": {
                  "examples": [
                    "image/png"
                  ],
                  "description": "The mime type of the file.",
                  "title": "Content Type",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                }
              },
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/veed/avatars/text-to-video/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/veed/avatars/text-to-video/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/veed/avatars/text-to-video": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AvatarsTextToVideoInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/veed/avatars/text-to-video/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AvatarsTextToVideoOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    {
      "id": "veed/lipsync",
      "title": "veed/lipsync",
      "description": "Transform and edit existing videos with AI.",
      "task": "video-to-video",
      "endpoint": "https://queue.fal.run/veed/lipsync",
      "category": "video-to-video",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/veed_logo.webp",
      "playgroundUrl": "https://fal.ai/models/veed/lipsync",
      "documentationUrl": "https://fal.ai/models/veed/lipsync/api",
      "inputs": [
        {
          "name": "video_url",
          "type": "string",
          "description": "Video Url",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/monkey/q1fDPhrpfjfsaRmbhTed4_influencer.mp4"
          ]
        },
        {
          "name": "audio_url",
          "type": "string",
          "description": "Audio Url",
          "required": true,
          "default": "",
          "examples": [
            "https://v3.fal.media/files/rabbit/Ql3ade3wEKlZXRQLRbhxm_tts.mp3"
          ]
        }
      ],
      "outputs": [
        {
          "name": "video",
          "type": "string",
          "description": "Output: video"
        }
      ],
      "source": "https://fal.ai/api/openapi/queue/openapi.json?endpoint_id=veed/lipsync",
      "schema": {
        "openapi": "3.0.4",
        "info": {
          "title": "Queue OpenAPI for veed/lipsync",
          "version": "1.0.0",
          "description": "The OpenAPI schema for the veed/lipsync queue.",
          "x-fal-metadata": {
            "endpointId": "veed/lipsync",
            "category": "video-to-video",
            "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/veed_logo.webp",
            "playgroundUrl": "https://fal.ai/models/veed/lipsync",
            "documentationUrl": "https://fal.ai/models/veed/lipsync/api"
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "Authorization",
              "description": "Fal Key"
            }
          },
          "schemas": {
            "QueueStatus": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_QUEUE",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "request_id": {
                  "type": "string",
                  "description": "The request id."
                },
                "response_url": {
                  "type": "string",
                  "description": "The response url."
                },
                "status_url": {
                  "type": "string",
                  "description": "The status url."
                },
                "cancel_url": {
                  "type": "string",
                  "description": "The cancel url."
                },
                "logs": {
                  "type": "object",
                  "description": "The logs.",
                  "additionalProperties": true
                },
                "metrics": {
                  "type": "object",
                  "description": "The metrics.",
                  "additionalProperties": true
                },
                "queue_position": {
                  "type": "integer",
                  "description": "The queue position."
                }
              },
              "required": [
                "status",
                "request_id"
              ]
            },
            "LipsyncInput": {
              "x-fal-order-properties": [
                "video_url",
                "audio_url"
              ],
              "type": "object",
              "properties": {
                "video_url": {
                  "format": "uri",
                  "maxLength": 2083,
                  "type": "string",
                  "minLength": 1,
                  "examples": [
                    "https://v3.fal.media/files/monkey/q1fDPhrpfjfsaRmbhTed4_influencer.mp4"
                  ],
                  "title": "Video Url"
                },
                "audio_url": {
                  "format": "uri",
                  "maxLength": 2083,
                  "type": "string",
                  "minLength": 1,
                  "examples": [
                    "https://v3.fal.media/files/rabbit/Ql3ade3wEKlZXRQLRbhxm_tts.mp3"
                  ],
                  "title": "Audio Url"
                }
              },
              "title": "LipsyncInput",
              "required": [
                "video_url",
                "audio_url"
              ]
            },
            "LipsyncOutput": {
              "x-fal-order-properties": [
                "video"
              ],
              "type": "object",
              "properties": {
                "video": {
                  "examples": [
                    {
                      "content_type": "video/mp4",
                      "url": "https://v3.fal.media/files/penguin/PsA4BJPGAojXKW2QGztm4_tmpe_e1cgbq.mp4"
                    }
                  ],
                  "$ref": "#/components/schemas/File"
                }
              },
              "title": "LipsyncAppOutput",
              "required": [
                "video"
              ]
            },
            "File": {
              "x-fal-order-properties": [
                "url",
                "content_type",
                "file_name",
                "file_size"
              ],
              "type": "object",
              "properties": {
                "file_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The size of the file in bytes.",
                  "examples": [
                    4404019
                  ],
                  "title": "File Size"
                },
                "file_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The name of the file. It will be auto-generated if not provided.",
                  "examples": [
                    "z9RV14K95DvU.png"
                  ],
                  "title": "File Name"
                },
                "content_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The mime type of the file.",
                  "examples": [
                    "image/png"
                  ],
                  "title": "Content Type"
                },
                "url": {
                  "description": "The URL where the file can be downloaded from.",
                  "type": "string",
                  "title": "Url"
                }
              },
              "title": "File",
              "required": [
                "url"
              ]
            }
          }
        },
        "paths": {
          "/veed/lipsync/requests/{request_id}/status": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                },
                {
                  "name": "logs",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "number",
                    "description": "Whether to include logs (`1`) in the response or not (`0`)."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/veed/lipsync/requests/{request_id}/cancel": {
            "put": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The request was cancelled.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Whether the request was cancelled successfully."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/veed/lipsync": {
            "post": {
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LipsyncInput"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The request status.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QueueStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "/veed/lipsync/requests/{request_id}": {
            "get": {
              "parameters": [
                {
                  "name": "request_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Result of the request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LipsyncOutput"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://queue.fal.run"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "modelId": "fal-ai/wan/v2.1/1.3b/text-to-video",
      "error": "Failed to fetch schema"
    }
  ]
}